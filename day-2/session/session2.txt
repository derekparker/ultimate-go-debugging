(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) continue main.go:33
Breakpoint 1 set at 0x4c0d61 for main.produceValues() ./main.go:33
> main.produceValues() ./main.go:33 (hits goroutine(19):1 total:1) (PC: 0x4c0d61)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) list -5
Showing /home/deparker/Code/workshops/march-monthly-2023/ultimate-go-debugging/day-2/session/main.go:28 (PC: 0x0)
    23:	func produceValues(ctx context.Context, wg *sync.WaitGroup, ch chan<- packet) {
    24:		// Let WaitGroup know we're finished executing.
    25:		defer wg.Done()
    26:		// Create a bytes buffer of length 64.
    27:		buf := make([]byte, 1<<6)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
(dlv) args
ctx = context.Context(*context.cancelCtx) 0xc00018ff98
wg = (*sync.WaitGroup)(0xc00001a170)
ch = chan<- main.packet 0/0
(dlv) locals
buf = []uint8 len: 64, cap: 64, [...]
id = 5166162923497843535
(dlv) print buf[0]
0
(dlv) print buf[1]
0
(dlv) print buf[2:16]
[]uint8 len: 14, cap: 14, [0,0,0,0,0,0,0,0,0,0,0,0,0,0]
(dlv) help display
Print value of an expression every time the program stops.

	display -a [%format] <expression>
	display -d <number>

The '-a' option adds an expression to the list of expression printed every time the program stops. The '-d' option removes the specified expression from the list.

If display is called without arguments it will print the value of all expression in the list.
(dlv) print id
5166162923497843535
(dlv) display -a id
0: id = 5166162923497843535
(dlv) next
> main.produceValues() ./main.go:37 (PC: 0x4c0dd9)
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
=>  37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
0: id = 5166162923497843535
(dlv) next
> main.produceValues() ./main.go:39 (PC: 0x4c0e28)
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
=>  39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
    44:			}
0: id = 5166162923497843535
(dlv) next
> main.produceValues() ./main.go:42 (PC: 0x4c0e4a)
    37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
=>  42:			case ch <- p:
    43:				// Do nothing.
    44:			}
    45:	
    46:			id -= 16
    47:	
0: id = 5166162923497843535
(dlv) 
> main.produceValues() ./main.go:38 (PC: 0x4c0e9a)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
0: id = 5166162923497843535
(dlv) 
> main.produceValues() ./main.go:39 (PC: 0x4c0eac)
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
=>  39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
    44:			}
0: id = 5166162923497843535
(dlv) 
> main.produceValues() ./main.go:42 (PC: 0x4c0ebc)
    37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
=>  42:			case ch <- p:
    43:				// Do nothing.
    44:			}
    45:	
    46:			id -= 16
    47:	
0: id = 5166162923497843535
(dlv) 
> main.produceValues() ./main.go:38 (PC: 0x4c0edc)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
0: id = 5166162923497843535
(dlv) 
> main.produceValues() ./main.go:42 (PC: 0x4c0f1f)
    37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
=>  42:			case ch <- p:
    43:				// Do nothing.
    44:			}
    45:	
    46:			id -= 16
    47:	
0: id = 5166162923497843535
(dlv) 
> main.produceValues() ./main.go:46 (PC: 0x4c0f2b)
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
    44:			}
    45:	
=>  46:			id -= 16
    47:	
    48:			// Sleep 0.5 seconds.
    49:			time.Sleep(10 * time.Millisecond)
    50:		}
    51:	}
0: id = 5166162923497843535
(dlv) 
> main.produceValues() ./main.go:49 (PC: 0x4c0f31)
    44:			}
    45:	
    46:			id -= 16
    47:	
    48:			// Sleep 0.5 seconds.
=>  49:			time.Sleep(10 * time.Millisecond)
    50:		}
    51:	}
    52:	
    53:	func consumeValues(ctx context.Context, wg *sync.WaitGroup, ch <-chan packet) {
    54:		// Let WaitGroup know we're finished executing.
0: id = 5166162923497843519
(dlv) display -d 0
(dlv) next
> main.produceValues() ./main.go:31 (PC: 0x4c0f40)
    26:		// Create a bytes buffer of length 64.
    27:		buf := make([]byte, 1<<6)
    28:	
    29:		for {
    30:			// Create a random ID.
=>  31:			id := rand.Int()
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
(dlv) list
> main.produceValues() ./main.go:31 (PC: 0x4c0f40)
    26:		// Create a bytes buffer of length 64.
    27:		buf := make([]byte, 1<<6)
    28:	
    29:		for {
    30:			// Create a random ID.
=>  31:			id := rand.Int()
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
(dlv) continue main.go:38
Breakpoint 2 set at 0x4c0e9a for main.produceValues() ./main.go:38
> main.produceValues() ./main.go:38 (hits goroutine(19):1 total:1) (PC: 0x4c0e9a)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
(dlv) print p
main.packet {
	id: 8036719864606862232,
	val: []uint8 len: 64, cap: 64, [176,130,217,55,78,46,33,210,102,230,229,203,122,101,210,216,176,226,143,100,165,180,221,253,65,140,26,186,149,100,163,165,113,156,63,7,81,41,231,222,208,200,99,33,104,52,96,140,60,8,75,154,9,0,132,163,79,184,242,227,215,34,186,127],}
(dlv) print p.id
8036719864606862232
(dlv) print p.val
[]uint8 len: 64, cap: 64, [176,130,217,55,78,46,33,210,102,230,229,203,122,101,210,216,176,226,143,100,165,180,221,253,65,140,26,186,149,100,163,165,113,156,63,7,81,41,231,222,208,200,99,33,104,52,96,140,60,8,75,154,9,0,132,163,79,184,242,227,215,34,186,127]
(dlv) print p.val[0]
176
(dlv) print p.val[0:16]
[]uint8 len: 16, cap: 16, [176,130,217,55,78,46,33,210,102,230,229,203,122,101,210,216]
(dlv) print &p
(*main.packet)(0xc00018ff20)
(dlv) help examinemem
Examine raw memory at the given address.

Examine memory:

	examinemem [-fmt <format>] [-count|-len <count>] [-size <size>] <address>
	examinemem [-fmt <format>] [-count|-len <count>] [-size <size>] -x <expression>

Format represents the data format and the value is one of this list (default hex): bin(binary), oct(octal), dec(decimal), hex(hexadecimal).
Length is the number of bytes (default 1) and must be less than or equal to 1000.
Address is the memory location of the target to examine. Please note '-len' is deprecated by '-count and -size'.
Expression can be an integer expression or pointer value of the memory location to examine.

For example:

    x -fmt hex -count 20 -size 1 0xc00008af38
    x -fmt hex -count 20 -size 1 -x 0xc00008af38 + 8
    x -fmt hex -count 20 -size 1 -x &myVar
    x -fmt hex -count 20 -size 1 -x myPtrVar
(dlv) x -fmt hex -count 20 0xc00018ff20
0xc00018ff20:   0x98   0xab   0x37   0xf1   0x22   0x2a   0x88   0x6f   
0xc00018ff28:   0x00   0x40   0x19   0x00   0xc0   0x00   0x00   0x00   
0xc00018ff30:   0x40   0x00   0x00   0x00   
(dlv) print p
main.packet {
	id: 8036719864606862232,
	val: []uint8 len: 64, cap: 64, [176,130,217,55,78,46,33,210,102,230,229,203,122,101,210,216,176,226,143,100,165,180,221,253,65,140,26,186,149,100,163,165,113,156,63,7,81,41,231,222,208,200,99,33,104,52,96,140,60,8,75,154,9,0,132,163,79,184,242,227,215,34,186,127],}
(dlv) x -fmt hex -count 32 0xc00018ff20
0xc00018ff20:   0x98   0xab   0x37   0xf1   0x22   0x2a   0x88   0x6f   
0xc00018ff28:   0x00   0x40   0x19   0x00   0xc0   0x00   0x00   0x00   
0xc00018ff30:   0x40   0x00   0x00   0x00   0x00   0x00   0x00   0x00   
0xc00018ff38:   0x40   0x00   0x00   0x00   0x00   0x00   0x00   0x00   
(dlv) whatis p
main.packet
(dlv) print p.id
8036719864606862232
(dlv) set p.id = 500
(dlv) print p
main.packet {
	id: 500,
	val: []uint8 len: 64, cap: 64, [176,130,217,55,78,46,33,210,102,230,229,203,122,101,210,216,176,226,143,100,165,180,221,253,65,140,26,186,149,100,163,165,113,156,63,7,81,41,231,222,208,200,99,33,104,52,96,140,60,8,75,154,9,0,132,163,79,184,242,227,215,34,186,127],}
(dlv) print p.id
500
(dlv) regs
    Rip = 0x00000000004c0e9a
    Rsp = 0x000000c00018fdd8
    Rax = 0x000000c000184060
    Rbx = 0x0000000000000040
    Rcx = 0x000000c000194000
    Rdx = 0x0000000000000040
    Rsi = 0x6f882a22f137ab98
    Rdi = 0x000000c00018fce8
    Rbp = 0x000000c00018ff80
     R8 = 0x000000c0000ba170
     R9 = 0x000000c0000ba178
    R10 = 0x00000000004edbe8
    R11 = 0x00000000004edbe8
    R12 = 0x000000c00018fd88
    R13 = 0x0000000000000000
    R14 = 0x000000c000180340
    R15 = 0x0000000000000000
 Rflags = 0x0000000000000212	[AF IF IOPL=0]
     Es = 0x0000000000000000
     Cs = 0x0000000000000033
     Ss = 0x000000000000002b
     Ds = 0x0000000000000000
     Fs = 0x0000000000000000
     Gs = 0x0000000000000000
Fs_base = 0x000000c000100090
Gs_base = 0x0000000000000000

(dlv) regs -a
    Rip = 0x00000000004c0e9a
    Rsp = 0x000000c00018fdd8
    Rax = 0x000000c000184060
    Rbx = 0x0000000000000040
    Rcx = 0x000000c000194000
    Rdx = 0x0000000000000040
    Rsi = 0x6f882a22f137ab98
    Rdi = 0x000000c00018fce8
    Rbp = 0x000000c00018ff80
     R8 = 0x000000c0000ba170
     R9 = 0x000000c0000ba178
    R10 = 0x00000000004edbe8
    R11 = 0x00000000004edbe8
    R12 = 0x000000c00018fd88
    R13 = 0x0000000000000000
    R14 = 0x000000c000180340
    R15 = 0x0000000000000000
   XMM0 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
   XMM1 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
   XMM2 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
   XMM3 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
   XMM4 = 0x000000c0001940000000000000415cba	v2_int={ 0000000000415cba 000000c000194000 }	v4_int={ 00415cba 00000000 00194000 000000c0 }	v8_int={ 5cba 0041 0000 0000 4000 0019 00c0 0000 }	v16_int={ ba 5c 41 00 00 00 00 00 00 40 19 00 c0 00 00 00 }	v2_float={ 2.1163687e-317 4.074240094373e-312 }	v4_float={ 6.002571e-39 0 2.318846e-39 2.69e-43 }
   XMM5 = 0x00000000004c1dd5000000c0000817d0	v2_int={ 000000c0000817d0 00000000004c1dd5 }	v4_int={ 000817d0 000000c0 004c1dd5 00000000 }	v8_int={ 17d0 0008 00c0 0000 1dd5 004c 0000 0000 }	v16_int={ d0 17 08 00 c0 00 00 00 d5 1d 4c 00 00 00 00 00 }	v2_float={ 4.0742345391e-312 2.4645837e-317 }	v4_float={ 7.43226e-40 2.69e-43 6.9902e-39 0 }
   XMM6 = 0x000000c0000b005000000000004edc90	v2_int={ 00000000004edc90 000000c0000b0050 }	v4_int={ 004edc90 00000000 000b0050 000000c0 }	v8_int={ dc90 004e 0000 0000 0050 000b 00c0 0000 }	v16_int={ 90 dc 4e 00 00 00 00 00 50 00 0b 00 c0 00 00 00 }	v2_float={ 2.5534656e-317 4.07423548075e-312 }	v4_float={ 7.242292e-39 0 1.010303e-39 2.69e-43 }
   XMM7 = 0x000000c000184000000000c00001a170	v2_int={ 000000c00001a170 000000c000184000 }	v4_int={ 0001a170 000000c0 00184000 000000c0 }	v8_int={ a170 0001 00c0 0000 4000 0018 00c0 0000 }	v16_int={ 70 a1 01 00 c0 00 00 00 00 40 18 00 c0 00 00 00 }	v2_float={ 4.07423244663e-312 4.07423977058e-312 }	v4_float={ 1.49748e-40 2.69e-43 2.227011e-39 2.69e-43 }
   XMM8 = 0x000000c00001a170000000c000184000	v2_int={ 000000c000184000 000000c00001a170 }	v4_int={ 00184000 000000c0 0001a170 000000c0 }	v8_int={ 4000 0018 00c0 0000 a170 0001 00c0 0000 }	v16_int={ 00 40 18 00 c0 00 00 00 70 a1 01 00 c0 00 00 00 }	v2_float={ 4.07423977058e-312 4.07423244663e-312 }	v4_float={ 2.227011e-39 2.69e-43 1.49748e-40 2.69e-43 }
   XMM9 = 0x000000c0000b005000000000004edc90	v2_int={ 00000000004edc90 000000c0000b0050 }	v4_int={ 004edc90 00000000 000b0050 000000c0 }	v8_int={ dc90 004e 0000 0000 0050 000b 00c0 0000 }	v16_int={ 90 dc 4e 00 00 00 00 00 50 00 0b 00 c0 00 00 00 }	v2_float={ 2.5534656e-317 4.07423548075e-312 }	v4_float={ 7.242292e-39 0 1.010303e-39 2.69e-43 }
  XMM10 = 0x000000000046ab810000000000000000	v2_int={ 0000000000000000 000000000046ab81 }	v4_int={ 00000000 00000000 0046ab81 00000000 }	v8_int={ 0000 0000 0000 0000 ab81 0046 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 81 ab 46 00 00 00 00 00 }	v2_float={ 0 2.288228e-317 }	v4_float={ 0 0 6.490009e-39 0 }
  XMM11 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM12 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM13 = 0x752f3a2f65726168732f6c61636f6c2f	v2_int={ 732f6c61636f6c2f 752f3a2f65726168 }	v4_int={ 636f6c2f 732f6c61 65726168 752f3a2f }	v8_int={ 6c2f 636f 6c61 732f 6168 6572 3a2f 752f }	v16_int={ 2f 6c 6f 63 61 6c 2f 73 68 61 72 65 2f 3a 2f 75 }	v2_float={ 6.86592573024644e+246 2.9304921623014188e+256 }	v4_float={ 4.4165673e+21 1.389847e+31 7.1538095e+22 2.2212697e+32 }
  XMM14 = 0x6c2f7261762f3a2f65726168732f7273	v2_int={ 65726168732f7273 6c2f7261762f3a2f }	v4_int={ 732f7273 65726168 762f3a2f 6c2f7261 }	v8_int={ 7273 732f 6168 6572 3a2f 762f 7261 6c2f }	v16_int={ 73 72 2f 73 68 61 72 65 2f 3a 2f 76 61 72 2f 6c }	v2_float={ 4.766885689801526e+180 1.3233155184909482e+213 }	v4_float={ 1.3900349e+31 7.1538095e+22 8.885079e+32 8.484086e+26 }
  XMM15 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  ST(0) = 0x00000000000000000000	0
  ST(1) = 0x00000000000000000000	0
  ST(2) = 0x00000000000000000000	0
  ST(3) = 0x00000000000000000000	0
  ST(4) = 0x00000000000000000000	0
  ST(5) = 0x00000000000000000000	0
  ST(6) = 0x00000000000000000000	0
  ST(7) = 0x00000000000000000000	0
 Rflags = 0x0000000000000212	[AF IF IOPL=0]
     Es = 0x0000000000000000
     Cs = 0x0000000000000033
     Ss = 0x000000000000002b
     Ds = 0x0000000000000000
     Fs = 0x0000000000000000
     Gs = 0x0000000000000000
Fs_base = 0x000000c000100090
Gs_base = 0x0000000000000000
  MXCSR = 0x00001fa0	[RZ/RN=0 PM UM OM ZM DM IM PE]
     CW = 0x037f
     SW = 0x0000

(dlv) goroutines
  Goroutine 1 - User: /home/deparker/Code/goroot/src/runtime/sema.go:62 sync.runtime_Semacquire (0x467387) [semacquire]
  Goroutine 2 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [force gc (idle)]
  Goroutine 3 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC sweep wait]
  Goroutine 4 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC scavenge wait]
  Goroutine 5 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [finalizer wait]
  Goroutine 6 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [select]
  Goroutine 17 - User: /home/deparker/Code/goroot/src/runtime/sigqueue.go:152 os/signal.signal_recv (0x4676ef) (thread 2413502)
  Goroutine 18 - User: ./main.go:97 main.main.func1 (0x4c1ea9) [chan receive]
* Goroutine 19 - User: ./main.go:38 main.produceValues (0x4c0e9a) (thread 2413504)
  Goroutine 20 - User: ./main.go:60 main.consumeValues (0x4c11d6) [select]
[10 goroutines]
(dlv) list
> main.produceValues() ./main.go:38 (PC: 0x4c0e9a)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
(dlv) help goroutines
List program goroutines.

	goroutines [-u|-r|-g|-s] [-t [depth]] [-l] [-with loc expr] [-without loc expr] [-group argument] [-exec command]

Print out info for every goroutine. The flag controls what information is shown along with each goroutine:

	-u	displays location of topmost stackframe in user code (default)
	-r	displays location of topmost stackframe (including frames inside private runtime functions)
	-g	displays location of go instruction that created the goroutine
	-s	displays location of the start function
	-t	displays goroutine's stacktrace (an optional depth value can be specified, default: 10)
	-l	displays goroutine's labels

If no flag is specified the default is -u, i.e. the first frame within the first 30 frames that is not executing a runtime private function.

FILTERING

If -with or -without are specified only goroutines that match the given condition are returned.

To only display goroutines where the specified location contains (or does not contain, for -without and -wo) expr as a substring, use:

	goroutines -with (userloc|curloc|goloc|startloc) expr
	goroutines -w (userloc|curloc|goloc|startloc) expr
	goroutines -without (userloc|curloc|goloc|startloc) expr
	goroutines -wo (userloc|curloc|goloc|startloc) expr
	
To only display goroutines that have (or do not have) the specified label key and value, use:
	

	goroutines -with label key=value
	goroutines -without label key=value
	
To only display goroutines that have (or do not have) the specified label key, use:

	goroutines -with label key
	goroutines -without label key
	
To only display goroutines that are running (or are not running) on a OS thread, use:


	goroutines -with running
	goroutines -without running
	
To only display user (or runtime) goroutines, use:

	goroutines -with user
	goroutines -without user

GROUPING

	goroutines -group (userloc|curloc|goloc|startloc|running|user)

Groups goroutines by the given location, running status or user classification, up to 5 goroutines per group will be displayed as well as the total number of goroutines in the group.

	goroutines -group label key

Groups goroutines by the value of the label with the specified key.

EXEC

	goroutines -exec <command>

Runs the command on every goroutine.

(dlv) goroutines
  Goroutine 1 - User: /home/deparker/Code/goroot/src/runtime/sema.go:62 sync.runtime_Semacquire (0x467387) [semacquire]
  Goroutine 2 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [force gc (idle)]
  Goroutine 3 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC sweep wait]
  Goroutine 4 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC scavenge wait]
  Goroutine 5 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [finalizer wait]
  Goroutine 6 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [select]
  Goroutine 17 - User: /home/deparker/Code/goroot/src/runtime/sigqueue.go:152 os/signal.signal_recv (0x4676ef) (thread 2413502)
  Goroutine 18 - User: ./main.go:97 main.main.func1 (0x4c1ea9) [chan receive]
* Goroutine 19 - User: ./main.go:38 main.produceValues (0x4c0e9a) (thread 2413504)
  Goroutine 20 - User: ./main.go:60 main.consumeValues (0x4c11d6) [select]
[10 goroutines]
(dlv) goroutines -with user
  Goroutine 1 - User: /home/deparker/Code/goroot/src/runtime/sema.go:62 sync.runtime_Semacquire (0x467387) [semacquire]
  Goroutine 17 - User: /home/deparker/Code/goroot/src/runtime/sigqueue.go:152 os/signal.signal_recv (0x4676ef) (thread 2413502)
  Goroutine 18 - User: ./main.go:97 main.main.func1 (0x4c1ea9) [chan receive]
* Goroutine 19 - User: ./main.go:38 main.produceValues (0x4c0e9a) (thread 2413504)
  Goroutine 20 - User: ./main.go:60 main.consumeValues (0x4c11d6) [select]
[5 goroutines]
(dlv) goroutines -without user
  Goroutine 2 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [force gc (idle)]
  Goroutine 3 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC sweep wait]
  Goroutine 4 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC scavenge wait]
  Goroutine 5 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [finalizer wait]
  Goroutine 6 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [select]
[5 goroutines]
(dlv) goroutines -with user -exec stack
  Goroutine 1 - User: /home/deparker/Code/goroot/src/runtime/sema.go:62 sync.runtime_Semacquire (0x467387) [semacquire]
0  0x000000000043c31d in runtime.gopark
   at /home/deparker/Code/goroot/src/runtime/proc.go:382
1  0x000000000043c3aa in runtime.goparkunlock
   at /home/deparker/Code/goroot/src/runtime/proc.go:387
2  0x000000000044d2f1 in runtime.semacquire1
   at /home/deparker/Code/goroot/src/runtime/sema.go:160
3  0x0000000000467387 in sync.runtime_Semacquire
   at /home/deparker/Code/goroot/src/runtime/sema.go:62
4  0x0000000000473297 in sync.(*WaitGroup).Wait
   at /home/deparker/Code/goroot/src/sync/waitgroup.go:116
5  0x00000000004c1cc9 in main.main
   at ./main.go:118
6  0x000000000043be73 in runtime.main
   at /home/deparker/Code/goroot/src/runtime/proc.go:250
7  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
  Goroutine 17 - User: /home/deparker/Code/goroot/src/runtime/sigqueue.go:152 os/signal.signal_recv (0x4676ef) (thread 2413502)
0  0x000000000046ca63 in runtime.futex
   at /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555
1  0x0000000000435816 in runtime.futexsleep
   at /home/deparker/Code/goroot/src/runtime/os_linux.go:69
2  0x000000000040c2f1 in runtime.notetsleep_internal
   at /home/deparker/Code/goroot/src/runtime/lock_futex.go:183
3  0x000000000040c405 in runtime.notetsleepg
   at /home/deparker/Code/goroot/src/runtime/lock_futex.go:237
4  0x00000000004676ef in os/signal.signal_recv
   at /home/deparker/Code/goroot/src/runtime/sigqueue.go:152
5  0x00000000004c099d in os/signal.loop
   at /home/deparker/Code/goroot/src/os/signal/signal_unix.go:23
6  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
  Goroutine 18 - User: ./main.go:97 main.main.func1 (0x4c1ea9) [chan receive]
0  0x000000000043c31d in runtime.gopark
   at /home/deparker/Code/goroot/src/runtime/proc.go:382
1  0x0000000000406a5e in runtime.chanrecv
   at /home/deparker/Code/goroot/src/runtime/chan.go:583
2  0x0000000000406718 in runtime.chanrecv1
   at /home/deparker/Code/goroot/src/runtime/chan.go:442
3  0x00000000004c1ea9 in main.main.func1
   at ./main.go:97
4  0x00000000004c1e47 in main.main.func2
   at ./main.go:103
5  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
* Goroutine 19 - User: ./main.go:38 main.produceValues (0x4c0e9a) (thread 2413504)
0  0x00000000004c0e9a in main.produceValues
   at ./main.go:38
1  0x00000000004c1dd5 in main.main.func3
   at ./main.go:112
2  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
  Goroutine 20 - User: ./main.go:60 main.consumeValues (0x4c11d6) [select]
0  0x000000000043c31d in runtime.gopark
   at /home/deparker/Code/goroot/src/runtime/proc.go:382
1  0x000000000044c5aa in runtime.selectgo
   at /home/deparker/Code/goroot/src/runtime/select.go:327
2  0x00000000004c11d6 in main.consumeValues
   at ./main.go:60
3  0x00000000004c1d55 in main.main.func4
   at ./main.go:115
4  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
[5 goroutines]
(dlv) goroutine
Thread 2413504 at ./main.go:38
Goroutine 19:
	Runtime: ./main.go:38 main.produceValues (0x4c0e9a)
	User: ./main.go:38 main.produceValues (0x4c0e9a)
	Go: ./main.go:112 main.main (0x4c1bbf)
	Start: ./main.go:23 main.produceValues (0x4c0c60)
(dlv) goroutines
  Goroutine 1 - User: /home/deparker/Code/goroot/src/runtime/sema.go:62 sync.runtime_Semacquire (0x467387) [semacquire]
  Goroutine 2 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [force gc (idle)]
  Goroutine 3 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC sweep wait]
  Goroutine 4 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC scavenge wait]
  Goroutine 5 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [finalizer wait]
  Goroutine 6 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [select]
  Goroutine 17 - User: /home/deparker/Code/goroot/src/runtime/sigqueue.go:152 os/signal.signal_recv (0x4676ef) (thread 2413502)
  Goroutine 18 - User: ./main.go:97 main.main.func1 (0x4c1ea9) [chan receive]
* Goroutine 19 - User: ./main.go:38 main.produceValues (0x4c0e9a) (thread 2413504)
  Goroutine 20 - User: ./main.go:60 main.consumeValues (0x4c11d6) [select]
[10 goroutines]
(dlv) goroutine 20 list
Goroutine 20 frame 0 at /home/deparker/Code/goroot/src/runtime/proc.go:382 (PC: 0x43c31d)
   377:		mp.waittraceev = traceEv
   378:		mp.waittraceskip = traceskip
   379:		releasem(mp)
   380:		// can't do anything that might move the G between Ms here.
   381:		mcall(park_m)
=> 382:	}
   383:	
   384:	// Puts the current goroutine into a waiting state and unlocks the lock.
   385:	// The goroutine can be made runnable again by calling goready(gp).
   386:	func goparkunlock(lock *mutex, reason waitReason, traceEv byte, traceskip int) {
   387:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceEv, traceskip)
(dlv) goroutine 20 bt
0  0x000000000043c31d in runtime.gopark
   at /home/deparker/Code/goroot/src/runtime/proc.go:382
1  0x000000000044c5aa in runtime.selectgo
   at /home/deparker/Code/goroot/src/runtime/select.go:327
2  0x00000000004c11d6 in main.consumeValues
   at ./main.go:60
3  0x00000000004c1d55 in main.main.func4
   at ./main.go:115
4  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
(dlv) threads
  Thread 2413037 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
  Thread 2413501 at 0x46c47d /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:135 runtime.usleep
  Thread 2413502 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
  Thread 2413503 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
* Thread 2413504 at 0x4c0e9a ./main.go:38 main.produceValues
  Thread 2413505 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
  Thread 2414996 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
(dlv) help threads
Print out info for every traced thread.
(dlv) thread
(dlv) thread 2413505
Switched from 2413504 to 2413505
(dlv) threads
  Thread 2413037 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
  Thread 2413501 at 0x46c47d /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:135 runtime.usleep
  Thread 2413502 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
  Thread 2413503 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
  Thread 2413504 at 0x4c0e9a ./main.go:38 main.produceValues
* Thread 2413505 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
  Thread 2414996 at 0x46ca63 /home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s:555 runtime.futex
(dlv) goroutines
  Goroutine 1 - User: /home/deparker/Code/goroot/src/runtime/sema.go:62 sync.runtime_Semacquire (0x467387) [semacquire]
  Goroutine 2 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [force gc (idle)]
  Goroutine 3 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC sweep wait]
  Goroutine 4 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC scavenge wait]
  Goroutine 5 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [finalizer wait]
  Goroutine 6 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [select]
  Goroutine 17 - User: /home/deparker/Code/goroot/src/runtime/sigqueue.go:152 os/signal.signal_recv (0x4676ef) (thread 2413502)
  Goroutine 18 - User: ./main.go:97 main.main.func1 (0x4c1ea9) [chan receive]
  Goroutine 19 - User: ./main.go:38 main.produceValues (0x4c0e9a) (thread 2413504)
  Goroutine 20 - User: ./main.go:60 main.consumeValues (0x4c11d6) [select]
[10 goroutines]
(dlv) goroutine 20
Switched from 0 to 20 (thread 2413505)
(dlv) goroutines
  Goroutine 1 - User: /home/deparker/Code/goroot/src/runtime/sema.go:62 sync.runtime_Semacquire (0x467387) [semacquire]
  Goroutine 2 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [force gc (idle)]
  Goroutine 3 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC sweep wait]
  Goroutine 4 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC scavenge wait]
  Goroutine 5 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [finalizer wait]
  Goroutine 6 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [select]
  Goroutine 17 - User: /home/deparker/Code/goroot/src/runtime/sigqueue.go:152 os/signal.signal_recv (0x4676ef) (thread 2413502)
  Goroutine 18 - User: ./main.go:97 main.main.func1 (0x4c1ea9) [chan receive]
  Goroutine 19 - User: ./main.go:38 main.produceValues (0x4c0e9a) (thread 2413504)
* Goroutine 20 - User: ./main.go:60 main.consumeValues (0x4c11d6) [select]
[10 goroutines]
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) goruotines
(dlv) goroutines
  Goroutine 1 - User: /home/deparker/Code/goroot/src/runtime/sema.go:62 sync.runtime_Semacquire (0x467387) [semacquire]
  Goroutine 2 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [force gc (idle)]
  Goroutine 3 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC sweep wait]
  Goroutine 4 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [GC scavenge wait]
  Goroutine 5 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [finalizer wait]
  Goroutine 6 - User: /home/deparker/Code/goroot/src/runtime/proc.go:382 runtime.gopark (0x43c31d) [select]
  Goroutine 17 - User: /home/deparker/Code/goroot/src/runtime/sigqueue.go:152 os/signal.signal_recv (0x4676ef) (thread 2413502)
  Goroutine 18 - User: ./main.go:97 main.main.func1 (0x4c1ea9) [chan receive]
  Goroutine 19 - User: ./main.go:38 main.produceValues (0x4c0e9a) (thread 2413504)
* Goroutine 20 - User: ./main.go:60 main.consumeValues (0x4c11d6) [select]
[10 goroutines]
(dlv) help stack
Print stack trace.

	[goroutine <n>] [frame <m>] stack [<depth>] [-full] [-offsets] [-defer] [-a <n>] [-adepth <depth>] [-mode <mode>]

	-full		every stackframe is decorated with the value of its local variables and arguments.
	-offsets	prints frame offset of each frame.
	-defer		prints deferred function call stack for each frame.
	-a <n>		prints stacktrace of n ancestors of the selected goroutine (target process must have tracebackancestors enabled)
	-adepth <depth>	configures depth of ancestor stacktrace
	-mode <mode>	specifies the stacktrace mode, possible values are:
			normal	- attempts to automatically switch between cgo frames and go frames
			simple	- disables automatic switch between cgo and go
			fromg	- starts from the registers stored in the runtime.g struct

(dlv) stack
0  0x000000000043c31d in runtime.gopark
   at /home/deparker/Code/goroot/src/runtime/proc.go:382
1  0x000000000044c5aa in runtime.selectgo
   at /home/deparker/Code/goroot/src/runtime/select.go:327
2  0x00000000004c11d6 in main.consumeValues
   at ./main.go:60
3  0x00000000004c1d55 in main.main.func4
   at ./main.go:115
4  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
(dlv) up
> runtime.gopark() /home/deparker/Code/goroot/src/runtime/proc.go:382 (PC: 0x43c31d)
Warning: debugging optimized function
Frame 1: /home/deparker/Code/goroot/src/runtime/select.go:327 (PC: 44c5aa)
   322:		// Signal to anyone trying to shrink our stack that we're about
   323:		// to park on a channel. The window between when this G's status
   324:		// changes and when we set gp.activeStackChans is not safe for
   325:		// stack shrinking.
   326:		gp.parkingOnChan.Store(true)
=> 327:		gopark(selparkcommit, nil, waitReasonSelect, traceEvGoBlockSelect, 1)
   328:		gp.activeStackChans = false
   329:	
   330:		sellock(scases, lockorder)
   331:	
   332:		gp.selectDone.Store(0)
(dlv) up
> runtime.gopark() /home/deparker/Code/goroot/src/runtime/proc.go:382 (PC: 0x43c31d)
Warning: debugging optimized function
Frame 2: ./main.go:60 (PC: 4c11d6)
    55:		defer wg.Done()
    56:	
    57:		// Create buffer to store values in-memory.
    58:		buf := make([]packet, 0)
    59:		for {
=>  60:			select {
    61:			case <-ctx.Done():
    62:				// If the context has been cancelled, return.
    63:				return
    64:			case pkt := <-ch:
    65:				// Store data in our buffer.
(dlv) bt
0  0x000000000043c31d in runtime.gopark
   at /home/deparker/Code/goroot/src/runtime/proc.go:382
1  0x000000000044c5aa in runtime.selectgo
   at /home/deparker/Code/goroot/src/runtime/select.go:327
2  0x00000000004c11d6 in main.consumeValues
   at ./main.go:60
3  0x00000000004c1d55 in main.main.func4
   at ./main.go:115
4  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
(dlv) list
Goroutine 20 frame 2 at /home/deparker/Code/workshops/march-monthly-2023/ultimate-go-debugging/day-2/session/main.go:60 (PC: 0x4c11d6)
    55:		defer wg.Done()
    56:	
    57:		// Create buffer to store values in-memory.
    58:		buf := make([]packet, 0)
    59:		for {
=>  60:			select {
    61:			case <-ctx.Done():
    62:				// If the context has been cancelled, return.
    63:				return
    64:			case pkt := <-ch:
    65:				// Store data in our buffer.
(dlv) print buf
[]main.packet len: 1, cap: 1, [
	{
		id: 5166162923497843535,
		val: []uint8 len: 64, cap: 64, [176,130,217,55,78,46,33,210,102,230,229,203,122,101,210,216,176,226,143,100,165,180,221,253,65,140,26,186,149,100,163,165,113,156,63,7,81,41,231,222,208,200,99,33,104,52,96,140,60,8,75,154,9,0,132,163,79,184,242,227,215,34,186,127],},
]
(dlv) print buf[0].id
5166162923497843535
(dlv) down
> runtime.gopark() /home/deparker/Code/goroot/src/runtime/proc.go:382 (PC: 0x43c31d)
Warning: debugging optimized function
Frame 1: /home/deparker/Code/goroot/src/runtime/select.go:327 (PC: 44c5aa)
   322:		// Signal to anyone trying to shrink our stack that we're about
   323:		// to park on a channel. The window between when this G's status
   324:		// changes and when we set gp.activeStackChans is not safe for
   325:		// stack shrinking.
   326:		gp.parkingOnChan.Store(true)
=> 327:		gopark(selparkcommit, nil, waitReasonSelect, traceEvGoBlockSelect, 1)
   328:		gp.activeStackChans = false
   329:	
   330:		sellock(scases, lockorder)
   331:	
   332:		gp.selectDone.Store(0)
(dlv) down
> runtime.gopark() /home/deparker/Code/goroot/src/runtime/proc.go:382 (PC: 0x43c31d)
Warning: debugging optimized function
Frame 0: /home/deparker/Code/goroot/src/runtime/proc.go:382 (PC: 43c31d)
   377:		mp.waittraceev = traceEv
   378:		mp.waittraceskip = traceskip
   379:		releasem(mp)
   380:		// can't do anything that might move the G between Ms here.
   381:		mcall(park_m)
=> 382:	}
   383:	
   384:	// Puts the current goroutine into a waiting state and unlocks the lock.
   385:	// The goroutine can be made runnable again by calling goready(gp).
   386:	func goparkunlock(lock *mutex, reason waitReason, traceEv byte, traceskip int) {
   387:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceEv, traceskip)
(dlv) down
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) bt
0  0x000000000043c31d in runtime.gopark
   at /home/deparker/Code/goroot/src/runtime/proc.go:382
1  0x000000000044c5aa in runtime.selectgo
   at /home/deparker/Code/goroot/src/runtime/select.go:327
2  0x00000000004c11d6 in main.consumeValues
   at ./main.go:60
3  0x00000000004c1d55 in main.main.func4
   at ./main.go:115
4  0x000000000046ab81 in runtime.goexit
   at /home/deparker/Code/goroot/src/runtime/asm_amd64.s:1598
(dlv) frame 2 list
Goroutine 20 frame 2 at /home/deparker/Code/workshops/march-monthly-2023/ultimate-go-debugging/day-2/session/main.go:60 (PC: 0x4c11d6)
    55:		defer wg.Done()
    56:	
    57:		// Create buffer to store values in-memory.
    58:		buf := make([]packet, 0)
    59:		for {
=>  60:			select {
    61:			case <-ctx.Done():
    62:				// If the context has been cancelled, return.
    63:				return
    64:			case pkt := <-ch:
    65:				// Store data in our buffer.
(dlv) frame 2 print buf[0].id
5166162923497843535
(dlv) list
> runtime.gopark() /home/deparker/Code/goroot/src/runtime/proc.go:382 (PC: 0x43c31d)
Warning: debugging optimized function
   377:		mp.waittraceev = traceEv
   378:		mp.waittraceskip = traceskip
   379:		releasem(mp)
   380:		// can't do anything that might move the G between Ms here.
   381:		mcall(park_m)
=> 382:	}
   383:	
   384:	// Puts the current goroutine into a waiting state and unlocks the lock.
   385:	// The goroutine can be made runnable again by calling goready(gp).
   386:	func goparkunlock(lock *mutex, reason waitReason, traceEv byte, traceskip int) {
   387:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceEv, traceskip)
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) disassemble
TEXT runtime.gopark(SB) /home/deparker/Code/goroot/src/runtime/proc.go
	proc.go:364	0x43c220	493b6610	cmp rsp, qword ptr [r14+0x10]
	proc.go:364	0x43c224	0f860f010000	jbe 0x43c339
	proc.go:364	0x43c22a	4883ec28	sub rsp, 0x28
	proc.go:364	0x43c22e	48896c2420	mov qword ptr [rsp+0x20], rbp
	proc.go:364	0x43c233	488d6c2420	lea rbp, ptr [rsp+0x20]
	proc.go:364	0x43c238	4889442430	mov qword ptr [rsp+0x30], rax
	proc.go:364	0x43c23d	4889742448	mov qword ptr [rsp+0x48], rsi
	proc.go:364	0x43c242	40887c2441	mov byte ptr [rsp+0x41], dil
	proc.go:364	0x43c247	48895c2438	mov qword ptr [rsp+0x38], rbx
	proc.go:364	0x43c24c	884c2440	mov byte ptr [rsp+0x40], cl
	proc.go:365	0x43c250	80f913		cmp cl, 0x13
	proc.go:365	0x43c253	7405		jz 0x43c25a
	proc.go:366	0x43c255	e82602fdff	call $runtime.checkTimeouts
	proc.go:368	0x43c25a	e801f10000	call $runtime.acquirem
	proc.go:368	0x43c25f	4889442410	mov qword ptr [rsp+0x10], rax
	proc.go:369	0x43c264	488b88c0000000	mov rcx, qword ptr [rax+0xc0]
	proc.go:369	0x43c26b	48894c2418	mov qword ptr [rsp+0x18], rcx
	proc.go:370	0x43c270	4889c8		mov rax, rcx
	proc.go:370	0x43c273	e8e8180000	call $runtime.readgstatus
	proc.go:371	0x43c278	83f802		cmp eax, 0x2
	proc.go:371	0x43c27b	740e		jz 0x43c28b
	proc.go:371	0x43c27d	0f1f00		nop dword ptr [rax], eax
	proc.go:371	0x43c280	3d02100000	cmp eax, 0x1002
	proc.go:371	0x43c285	0f859c000000	jnz 0x43c327
	proc.go:374	0x43c28b	833dee5c160000	cmp dword ptr [runtime.writeBarrier], 0x0
	proc.go:374	0x43c292	751f		jnz 0x43c2b3
	proc.go:374	0x43c294	488b4c2438	mov rcx, qword ptr [rsp+0x38]
	proc.go:374	0x43c299	488b442410	mov rax, qword ptr [rsp+0x10]
	proc.go:374	0x43c29e	48898880020000	mov qword ptr [rax+0x280], rcx
	proc.go:375	0x43c2a5	488b4c2430	mov rcx, qword ptr [rsp+0x30]
	proc.go:375	0x43c2aa	48898878020000	mov qword ptr [rax+0x278], rcx
	proc.go:374	0x43c2b1	eb32		jmp 0x43c2e5
	proc.go:374	0x43c2b3	488b7c2410	mov rdi, qword ptr [rsp+0x10]
	proc.go:374	0x43c2b8	488d8f80020000	lea rcx, ptr [rdi+0x280]
	proc.go:368	0x43c2bf	4889f8		mov rax, rdi
	proc.go:374	0x43c2c2	4889cf		mov rdi, rcx
	proc.go:374	0x43c2c5	488b542438	mov rdx, qword ptr [rsp+0x38]
	proc.go:374	0x43c2ca	e811ea0200	call $runtime.gcWriteBarrierDX
	proc.go:375	0x43c2cf	488db878020000	lea rdi, ptr [rax+0x278]
	proc.go:375	0x43c2d6	488b4c2430	mov rcx, qword ptr [rsp+0x30]
	proc.go:375	0x43c2db	0f1f440000	nop dword ptr [rax+rax*1], eax
	proc.go:375	0x43c2e0	e8dbe90200	call $runtime.gcWriteBarrierCX
	proc.go:376	0x43c2e5	0fb64c2440	movzx ecx, byte ptr [rsp+0x40]
	proc.go:376	0x43c2ea	488b542418	mov rdx, qword ptr [rsp+0x18]
	proc.go:376	0x43c2ef	888ab0000000	mov byte ptr [rdx+0xb0], cl
	proc.go:377	0x43c2f5	0fb64c2441	movzx ecx, byte ptr [rsp+0x41]
	proc.go:377	0x43c2fa	888888020000	mov byte ptr [rax+0x288], cl
	proc.go:378	0x43c300	488b4c2448	mov rcx, qword ptr [rsp+0x48]
	proc.go:378	0x43c305	48898890020000	mov qword ptr [rax+0x290], rcx
	proc.go:379	0x43c30c	e86ff00000	call $runtime.releasem
	proc.go:381	0x43c311	488d05a0be0a00	lea rax, ptr [rip+0xabea0]
	proc.go:381	0x43c318	e823c70200	call $runtime.mcall
	proc.go:382	0x43c31d	488b6c2420	mov rbp, qword ptr [rsp+0x20]
	proc.go:382	0x43c322	4883c428	add rsp, 0x28
	proc.go:382	0x43c326	c3		ret
	proc.go:372	0x43c327	488d05935a0a00	lea rax, ptr [rip+0xa5a93]
	proc.go:372	0x43c32e	bb14000000	mov ebx, 0x14
	proc.go:372	0x43c333	e888d3ffff	call $runtime.throw
	proc.go:372	0x43c338	90		nop
	proc.go:364	0x43c339	4889442408	mov qword ptr [rsp+0x8], rax
	proc.go:364	0x43c33e	48895c2410	mov qword ptr [rsp+0x10], rbx
	proc.go:364	0x43c343	884c2418	mov byte ptr [rsp+0x18], cl
	proc.go:364	0x43c347	40887c2419	mov byte ptr [rsp+0x19], dil
	proc.go:364	0x43c34c	4889742420	mov qword ptr [rsp+0x20], rsi
	proc.go:364	0x43c351	e8aac80200	call $runtime.morestack_noctxt
	proc.go:364	0x43c356	488b442408	mov rax, qword ptr [rsp+0x8]
	proc.go:364	0x43c35b	488b5c2410	mov rbx, qword ptr [rsp+0x10]
	proc.go:364	0x43c360	0fb64c2418	movzx ecx, byte ptr [rsp+0x18]
	proc.go:364	0x43c365	0fb67c2419	movzx edi, byte ptr [rsp+0x19]
	proc.go:364	0x43c36a	488b742420	mov rsi, qword ptr [rsp+0x20]
	proc.go:364	0x43c36f	e9acfeffff	jmp $runtime.gopark
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) funcs
_rt0_amd64
_rt0_amd64_linux
aeshashbody
bytes.Contains
bytes.Equal
bytes.Index
bytes.IndexByte
bytes.init
callRet
cmpbody
context.(*cancelCtx).Done
context.(*cancelCtx).Done.func1
context.(*cancelCtx).Err
context.(*cancelCtx).String
context.(*cancelCtx).Value
context.(*cancelCtx).cancel
context.(*emptyCtx).Done
context.(*emptyCtx).Err
context.(*emptyCtx).String
context.(*emptyCtx).Value
context.Background
context.Cause
context.Cause.func1
context.WithCancel
context.WithCancel.func1
context.contextName
context.init
context.init.0
context.newCancelCtx
context.parentCancelCtx
context.propagateCancel
context.propagateCancel.func1
context.removeChild
context.value
context.withCancel
debugCall1024
debugCall128
debugCall16384
debugCall2048
debugCall256
debugCall32
debugCall32768
debugCall4096
debugCall512
debugCall64
debugCall65536
debugCall8192
encoding/binary.init
encoding/binary.littleEndian.Uint64
errors.(*errorString).Error
errors.New
errors.init
fmt.(*buffer).write
fmt.(*buffer).writeByte
fmt.(*buffer).writeRune
fmt.(*buffer).writeString
fmt.(*fmt).clearflags
fmt.(*fmt).fmtBoolean
fmt.(*fmt).fmtBs
fmt.(*fmt).fmtBx
fmt.(*fmt).fmtC
fmt.(*fmt).fmtFloat
fmt.(*fmt).fmtInteger
fmt.(*fmt).fmtQ
fmt.(*fmt).fmtQc
fmt.(*fmt).fmtS
fmt.(*fmt).fmtSbx
fmt.(*fmt).fmtSx
fmt.(*fmt).fmtUnicode
fmt.(*fmt).init
fmt.(*fmt).pad
fmt.(*fmt).padString
fmt.(*fmt).truncate
fmt.(*fmt).truncateString
fmt.(*fmt).writePadding
fmt.(*pp).Write
fmt.(*pp).argNumber
fmt.(*pp).badArgNum
fmt.(*pp).badVerb
fmt.(*pp).catchPanic
fmt.(*pp).doPrintf
fmt.(*pp).doPrintln
fmt.(*pp).fmt0x64
fmt.(*pp).fmtBool
fmt.(*pp).fmtBytes
fmt.(*pp).fmtComplex
fmt.(*pp).fmtFloat
fmt.(*pp).fmtInteger
fmt.(*pp).fmtPointer
fmt.(*pp).fmtString
fmt.(*pp).free
fmt.(*pp).handleMethods
fmt.(*pp).handleMethods.func1
fmt.(*pp).handleMethods.func2
fmt.(*pp).handleMethods.func3
fmt.(*pp).handleMethods.func4
fmt.(*pp).missingArg
fmt.(*pp).printArg
fmt.(*pp).printValue
fmt.(*pp).unknownType
fmt.Fprintf
fmt.Fprintln
fmt.Printf
fmt.Println
fmt.getField
fmt.glob..func1
fmt.init
fmt.intFromArg
fmt.newPrinter
fmt.parseArgNumber
fmt.parsenum
fmt.tooLarge
gogo
gosave_systemstack_switch
indexbody
indexbytebody
internal/abi.(*IntArgRegBitmap).Get
internal/abi.(*IntArgRegBitmap).Set
internal/abi.(*RegArgs).IntRegArgAddr
internal/bytealg.Cutover
internal/bytealg.Equal
internal/bytealg.HashStrBytes
internal/bytealg.Index
internal/bytealg.IndexByte
internal/bytealg.IndexByteString
internal/bytealg.IndexRabinKarpBytes
internal/bytealg.init.0
internal/cpu.Initialize
internal/cpu.cpuid
internal/cpu.doinit
internal/cpu.getGOAMD64level
internal/cpu.indexByte
internal/cpu.isSet
internal/cpu.processOptions
internal/cpu.xgetbv
internal/fmtsort.(*SortedMap).Len
internal/fmtsort.(*SortedMap).Less
internal/fmtsort.(*SortedMap).Swap
internal/fmtsort.Sort
internal/fmtsort.compare
internal/fmtsort.floatCompare
internal/fmtsort.isNaN
internal/fmtsort.nilCompare
internal/godebug.(*Setting).Value
internal/godebug.(*Setting).Value.func1
internal/godebug.New
internal/godebug.init.0
internal/godebug.parse
internal/godebug.setUpdate
internal/godebug.update
internal/godebug.update.func1
internal/godebug.update.func2
internal/itoa.Itoa
internal/itoa.Uitoa
internal/oserror.init
internal/poll.(*DeadlineExceededError).Error
internal/poll.(*FD).Close
internal/poll.(*FD).Init
internal/poll.(*FD).Read
internal/poll.(*FD).Read.func1
internal/poll.(*FD).Write
internal/poll.(*FD).Write.func1
internal/poll.(*FD).decref
internal/poll.(*FD).destroy
internal/poll.(*FD).eofError
internal/poll.(*FD).readLock
internal/poll.(*FD).readUnlock
internal/poll.(*FD).writeLock
internal/poll.(*FD).writeUnlock
internal/poll.(*errNetClosing).Error
internal/poll.(*fdMutex).decref
internal/poll.(*fdMutex).increfAndClose
internal/poll.(*fdMutex).rwlock
internal/poll.(*fdMutex).rwunlock
internal/poll.(*pollDesc).close
internal/poll.(*pollDesc).evict
internal/poll.(*pollDesc).init
internal/poll.(*pollDesc).pollable
internal/poll.(*pollDesc).prepare
internal/poll.(*pollDesc).prepareRead
internal/poll.(*pollDesc).prepareWrite
internal/poll.(*pollDesc).wait
internal/poll.(*pollDesc).waitRead
internal/poll.(*pollDesc).waitWrite
internal/poll.convertErr
internal/poll.errClosing
internal/poll.errNetClosing.Error
internal/poll.errnoErr
internal/poll.ignoringEINTRIO
internal/poll.init
internal/poll.runtime_Semacquire
internal/poll.runtime_Semrelease
internal/poll.runtime_pollClose
internal/poll.runtime_pollOpen
internal/poll.runtime_pollReset
internal/poll.runtime_pollServerInit
internal/poll.runtime_pollUnblock
internal/poll.runtime_pollWait
internal/race.Enable
internal/reflectlite.(*Kind).String
internal/reflectlite.(*rtype).Elem
internal/reflectlite.(*rtype).Kind
internal/reflectlite.(*rtype).Len
internal/reflectlite.(*rtype).String
internal/reflectlite.(*rtype).nameOff
internal/reflectlite.Kind.String
internal/reflectlite.TypeOf
internal/reflectlite.add
internal/reflectlite.name.data
internal/reflectlite.name.name
internal/reflectlite.name.readVarint
internal/reflectlite.resolveNameOff
internal/reflectlite.toType
internal/safefilepath.init
internal/syscall/unix.IsNonblock
internal/testlog.PanicOnExit0
internal/testlog.PanicOnExit0.func1
io.(*discard).Write
io.ReadAll
io.discard.Write
io.init
io/fs.(*PathError).Error
io/fs.errClosed
io/fs.errExist
io/fs.errInvalid
io/fs.errNotExist
io/fs.errPermission
io/fs.init
io/ioutil.ReadAll
io/ioutil.init
main.consumeValues
main.consumeValues.func1
main.main
main.main.func1
main.main.func2
main.main.func3
main.main.func4
main.produceValues
main.produceValues.func1
math.Float32bits
math.Float64bits
math.init
math/bits.TrailingZeros
math/rand.(*Rand).Int
math/rand.(*Rand).Int63
math/rand.(*Rand).Read
math/rand.(*lockedSource).Int63
math/rand.(*lockedSource).read
math/rand.(*lockedSource).source
math/rand.(*rngSource).Int63
math/rand.(*rngSource).Seed
math/rand.(*rngSource).Uint64
math/rand.Int
math/rand.New
math/rand.Read
math/rand.fastrand64
math/rand.init
math/rand.newSource
math/rand.read
math/rand.seedrand
memeqbody
os.(*File).Read
os.(*File).Write
os.(*File).checkValid
os.(*File).read
os.(*File).wrapErr
os.(*File).write
os.(*dirInfo).close
os.(*file).close
os.Exit
os.NewFile
os.adjustFileLimit
os.epipecheck
os.errDeadlineExceeded
os.errNoDeadline
os.glob..func1
os.init
os.init.0
os.init.1
os.newFile
os.runtime_args
os.runtime_beforeExit
os.sigpipe
os/signal.(*handler).set
os/signal.(*handler).want
os/signal.Notify
os/signal.Notify.func1
os/signal.Notify.func1.1
os/signal.Notify.func2
os/signal.enableSignal
os/signal.init.0
os/signal.loop
os/signal.process
os/signal.process.func1
os/signal.signal_enable
os/signal.signal_ignored
os/signal.signal_recv
os/signal.signum
path.init
reflect.(*ChanDir).String
reflect.(*Kind).String
reflect.(*MapIter).Key
reflect.(*MapIter).Next
reflect.(*MapIter).Value
reflect.(*Value).Kind
reflect.(*Value).Len
reflect.(*Value).String
reflect.(*ValueError).Error
reflect.(*abiSeq).addArg
reflect.(*abiSeq).addRcvr
reflect.(*abiSeq).assignFloatN
reflect.(*abiSeq).assignIntN
reflect.(*abiSeq).regAssign
reflect.(*abiSeq).stackAssign
reflect.(*abiSeq).stepsForValue
reflect.(*bitVector).append
reflect.(*funcType).Elem
reflect.(*funcType).Field
reflect.(*funcType).Kind
reflect.(*funcType).Len
reflect.(*funcType).String
reflect.(*funcType).in
reflect.(*funcType).out
reflect.(*hiter).initialized
reflect.(*interfaceType).NumMethod
reflect.(*rtype).Elem
reflect.(*rtype).Field
reflect.(*rtype).Kind
reflect.(*rtype).Len
reflect.(*rtype).NumMethod
reflect.(*rtype).Size
reflect.(*rtype).String
reflect.(*rtype).common
reflect.(*rtype).exportedMethods
reflect.(*rtype).nameOff
reflect.(*rtype).pointers
reflect.(*rtype).textOff
reflect.(*rtype).typeOff
reflect.(*rtype).uncommon
reflect.(*structField).embedded
reflect.(*structType).Field
reflect.(*uncommonType).exportedMethods
reflect.ChanDir.String
reflect.Kind.String
reflect.TypeOf
reflect.Value.Bool
reflect.Value.Bytes
reflect.Value.CanAddr
reflect.Value.CanInterface
reflect.Value.Complex
reflect.Value.Elem
reflect.Value.Field
reflect.Value.Float
reflect.Value.Index
reflect.Value.Int
reflect.Value.Interface
reflect.Value.IsNil
reflect.Value.IsValid
reflect.Value.Kind
reflect.Value.Len
reflect.Value.MapRange
reflect.Value.NumField
reflect.Value.NumMethod
reflect.Value.Pointer
reflect.Value.Slice
reflect.Value.String
reflect.Value.Type
reflect.Value.Uint
reflect.Value.bytesSlow
reflect.Value.lenNonSlice
reflect.Value.panicNotBool
reflect.Value.pointer
reflect.Value.stringNonString
reflect.Value.typeSlow
reflect.ValueOf
reflect.add
reflect.addReflectOff
reflect.addTypeBits
reflect.align
reflect.archFloat32FromReg
reflect.archFloat32ToReg
reflect.arrayAt
reflect.callMethod
reflect.chanlen
reflect.copyVal
reflect.escapes
reflect.flag.kind
reflect.flag.mustBe
reflect.flag.panicNotMap
reflect.flag.ro
reflect.floatFromReg
reflect.floatToReg
reflect.funcLayout
reflect.funcLayout.func1
reflect.ifaceIndir
reflect.init
reflect.intFromReg
reflect.intToReg
reflect.makeMethodValue
reflect.mapiterelem
reflect.mapiterinit
reflect.mapiterkey
reflect.mapiternext
reflect.maplen
reflect.memmove
reflect.methodReceiver
reflect.methodValueCall
reflect.methodValueCallCodePtr
reflect.moveMakeFuncArgPtrs
reflect.name.data
reflect.name.embedded
reflect.name.hasTag
reflect.name.isExported
reflect.name.name
reflect.name.readVarint
reflect.name.tag
reflect.newAbiDesc
reflect.newName
reflect.packEface
reflect.resolveNameOff
reflect.resolveReflectName
reflect.resolveTextOff
reflect.resolveTypeOff
reflect.rtypeOf
reflect.storeRcvr
reflect.toType
reflect.typedmemclr
reflect.typedmemmove
reflect.unpackEface
reflect.unsafe_New
reflect.valueInterface
reflect.valueMethodName
reflect.verifyNotInHeapPtr
reflect.writeVarint
runtime.(*Frames).Next
runtime.(*Func).Entry
runtime.(*Func).raw
runtime.(*Func).startLine
runtime.(*TypeAssertionError).Error
runtime.(*_func).funcInfo
runtime.(*_func).isInlined
runtime.(*_type).nameOff
runtime.(*_type).pkgpath
runtime.(*_type).string
runtime.(*_type).textOff
runtime.(*_type).typeOff
runtime.(*_type).uncommon
runtime.(*activeSweep).begin
runtime.(*activeSweep).end
runtime.(*activeSweep).isDone
runtime.(*activeSweep).markDrained
runtime.(*activeSweep).reset
runtime.(*activeSweep).sweepers
runtime.(*addrRanges).add
runtime.(*addrRanges).findAddrGreaterEqual
runtime.(*addrRanges).findSucc
runtime.(*addrRanges).init
runtime.(*atomicHeadTailIndex).cas
runtime.(*atomicHeadTailIndex).incTail
runtime.(*atomicHeadTailIndex).load
runtime.(*atomicHeadTailIndex).reset
runtime.(*atomicMSpanPointer).Load
runtime.(*atomicMSpanPointer).StoreNoWB
runtime.(*atomicOffAddr).Clear
runtime.(*atomicOffAddr).Load
runtime.(*atomicOffAddr).StoreMarked
runtime.(*atomicOffAddr).StoreMin
runtime.(*atomicOffAddr).StoreUnmark
runtime.(*atomicSpanSetSpinePointer).Load
runtime.(*atomicSpanSetSpinePointer).StoreNoWB
runtime.(*bmap).keys
runtime.(*bmap).overflow
runtime.(*bmap).setoverflow
runtime.(*boundsError).Error
runtime.(*bucket).bp
runtime.(*bucket).mp
runtime.(*bucket).stk
runtime.(*consistentHeapStats).acquire
runtime.(*consistentHeapStats).release
runtime.(*cpuProfile).add
runtime.(*cpuProfile).addExtra
runtime.(*cpuProfile).addNonGo
runtime.(*errorAddressString).Error
runtime.(*errorString).Error
runtime.(*fixalloc).alloc
runtime.(*fixalloc).free
runtime.(*fixalloc).init
runtime.(*functype).dotdotdot
runtime.(*functype).in
runtime.(*functype).out
runtime.(*gList).empty
runtime.(*gList).pop
runtime.(*gList).push
runtime.(*gList).pushAll
runtime.(*gQueue).empty
runtime.(*gQueue).pop
runtime.(*gQueue).popList
runtime.(*gQueue).push
runtime.(*gQueue).pushBack
runtime.(*gQueue).pushBackAll
runtime.(*gcBits).bitp
runtime.(*gcBits).bytep
runtime.(*gcBitsArena).tryAlloc
runtime.(*gcCPULimiterState).accumulate
runtime.(*gcCPULimiterState).addAssistTime
runtime.(*gcCPULimiterState).addIdleTime
runtime.(*gcCPULimiterState).finishGCTransition
runtime.(*gcCPULimiterState).limiting
runtime.(*gcCPULimiterState).needUpdate
runtime.(*gcCPULimiterState).resetCapacity
runtime.(*gcCPULimiterState).startGCTransition
runtime.(*gcCPULimiterState).tryLock
runtime.(*gcCPULimiterState).unlock
runtime.(*gcCPULimiterState).update
runtime.(*gcCPULimiterState).updateLocked
runtime.(*gcControllerState).addGlobals
runtime.(*gcControllerState).addIdleMarkWorker
runtime.(*gcControllerState).addScannableStack
runtime.(*gcControllerState).commit
runtime.(*gcControllerState).endCycle
runtime.(*gcControllerState).enlistWorker
runtime.(*gcControllerState).findRunnableGCWorker
runtime.(*gcControllerState).findRunnableGCWorker.func1
runtime.(*gcControllerState).heapGoal
runtime.(*gcControllerState).heapGoalInternal
runtime.(*gcControllerState).init
runtime.(*gcControllerState).markWorkerStop
runtime.(*gcControllerState).memoryLimitHeapGoal
runtime.(*gcControllerState).needIdleMarkWorker
runtime.(*gcControllerState).removeIdleMarkWorker
runtime.(*gcControllerState).resetLive
runtime.(*gcControllerState).revise
runtime.(*gcControllerState).setGCPercent
runtime.(*gcControllerState).setMaxIdleMarkWorkers
runtime.(*gcControllerState).setMemoryLimit
runtime.(*gcControllerState).startCycle
runtime.(*gcControllerState).trigger
runtime.(*gcControllerState).update
runtime.(*gcWork).balance
runtime.(*gcWork).dispose
runtime.(*gcWork).empty
runtime.(*gcWork).init
runtime.(*gcWork).put
runtime.(*gcWork).putBatch
runtime.(*gcWork).putFast
runtime.(*gcWork).tryGet
runtime.(*gcWork).tryGetFast
runtime.(*goroutineProfileStateHolder).CompareAndSwap
runtime.(*goroutineProfileStateHolder).Load
runtime.(*goroutineProfileStateHolder).Store
runtime.(*guintptr).cas
runtime.(*guintptr).set
runtime.(*hchan).raceaddr
runtime.(*hchan).sortkey
runtime.(*hmap).createOverflow
runtime.(*hmap).growing
runtime.(*hmap).incrnoverflow
runtime.(*hmap).newoverflow
runtime.(*hmap).noldbuckets
runtime.(*hmap).oldbucketmask
runtime.(*hmap).sameSizeGrow
runtime.(*itab).init
runtime.(*itabTableType).add
runtime.(*itabTableType).add-fm
runtime.(*itabTableType).find
runtime.(*lfstack).empty
runtime.(*lfstack).pop
runtime.(*lfstack).push
runtime.(*limiterEvent).consume
runtime.(*limiterEvent).start
runtime.(*limiterEvent).stop
runtime.(*linearAlloc).alloc
runtime.(*lockRank).String
runtime.(*m).becomeSpinning
runtime.(*mProfCycleHolder).increment
runtime.(*mProfCycleHolder).read
runtime.(*mProfCycleHolder).setFlushed
runtime.(*mSpanList).init
runtime.(*mSpanList).insert
runtime.(*mSpanList).isEmpty
runtime.(*mSpanList).remove
runtime.(*mSpanList).takeAll
runtime.(*mSpanStateBox).get
runtime.(*mSpanStateBox).set
runtime.(*maptype).hashMightPanic
runtime.(*maptype).indirectelem
runtime.(*maptype).indirectkey
runtime.(*maptype).needkeyupdate
runtime.(*maptype).reflexivekey
runtime.(*markBits).advance
runtime.(*mcache).allocLarge
runtime.(*mcache).nextFree
runtime.(*mcache).prepareForSweep
runtime.(*mcache).refill
runtime.(*mcache).releaseAll
runtime.(*mcentral).cacheSpan
runtime.(*mcentral).fullSwept
runtime.(*mcentral).fullUnswept
runtime.(*mcentral).grow
runtime.(*mcentral).init
runtime.(*mcentral).partialSwept
runtime.(*mcentral).partialUnswept
runtime.(*mcentral).uncacheSpan
runtime.(*memRecordCycle).add
runtime.(*mheap).alloc
runtime.(*mheap).alloc.func1
runtime.(*mheap).allocMSpanLocked
runtime.(*mheap).allocManual
runtime.(*mheap).allocNeedsZero
runtime.(*mheap).allocSpan
runtime.(*mheap).allocSpan.func1
runtime.(*mheap).freeMSpanLocked
runtime.(*mheap).freeManual
runtime.(*mheap).freeSpan
runtime.(*mheap).freeSpan.func1
runtime.(*mheap).freeSpanLocked
runtime.(*mheap).grow
runtime.(*mheap).init
runtime.(*mheap).initSpan
runtime.(*mheap).nextSpanForSweep
runtime.(*mheap).reclaim
runtime.(*mheap).reclaimChunk
runtime.(*mheap).setSpans
runtime.(*mheap).sysAlloc
runtime.(*mheap).tryAllocMSpan
runtime.(*moduledata).textAddr
runtime.(*moduledata).textOff
runtime.(*mspan).allocBitsForIndex
runtime.(*mspan).base
runtime.(*mspan).countAlloc
runtime.(*mspan).divideByElemSize
runtime.(*mspan).ensureSwept
runtime.(*mspan).init
runtime.(*mspan).initHeapBits
runtime.(*mspan).isFree
runtime.(*mspan).markBitsForBase
runtime.(*mspan).markBitsForIndex
runtime.(*mspan).nextFreeIndex
runtime.(*mspan).objIndex
runtime.(*mspan).refillAllocCache
runtime.(*mspan).reportZombies
runtime.(*mspan).setUserArenaChunkToFault
runtime.(*mspan).setUserArenaChunkToFault.func1
runtime.(*muintptr).set
runtime.(*notInHeap).add
runtime.(*p).destroy
runtime.(*p).destroy.func1
runtime.(*p).init
runtime.(*pageAlloc).alloc
runtime.(*pageAlloc).allocRange
runtime.(*pageAlloc).allocToCache
runtime.(*pageAlloc).chunkOf
runtime.(*pageAlloc).find
runtime.(*pageAlloc).find.func1
runtime.(*pageAlloc).findMappedAddr
runtime.(*pageAlloc).free
runtime.(*pageAlloc).grow
runtime.(*pageAlloc).init
runtime.(*pageAlloc).scavenge
runtime.(*pageAlloc).scavenge.func1
runtime.(*pageAlloc).scavengeOne
runtime.(*pageAlloc).sysGrow
runtime.(*pageAlloc).sysGrow.func1
runtime.(*pageAlloc).sysGrow.func2
runtime.(*pageAlloc).sysGrow.func3
runtime.(*pageAlloc).sysInit
runtime.(*pageAlloc).update
runtime.(*pageBits).block64
runtime.(*pageBits).clear
runtime.(*pageBits).clearAll
runtime.(*pageBits).clearBlock64
runtime.(*pageBits).clearRange
runtime.(*pageBits).popcntRange
runtime.(*pageBits).set
runtime.(*pageBits).setAll
runtime.(*pageBits).setBlock64
runtime.(*pageBits).setRange
runtime.(*pageCache).alloc
runtime.(*pageCache).allocN
runtime.(*pageCache).empty
runtime.(*pageCache).flush
runtime.(*pallocBits).allocAll
runtime.(*pallocBits).allocPages64
runtime.(*pallocBits).allocRange
runtime.(*pallocBits).find
runtime.(*pallocBits).find1
runtime.(*pallocBits).findLargeN
runtime.(*pallocBits).findSmallN
runtime.(*pallocBits).free
runtime.(*pallocBits).free1
runtime.(*pallocBits).freeAll
runtime.(*pallocBits).pages64
runtime.(*pallocBits).summarize
runtime.(*pallocData).allocAll
runtime.(*pallocData).allocRange
runtime.(*pallocData).findScavengeCandidate
runtime.(*piController).next
runtime.(*piController).reset
runtime.(*plainError).Error
runtime.(*pollCache).alloc
runtime.(*pollCache).free
runtime.(*pollDesc).info
runtime.(*pollDesc).publishInfo
runtime.(*pollDesc).setEventErr
runtime.(*profAtomic).cas
runtime.(*profAtomic).load
runtime.(*profBuf).canWriteRecord
runtime.(*profBuf).canWriteTwoRecords
runtime.(*profBuf).hasOverflow
runtime.(*profBuf).incrementOverflow
runtime.(*profBuf).takeOverflow
runtime.(*profBuf).wakeupExtra
runtime.(*profBuf).write
runtime.(*puintptr).set
runtime.(*randomEnum).done
runtime.(*randomEnum).next
runtime.(*randomEnum).position
runtime.(*randomOrder).reset
runtime.(*randomOrder).start
runtime.(*rwmutex).rlock
runtime.(*rwmutex).rlock.func1
runtime.(*rwmutex).runlock
runtime.(*scavengeIndex).clear
runtime.(*scavengeIndex).find
runtime.(*scavengeIndex).grow
runtime.(*scavengeIndex).mark
runtime.(*scavengerState).controllerFailed
runtime.(*scavengerState).init
runtime.(*scavengerState).init.func1
runtime.(*scavengerState).init.func2
runtime.(*scavengerState).init.func3
runtime.(*scavengerState).init.func4
runtime.(*scavengerState).park
runtime.(*scavengerState).ready
runtime.(*scavengerState).run
runtime.(*scavengerState).sleep
runtime.(*scavengerState).wake
runtime.(*semTable).rootFor
runtime.(*semaRoot).dequeue
runtime.(*semaRoot).queue
runtime.(*semaRoot).rotateLeft
runtime.(*semaRoot).rotateRight
runtime.(*sigctxt).cs
runtime.(*sigctxt).fault
runtime.(*sigctxt).fixsigcode
runtime.(*sigctxt).fs
runtime.(*sigctxt).gs
runtime.(*sigctxt).preparePanic
runtime.(*sigctxt).pushCall
runtime.(*sigctxt).r10
runtime.(*sigctxt).r11
runtime.(*sigctxt).r12
runtime.(*sigctxt).r13
runtime.(*sigctxt).r14
runtime.(*sigctxt).r15
runtime.(*sigctxt).r8
runtime.(*sigctxt).r9
runtime.(*sigctxt).rax
runtime.(*sigctxt).rbp
runtime.(*sigctxt).rbx
runtime.(*sigctxt).rcx
runtime.(*sigctxt).rdi
runtime.(*sigctxt).rdx
runtime.(*sigctxt).regs
runtime.(*sigctxt).rflags
runtime.(*sigctxt).rip
runtime.(*sigctxt).rsi
runtime.(*sigctxt).rsp
runtime.(*sigctxt).set_rip
runtime.(*sigctxt).set_rsp
runtime.(*sigctxt).sigFromUser
runtime.(*sigctxt).sigaddr
runtime.(*sigctxt).sigcode
runtime.(*sigctxt).siglr
runtime.(*sigctxt).sigpc
runtime.(*sigctxt).sigsp
runtime.(*spanSet).pop
runtime.(*spanSet).push
runtime.(*spanSet).reset
runtime.(*spanSetBlockAlloc).alloc
runtime.(*spanSetBlockAlloc).free
runtime.(*specialsIter).next
runtime.(*specialsIter).unlinkAndNext
runtime.(*specialsIter).valid
runtime.(*stackObject).setRecord
runtime.(*stackObjectRecord).gcdata
runtime.(*stackObjectRecord).ptrdata
runtime.(*stackObjectRecord).useGCProg
runtime.(*stackScanState).addObject
runtime.(*stackScanState).buildIndex
runtime.(*stackScanState).findObject
runtime.(*stackScanState).getPtr
runtime.(*stackScanState).putPtr
runtime.(*stkframe).argBytes
runtime.(*stkframe).argMapInternal
runtime.(*stkframe).getStackMap
runtime.(*sweepClass).clear
runtime.(*sweepClass).load
runtime.(*sweepClass).update
runtime.(*sweepLocked).sweep
runtime.(*sweepLocked).sweep.func1
runtime.(*sweepLocker).tryAcquire
runtime.(*sysMemStat).add
runtime.(*sysMemStat).load
runtime.(*timeHistogram).record
runtime.(*timespec).setNsec
runtime.(*traceAlloc).alloc
runtime.(*traceAllocBlockPtr).set
runtime.(*traceBuf).byte
runtime.(*traceBuf).varint
runtime.(*traceBufPtr).set
runtime.(*traceStack).stack
runtime.(*traceStackTable).find
runtime.(*traceStackTable).newStack
runtime.(*traceStackTable).put
runtime.(*traceStackTable).put.func1
runtime.(*waitReason).String
runtime.(*waitq).dequeue
runtime.(*waitq).dequeueSudoG
runtime.(*waitq).enqueue
runtime.(*wbBuf).discard
runtime.(*wbBuf).putFast
runtime.(*wbBuf).reset
runtime.(*workbuf).checkempty
runtime.(*workbuf).checknonempty
runtime.Callers
runtime.CallersFrames
runtime.GOMAXPROCS
runtime.GOROOT
runtime.Gosched
runtime.LockOSThread
runtime.SetFinalizer
runtime.SetFinalizer.func1
runtime.SetFinalizer.func2
runtime.UnlockOSThread
runtime._ELF_ST_BIND
runtime._ELF_ST_TYPE
runtime._ExternalCode
runtime._GC
runtime._LostExternalCode
runtime._LostSIGPROFDuringAtomic64
runtime._System
runtime._VDSO
runtime.abort
runtime.acquireLockRank
runtime.acquireSudog
runtime.acquirem
runtime.acquirep
runtime.activeModules
runtime.add
runtime.add1
runtime.addAdjustedTimers
runtime.addOneOpenDeferFrame
runtime.addOneOpenDeferFrame.func1
runtime.addOneOpenDeferFrame.func1.1
runtime.addb
runtime.addfinalizer
runtime.addrRange.contains
runtime.addrRange.size
runtime.addrRange.subtract
runtime.addrsToSummaryRange
runtime.addspecial
runtime.adjustSignalStack
runtime.adjustctxt
runtime.adjustdefers
runtime.adjustframe
runtime.adjustpanics
runtime.adjustpointer
runtime.adjustpointers
runtime.adjustsudogs
runtime.adjusttimers
runtime.advanceEvacuationMark
runtime.alginit
runtime.alignDown
runtime.alignUp
runtime.allGsSnapshot
runtime.allgadd
runtime.allocm
runtime.allocm.func1
runtime.allocmcache
runtime.allocmcache.func1
runtime.appendIntStr
runtime.archauxv
runtime.arenaIdx.l1
runtime.arenaIdx.l2
runtime.arenaIndex
runtime.args
runtime.argv_index
runtime.asmcgocall
runtime.asminit
runtime.assertE2I
runtime.assertE2I2
runtime.assertI2I2
runtime.assertLockHeld
runtime.assertWorldStopped
runtime.assertWorldStoppedOrLockHeld
runtime.asyncPreempt
runtime.asyncPreempt2
runtime.atoi
runtime.atoi32
runtime.atoi64
runtime.atomicAllG
runtime.atomicAllGIndex
runtime.atomicstorep
runtime.atomicwb
runtime.badPointer
runtime.badTimer
runtime.badctxt
runtime.badmcall
runtime.badmcall2
runtime.badmorestackg0
runtime.badmorestackgsignal
runtime.badreflectcall
runtime.badsignal
runtime.badsystemstack
runtime.badunlockosthread
runtime.beforeIdle
runtime.bgscavenge
runtime.bgsweep
runtime.binarySearchTree
runtime.blockAlignSummaryRange
runtime.blockableSig
runtime.blockevent
runtime.blocksampled
runtime.bool2int
runtime.boundsError.Error
runtime.bucketEvacuated
runtime.bucketMask
runtime.bucketShift
runtime.bulkBarrierBitmap
runtime.bulkBarrierPreWrite
runtime.bulkBarrierPreWriteSrcOnly
runtime.bytes
runtime.c128equal
runtime.c128hash
runtime.c64equal
runtime.c64hash
runtime.call1024
runtime.call1048576
runtime.call1073741824
runtime.call128
runtime.call131072
runtime.call134217728
runtime.call16
runtime.call16384
runtime.call16777216
runtime.call2048
runtime.call2097152
runtime.call256
runtime.call262144
runtime.call268435456
runtime.call32
runtime.call32768
runtime.call33554432
runtime.call4096
runtime.call4194304
runtime.call512
runtime.call524288
runtime.call536870912
runtime.call64
runtime.call65536
runtime.call67108864
runtime.call8192
runtime.call8388608
runtime.callCgoMmap
runtime.callCgoMunmap
runtime.callCgoSigaction
runtime.callCgoSymbolizer
runtime.callers
runtime.callers.func1
runtime.canPreemptM
runtime.canpanic
runtime.cansemacquire
runtime.casGFromPreempted
runtime.casGToPreemptScan
runtime.casGToWaiting
runtime.casfrom_Gscanstatus
runtime.casgstatus
runtime.casgstatus.func1
runtime.castogscanstatus
runtime.cfuncname
runtime.cfuncnameFromNameOff
runtime.cgoCheckBits
runtime.cgoCheckMemmove
runtime.cgoCheckSliceCopy
runtime.cgoCheckTypedBlock
runtime.cgoCheckTypedBlock.func1
runtime.cgoCheckUsingType
runtime.cgoCheckWriteBarrier
runtime.cgoCheckWriteBarrier.func1
runtime.cgoContextPCs
runtime.cgoInRange
runtime.cgoIsGoPointer
runtime.cgoSigtramp
runtime.cgocall
runtime.chanbuf
runtime.chanparkcommit
runtime.chanrecv
runtime.chanrecv.func1
runtime.chanrecv1
runtime.chansend
runtime.chansend.func1
runtime.chansend1
runtime.check
runtime.checkASM
runtime.checkIdleGCNoP
runtime.checkRunqsNoP
runtime.checkTimeouts
runtime.checkTimers
runtime.checkTimersNoP
runtime.checkdead
runtime.checkdead.func1
runtime.checkmcount
runtime.chunkBase
runtime.chunkIdx.l1
runtime.chunkIdx.l2
runtime.chunkIndex
runtime.chunkPageIndex
runtime.clearDeletedTimers
runtime.clearpools
runtime.clobberfree
runtime.clone
runtime.closechan
runtime.closefd
runtime.cmpstring
runtime.concatstring2
runtime.concatstring3
runtime.concatstring4
runtime.concatstring5
runtime.concatstrings
runtime.convT
runtime.convT64
runtime.convTnoptr
runtime.convTslice
runtime.convTstring
runtime.copystack
runtime.countSub
runtime.cpuinit
runtime.cputicks
runtime.crash
runtime.createfing
runtime.debugCallCheck
runtime.debugCallCheck.func1
runtime.debugCallPanicked
runtime.debugCallV2
runtime.debugCallWrap
runtime.debugCallWrap.func1
runtime.debugCallWrap.func2
runtime.debugCallWrap1
runtime.debugCallWrap1.func1
runtime.debugCallWrap2
runtime.debugCallWrap2.func1
runtime.decoderune
runtime.deductAssistCredit
runtime.deductSweepCredit
runtime.deferCallSave
runtime.deferprocStack
runtime.deferreturn
runtime.deltimer
runtime.dematerializeGCProg
runtime.dieFromSignal
runtime.divRoundUp
runtime.doInit
runtime.doRecordGoroutineProfile
runtime.doRecordGoroutineProfile.func1
runtime.doSigPreempt
runtime.doaddtimer
runtime.dodeltimer
runtime.dodeltimer0
runtime.dolockOSThread
runtime.dopanic_m
runtime.dounlockOSThread
runtime.dropg
runtime.dropm
runtime.duffcopy
runtime.duffzero
runtime.dumpgstatus
runtime.dumpregs
runtime.efaceOf
runtime.efaceeq
runtime.elideWrapperCalling
runtime.empty
runtime.encoderune
runtime.endCheckmarks
runtime.ensureSigM
runtime.ensureSigM.func1
runtime.entersyscall
runtime.entersyscall_gcwait
runtime.entersyscall_sysmon
runtime.entersyscallblock
runtime.entersyscallblock.func1
runtime.entersyscallblock.func2
runtime.entersyscallblock_handoff
runtime.envKeyEqual
runtime.environ
runtime.eqslice
runtime.errorAddressString.Error
runtime.errorString.Error
runtime.evacuate
runtime.evacuate_fast32
runtime.evacuate_fast64
runtime.evacuate_faststr
runtime.evacuated
runtime.execute
runtime.exit
runtime.exitThread
runtime.exitsyscall
runtime.exitsyscall.func1
runtime.exitsyscall0
runtime.exitsyscallfast
runtime.exitsyscallfast.func1
runtime.exitsyscallfast_pidle
runtime.exitsyscallfast_reacquired
runtime.exitsyscallfast_reacquired.func1
runtime.expandCgoFrames
runtime.extendRandom
runtime.f32equal
runtime.f32hash
runtime.f64equal
runtime.f64hash
runtime.fastexprand
runtime.fastlog2
runtime.fastrand
runtime.fastrand64
runtime.fastrandinit
runtime.fastrandn
runtime.fatal
runtime.fatal.func1
runtime.fatalpanic
runtime.fatalpanic.func1
runtime.fatalpanic.func2
runtime.fatalthrow
runtime.fatalthrow.func1
runtime.fillAligned
runtime.fillAligned.func1
runtime.finalizercommit
runtime.findBitRange64
runtime.findObject
runtime.findRunnable
runtime.findfunc
runtime.findmoduledatap
runtime.findnull
runtime.findsghi
runtime.finishPageTrace
runtime.finishsweep_m
runtime.float64bits
runtime.float64frombits
runtime.fmtNSAsMS
runtime.forEachG
runtime.forEachGRace
runtime.forEachP
runtime.forcegchelper
runtime.freeSomeWbufs
runtime.freeSomeWbufs.func1
runtime.freeSpecial
runtime.freeStackSpans
runtime.freedefer
runtime.freedeferfn
runtime.freedeferpanic
runtime.freemcache
runtime.freemcache.func1
runtime.freezetheworld
runtime.full
runtime.funcInfo._Func
runtime.funcInfo.entry
runtime.funcInfo.valid
runtime.funcMaxSPDelta
runtime.funcdata
runtime.funcfile
runtime.funcline
runtime.funcline1
runtime.funcname
runtime.funcnameFromNameOff
runtime.funcpkgpath
runtime.funcspdelta
runtime.futex
runtime.futexsleep
runtime.futexwakeup
runtime.futexwakeup.func1
runtime.gcAssistAlloc
runtime.gcAssistAlloc.func1
runtime.gcAssistAlloc1
runtime.gcBgMarkPrepare
runtime.gcBgMarkStartWorkers
runtime.gcBgMarkWorker
runtime.gcBgMarkWorker.func1
runtime.gcBgMarkWorker.func2
runtime.gcComputeStartingStackSize
runtime.gcControllerCommit
runtime.gcDrain
runtime.gcDrainN
runtime.gcDumpObject
runtime.gcFlushBgCredit
runtime.gcMark
runtime.gcMarkDone
runtime.gcMarkDone.func1
runtime.gcMarkDone.func1.1
runtime.gcMarkDone.func2
runtime.gcMarkDone.func3
runtime.gcMarkRootCheck
runtime.gcMarkRootCheck.func1
runtime.gcMarkRootPrepare
runtime.gcMarkRootPrepare.func1
runtime.gcMarkTermination
runtime.gcMarkTermination.func1
runtime.gcMarkTermination.func2
runtime.gcMarkTermination.func3
runtime.gcMarkTermination.func4
runtime.gcMarkTermination.func4.1
runtime.gcMarkTinyAllocs
runtime.gcMarkWorkAvailable
runtime.gcPaceScavenger
runtime.gcPaceSweeper
runtime.gcParkAssist
runtime.gcResetMarkState
runtime.gcResetMarkState.func1
runtime.gcStart
runtime.gcStart.func1
runtime.gcStart.func2
runtime.gcSweep
runtime.gcTrigger.test
runtime.gcWakeAllAssists
runtime.gcWriteBarrier
runtime.gcWriteBarrierBX
runtime.gcWriteBarrierCX
runtime.gcWriteBarrierDX
runtime.gcWriteBarrierR8
runtime.gcWriteBarrierR9
runtime.gcWriteBarrierSI
runtime.gcallers
runtime.gcd
runtime.gcenable
runtime.gcenable.func1
runtime.gcenable.func2
runtime.gcinit
runtime.gclinkptr.ptr
runtime.gcmarknewobject
runtime.gcstopm
runtime.gentraceback
runtime.getGodebugEarly
runtime.getHugePageSize
runtime.getLockRank
runtime.getMCache
runtime.getRandomData
runtime.getargp
runtime.getempty
runtime.getempty.func1
runtime.getitab
runtime.getpid
runtime.getproccount
runtime.getsig
runtime.gettid
runtime.gfget
runtime.gfget.func1
runtime.gfget.func2
runtime.gfpurge
runtime.gfput
runtime.globrunqget
runtime.globrunqput
runtime.globrunqputbatch
runtime.globrunqputhead
runtime.goPanicIndex
runtime.goPanicIndexU
runtime.goPanicSlice3Acap
runtime.goPanicSlice3Alen
runtime.goPanicSlice3AlenU
runtime.goPanicSlice3B
runtime.goPanicSlice3C
runtime.goPanicSliceAcap
runtime.goPanicSliceAcapU
runtime.goPanicSliceAlen
runtime.goPanicSliceAlenU
runtime.goPanicSliceB
runtime.goPanicSliceBU
runtime.goargs
runtime.godebugNotify
runtime.goenvs
runtime.goenvs_unix
runtime.goexit
runtime.goexit0
runtime.goexit1
runtime.gogetenv
runtime.gogo
runtime.gopanic
runtime.gopark
runtime.goparkunlock
runtime.gopreempt_m
runtime.goready
runtime.goready.func1
runtime.gorecover
runtime.goroutineReady
runtime.goroutineheader
runtime.goschedIfBusy
runtime.goschedImpl
runtime.gosched_m
runtime.goschedguarded
runtime.goschedguarded_m
runtime.gostartcall
runtime.gostartcallfn
runtime.gostring
runtime.gostringnocopy
runtime.gotraceback
runtime.goyield
runtime.goyield_m
runtime.greyobject
runtime.growWork
runtime.growWork_fast32
runtime.growWork_fast64
runtime.growWork_faststr
runtime.growslice
runtime.guintptr.ptr
runtime.gwrite
runtime.handoff
runtime.handoffp
runtime.hasPrefix
runtime.hashGrow
runtime.headTailIndex.head
runtime.headTailIndex.split
runtime.headTailIndex.tail
runtime.heapBits.next
runtime.heapBits.nextFast
runtime.heapBitsForAddr
runtime.heapBitsSetType
runtime.heapRetained
runtime.hexdumpWords
runtime.ifaceeq
runtime.inHeapOrStack
runtime.inPersistentAlloc
runtime.inUserArenaChunk
runtime.inVDSOPage
runtime.incidlelocked
runtime.init
runtime.init.0
runtime.init.1
runtime.init.4
runtime.init.5
runtime.init.6
runtime.initAlgAES
runtime.initPageTrace
runtime.initsig
runtime.injectglist
runtime.injectglist.func1
runtime.int64Hash
runtime.interequal
runtime.interhash
runtime.intstring
runtime.isAbortPC
runtime.isAsyncSafePoint
runtime.isDirectIface
runtime.isEmpty
runtime.isExportedRuntime
runtime.isFinite
runtime.isInf
runtime.isNaN
runtime.isPowerOfTwo
runtime.isShrinkStackSafe
runtime.isSweepDone
runtime.isSystemGoroutine
runtime.itabAdd
runtime.itabHashFunc
runtime.itabsinit
runtime.iterate_itabs
runtime.itoa
runtime.itoaDiv
runtime.key32
runtime.levelIndexToOffAddr
runtime.lfnodeValidate
runtime.lfstackPack
runtime.lfstackUnpack
runtime.limiterEventStamp.duration
runtime.limiterEventStamp.typ
runtime.lock
runtime.lock2
runtime.lockInit
runtime.lockOSThread
runtime.lockRank.String
runtime.lockRankMayQueueFinalizer
runtime.lockRankMayTraceFlush
runtime.lockWithRank
runtime.lockWithRankMayAcquire
runtime.lockextra
runtime.mPark
runtime.mProf_Flush
runtime.mProf_FlushLocked
runtime.mProf_Free
runtime.mProf_Malloc
runtime.mProf_Malloc.func1
runtime.mProf_NextCycle
runtime.mReserveID
runtime.mStackIsSystemAllocated
runtime.madvise
runtime.main
runtime.main.func1
runtime.main.func2
runtime.makeAddrRange
runtime.makeBucketArray
runtime.makeHeadTailIndex
runtime.makeLimiterEventStamp
runtime.makeSpanClass
runtime.makechan
runtime.makemap
runtime.makemap_small
runtime.makeslice
runtime.makeslicecopy
runtime.malg
runtime.malg.func1
runtime.mallocgc
runtime.mallocinit
runtime.mapaccess1_fast32
runtime.mapaccess1_fast64
runtime.mapaccess1_faststr
runtime.mapaccess2
runtime.mapaccess2_fast32
runtime.mapaccess2_fast64
runtime.mapaccess2_faststr
runtime.mapaccessK
runtime.mapassign
runtime.mapassign_fast32
runtime.mapassign_fast64ptr
runtime.mapassign_faststr
runtime.mapdelete
runtime.mapiterinit
runtime.mapiternext
runtime.markBits.isMarked
runtime.markBits.setMarked
runtime.markBits.setMarkedNonAtomic
runtime.markroot
runtime.markroot.func1
runtime.markrootBlock
runtime.markrootFreeGStacks
runtime.markrootSpans
runtime.materializeGCProg
runtime.maxSearchAddr
runtime.mcall
runtime.mcommoninit
runtime.mcount
runtime.mdestroy
runtime.memclrHasPointers
runtime.memclrNoHeapPointers
runtime.memclrNoHeapPointersChunked
runtime.memequal
runtime.memequal0
runtime.memequal128
runtime.memequal16
runtime.memequal32
runtime.memequal64
runtime.memequal8
runtime.memequal_varlen
runtime.memhash
runtime.memhash128
runtime.memhash32
runtime.memhash32Fallback
runtime.memhash64
runtime.memhash64Fallback
runtime.memhashFallback
runtime.memmove
runtime.mergeSummaries
runtime.mexit
runtime.mget
runtime.mincore
runtime.minit
runtime.minitSignalMask
runtime.minitSignalStack
runtime.minitSignals
runtime.mix
runtime.mmap
runtime.mmap.func1
runtime.modtimer
runtime.moduledataverify
runtime.moduledataverify1
runtime.modulesinit
runtime.morestack
runtime.morestack_noctxt
runtime.morestackc
runtime.moveTimers
runtime.mpreinit
runtime.mput
runtime.msigrestore
runtime.mspinning
runtime.mstart
runtime.mstart0
runtime.mstart1
runtime.mstartm0
runtime.muintptr.ptr
runtime.munmap
runtime.munmap.func1
runtime.name.data
runtime.name.isBlank
runtime.name.isEmbedded
runtime.name.isExported
runtime.name.name
runtime.name.pkgPath
runtime.name.readvarint
runtime.name.tag
runtime.nanotime
runtime.nanotime1
runtime.needm
runtime.netpoll
runtime.netpollBreak
runtime.netpollGenericInit
runtime.netpollblock
runtime.netpollblockcommit
runtime.netpollcheckerr
runtime.netpollclose
runtime.netpollgoready
runtime.netpollinit
runtime.netpollinited
runtime.netpollopen
runtime.netpollready
runtime.netpollunblock
runtime.newAllocBits
runtime.newArenaMayUnlock
runtime.newBucket
runtime.newMarkBits
runtime.newSpecialsIter
runtime.newarray
runtime.newdefer
runtime.newextram
runtime.newm
runtime.newm1
runtime.newobject
runtime.newosproc
runtime.newosproc.func1
runtime.newproc
runtime.newproc.func1
runtime.newproc1
runtime.newstack
runtime.nextFreeFast
runtime.nextMarkBitArenaEpoch
runtime.nextSample
runtime.nilfunc
runtime.nilinterequal
runtime.nilinterhash
runtime.noSignalStack
runtime.nobarrierWakeTime
runtime.noescape
runtime.nonblockingPipe
runtime.noteclear
runtime.notesleep
runtime.notetsleep
runtime.notetsleep_internal
runtime.notetsleepg
runtime.notewakeup
runtime.offAddr.add
runtime.offAddr.addr
runtime.offAddr.diff
runtime.offAddr.equal
runtime.offAddr.lessEqual
runtime.offAddr.lessThan
runtime.offAddrToLevelIndex
runtime.oneNewExtraM
runtime.open
runtime.osArchInit
runtime.osPreemptExtEnter
runtime.osPreemptExtExit
runtime.osRelax
runtime.osSetupTLS
runtime.osStackAlloc
runtime.osStackFree
runtime.osinit
runtime.osyield
runtime.osyield_no_g
runtime.overLoadFactor
runtime.pMask.clear
runtime.pMask.read
runtime.pMask.set
runtime.packPallocSum
runtime.pageIndexOf
runtime.pageTraceAlloc
runtime.pageTraceFree
runtime.pageTraceScav
runtime.pallocSum.end
runtime.pallocSum.max
runtime.pallocSum.start
runtime.pallocSum.unpack
runtime.panicCheck1
runtime.panicCheck2
runtime.panicIndex
runtime.panicIndexU
runtime.panicSlice3Acap
runtime.panicSlice3Alen
runtime.panicSlice3AlenU
runtime.panicSlice3B
runtime.panicSlice3C
runtime.panicSliceAcap
runtime.panicSliceAcapU
runtime.panicSliceAlen
runtime.panicSliceAlenU
runtime.panicSliceB
runtime.panicSliceBU
runtime.panicdivide
runtime.panicdottypeE
runtime.panicdottypeI
runtime.panicfloat
runtime.panicmakeslicecap
runtime.panicmakeslicelen
runtime.panicmem
runtime.panicmemAddr
runtime.panicoverflow
runtime.panicshift
runtime.panicunsafeslicelen
runtime.panicunsafeslicenilptr
runtime.panicunsafestringlen
runtime.panicunsafestringnilptr
runtime.panicwrap
runtime.park_m
runtime.parkunlock_c
runtime.parseByteCount
runtime.parsedebugvars
runtime.pcdatastart
runtime.pcdatavalue
runtime.pcdatavalue1
runtime.pcdatavalue2
runtime.pcvalue
runtime.pcvalueCacheKey
runtime.persistentalloc
runtime.persistentalloc.func1
runtime.persistentalloc1
runtime.pidleget
runtime.pidlegetSpinning
runtime.pidleput
runtime.pipe2
runtime.plainError.Error
runtime.pollFractionalWorkerExit
runtime.pollInfo.closing
runtime.pollInfo.eventErr
runtime.pollInfo.expiredReadDeadline
runtime.pollInfo.expiredWriteDeadline
runtime.pollWork
runtime.preemptM
runtime.preemptPark
runtime.preemptall
runtime.preemptone
runtime.prepareFreeWorkbufs
runtime.preprintpanics
runtime.preprintpanics.func1
runtime.printAncestorTraceback
runtime.printAncestorTracebackFuncInfo
runtime.printArgs
runtime.printArgs.func1
runtime.printArgs.func2
runtime.printArgs.func3
runtime.printCgoTraceback
runtime.printDebugLog
runtime.printOneCgoTraceback
runtime.printScavTrace
runtime.printany
runtime.printanycustomtype
runtime.printbool
runtime.printcomplex
runtime.printcreatedby
runtime.printcreatedby1
runtime.printfloat
runtime.printhex
runtime.printint
runtime.printlock
runtime.printnl
runtime.printpanics
runtime.printpointer
runtime.printslice
runtime.printsp
runtime.printstring
runtime.printuint
runtime.printuintptr
runtime.printunlock
runtime.procPin
runtime.procUnpin
runtime.procresize
runtime.procyield
runtime.profIndex.addCountsAndClearFlags
runtime.profIndex.dataCount
runtime.profIndex.tagCount
runtime.profilealloc
runtime.progToPointerMask
runtime.publicationBarrier
runtime.puintptr.ptr
runtime.putempty
runtime.putfull
runtime.queuefinalizer
runtime.r4
runtime.r8
runtime.raise
runtime.raisebadsignal
runtime.raiseproc
runtime.rawbyteslice
runtime.rawstring
runtime.rawstringtmp
runtime.read
runtime.readGOGC
runtime.readGOMEMLIMIT
runtime.readUintptr
runtime.readUnaligned32
runtime.readUnaligned64
runtime.readgstatus
runtime.readvarint
runtime.readvarintUnsafe
runtime.ready
runtime.readyWithTime
runtime.recordForPanic
runtime.recordspan
runtime.recovery
runtime.recv
runtime.recvDirect
runtime.reentersyscall
runtime.reentersyscall.func1
runtime.reflectOffsLock
runtime.reflectOffsUnlock
runtime.reflectcall
runtime.reflectcallmove
runtime.releaseLockRank
runtime.releaseSudog
runtime.releasem
runtime.releasep
runtime.removefinalizer
runtime.removespecial
runtime.resetForSleep
runtime.resetspinning
runtime.resettimer
runtime.resolveNameOff
runtime.resolveTypeOff
runtime.restoreGsignalStack
runtime.resumeG
runtime.retake
runtime.retryOnEAGAIN
runtime.return0
runtime.round2
runtime.roundupsize
runtime.rt0_go
runtime.rt_sigaction
runtime.rtsigprocmask
runtime.runExitHooks
runtime.runExitHooks.func1
runtime.runExitHooks.func1.1
runtime.runGCProg
runtime.runOneTimer
runtime.runOpenDeferFrame
runtime.runPerThreadSyscall
runtime.runSafePointFn
runtime.runfinq
runtime.runqdrain
runtime.runqempty
runtime.runqget
runtime.runqgrab
runtime.runqput
runtime.runqputbatch
runtime.runqputslow
runtime.runqsteal
runtime.runtimer
runtime.save
runtime.saveAncestors
runtime.saveblockevent
runtime.saveg
runtime.scanConservative
runtime.scanblock
runtime.scanframeworker
runtime.scanobject
runtime.scanstack
runtime.scanstack.func1
runtime.schedEnableUser
runtime.schedEnabled
runtime.sched_getaffinity
runtime.schedinit
runtime.schedtrace
runtime.schedtrace.func1
runtime.schedule
runtime.selectgo
runtime.selectgo.func2
runtime.selectgo.func3
runtime.selectnbrecv
runtime.selectnbsend
runtime.sellock
runtime.selparkcommit
runtime.selunlock
runtime.semacquire
runtime.semacquire1
runtime.semrelease
runtime.semrelease1
runtime.send
runtime.sendDirect
runtime.setCheckmark
runtime.setGCPhase
runtime.setGNoWB
runtime.setGsignalStack
runtime.setMNoWB
runtime.setSignalstackSP
runtime.setThreadCPUProfiler
runtime.setg
runtime.setprofilebucket
runtime.setsig
runtime.setsigstack
runtime.settls
runtime.shade
runtime.shouldPushSigpanic
runtime.showframe
runtime.showfuncinfo
runtime.shrinkstack
runtime.siftdownTimer
runtime.siftupTimer
runtime.sigFetchG
runtime.sigInitIgnored
runtime.sigInstallGoHandler
runtime.sigNotOnStack
runtime.sigaction
runtime.sigaction.func1
runtime.sigaddset
runtime.sigaltstack
runtime.sigblock
runtime.sigdelset
runtime.sigenable
runtime.sigfillset
runtime.sigfwd
runtime.sigfwdgo
runtime.sighandler
runtime.signalDuringFork
runtime.signalM
runtime.signalstack
runtime.signame
runtime.sigpanic
runtime.sigpanic0
runtime.sigpipe
runtime.sigprocmask
runtime.sigprof
runtime.sigprofNonGo
runtime.sigprofNonGoPC
runtime.sigprofNonGoWrapper
runtime.sigreturn
runtime.sigsave
runtime.sigsend
runtime.sigtramp
runtime.sigtrampgo
runtime.slicebytetostring
runtime.spanAllocType.manual
runtime.spanClass.noscan
runtime.spanClass.sizeclass
runtime.spanHasNoSpecials
runtime.spanHasSpecials
runtime.spanOf
runtime.spanOfHeap
runtime.spanOfUnchecked
runtime.spanSetSpinePointer.lookup
runtime.spillArgs
runtime.stackalloc
runtime.stackcache_clear
runtime.stackcacherefill
runtime.stackcacherelease
runtime.stackcheck
runtime.stackfree
runtime.stackinit
runtime.stacklog2
runtime.stackmapdata
runtime.stackpoolalloc
runtime.stackpoolfree
runtime.startCheckmarks
runtime.startPCforTrace
runtime.startTemplateThread
runtime.startTheWorld
runtime.startTheWorld.func1
runtime.startTheWorldGC
runtime.startTheWorldWithSema
runtime.startlockedm
runtime.startm
runtime.startpanic_m
runtime.stealWork
runtime.step
runtime.stkbucket
runtime.stkobjinit
runtime.stopTheWorld
runtime.stopTheWorld.func1
runtime.stopTheWorldGC
runtime.stopTheWorldWithSema
runtime.stoplockedm
runtime.stopm
runtime.strequal
runtime.strhash
runtime.strhashFallback
runtime.stringDataOnStack
runtime.stringStructOf
runtime.stringtoslicebyte
runtime.subtract1
runtime.subtractb
runtime.suspendG
runtime.sweepClass.split
runtime.sweepone
runtime.sweepone.func1
runtime.syncadjustsudogs
runtime.sysAlloc
runtime.sysAllocOS
runtime.sysFault
runtime.sysFaultOS
runtime.sysFree
runtime.sysFreeOS
runtime.sysHugePageOS
runtime.sysMap
runtime.sysMapOS
runtime.sysMmap
runtime.sysMunmap
runtime.sysReserve
runtime.sysReserveAligned
runtime.sysReserveOS
runtime.sysSigaction
runtime.sysSigaction.func1
runtime.sysUnused
runtime.sysUnusedOS
runtime.sysUsed
runtime.sysUsedOS
runtime.sysargs
runtime.sysauxv
runtime.sysmon
runtime.systemstack
runtime.systemstack_switch
runtime.templateThread
runtime.testAtomic64
runtime.tgkill
runtime.throw
runtime.throw.func1
runtime.timeSleepUntil
runtime.timediv
runtime.timer_create
runtime.timer_delete
runtime.timer_settime
runtime.tooManyOverflowBuckets
runtime.tophash
runtime.traceAcquireBuffer
runtime.traceAllocBlockPtr.ptr
runtime.traceBufPtr.ptr
runtime.traceBufPtrOf
runtime.traceCPUSample
runtime.traceEvent
runtime.traceEventLocked
runtime.traceEventLocked.func1
runtime.traceFlush
runtime.traceFullQueue
runtime.traceGCDone
runtime.traceGCMarkAssistDone
runtime.traceGCMarkAssistStart
runtime.traceGCSTWDone
runtime.traceGCSTWStart
runtime.traceGCStart
runtime.traceGCSweepDone
runtime.traceGCSweepSpan
runtime.traceGCSweepStart
runtime.traceGoCreate
runtime.traceGoEnd
runtime.traceGoPark
runtime.traceGoPreempt
runtime.traceGoSched
runtime.traceGoStart
runtime.traceGoSysBlock
runtime.traceGoSysCall
runtime.traceGoSysExit
runtime.traceGoUnpark
runtime.traceGomaxprocs
runtime.traceHeapAlloc
runtime.traceHeapGoal
runtime.traceProcFree
runtime.traceProcStart
runtime.traceProcStop
runtime.traceReader
runtime.traceReaderAvailable
runtime.traceReleaseBuffer
runtime.traceStackID
runtime.traceStackPtr.ptr
runtime.tracealloc
runtime.tracealloc.func1
runtime.traceback
runtime.traceback1
runtime.tracebackCgoContext
runtime.tracebackHexdump
runtime.tracebackHexdump.func1
runtime.tracebackothers
runtime.tracebackothers.func1
runtime.tracebacktrap
runtime.tracefree
runtime.tracefree.func1
runtime.tracegc
runtime.tryRecordGoroutineProfile
runtime.tryRecordGoroutineProfileWB
runtime.trygetfull
runtime.typeBitsBulkBarrier
runtime.typedmemclr
runtime.typedmemmove
runtime.typedslicecopy
runtime.typehash
runtime.typelinksinit
runtime.typesEqual
runtime.unblocksig
runtime.unlock
runtime.unlock2
runtime.unlockOSThread
runtime.unlockWithRank
runtime.unlockextra
runtime.unminit
runtime.unminitSignals
runtime.unreachableMethod
runtime.unspillArgs
runtime.updateTimer0When
runtime.updateTimerModifiedEarliest
runtime.updateTimerPMask
runtime.usesLibcall
runtime.usleep
runtime.usleep_no_g
runtime.validSIGPROF
runtime.vdsoFindVersion
runtime.vdsoInitFromSysinfoEhdr
runtime.vdsoParseSymbols
runtime.vdsoParseSymbols.func1
runtime.vdsoauxv
runtime.waitReason.String
runtime.waitReason.isMutexWait
runtime.wakeNetPoller
runtime.wakefing
runtime.wakep
runtime.wantAsyncPreempt
runtime.wbBufFlush
runtime.wbBufFlush.func1
runtime.wbBufFlush1
runtime.wirep
runtime.worldStarted
runtime.worldStopped
runtime.write
runtime.write1
runtime.writeErr
runtime.writeErrStr
runtime.writeHeapBits.flush
runtime.writeHeapBits.pad
runtime.writeHeapBits.write
runtime.writeHeapBitsForAddr
runtime/debug.SetTraceback
runtime/internal/atomic.(*Bool).Load
runtime/internal/atomic.(*Bool).Store
runtime/internal/atomic.(*Float64).Load
runtime/internal/atomic.(*Float64).Store
runtime/internal/atomic.(*Int32).Add
runtime/internal/atomic.(*Int32).CompareAndSwap
runtime/internal/atomic.(*Int32).Load
runtime/internal/atomic.(*Int32).Store
runtime/internal/atomic.(*Int64).Add
runtime/internal/atomic.(*Int64).CompareAndSwap
runtime/internal/atomic.(*Int64).Load
runtime/internal/atomic.(*Int64).Store
runtime/internal/atomic.(*Int64).Swap
runtime/internal/atomic.(*Pointer[go.shape.func(string, string)]).Load
runtime/internal/atomic.(*Pointer[go.shape.func(string, string)]).Store
runtime/internal/atomic.(*Pointer[go.shape.string]).Load
runtime/internal/atomic.(*Pointer[go.shape.string]).StoreNoWB
runtime/internal/atomic.(*Pointer[go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]).Load
runtime/internal/atomic.(*Pointer[go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]).StoreNoWB
runtime/internal/atomic.(*Pointer[go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.stackguard1 uintptr; runtime._panic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.sched runtime.gobuf; runtime.syscallsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param unsafe.Pointer; runtime.atomicstatus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; runtime.schedlink runtime.guintptr; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bool; runtime.preemptStop bool; runtime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; runtime.gcscandone bool; runtime.throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/internal/atomic.Bool; runtime.raceignore int8; runtime.sysblocktraced bool; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int64; runtime.runnableTime int64; runtime.sysexitticks int64; runtime.traceseq uint64; runtime.tracelastp runtime.puintptr; runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runtime.sigcode0 uintptr; runtime.sigcode1 uintptr; runtime.sigpc uintptr; runtime.gopc uintptr; runtime.ancestors *[]runtime.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *runtime.sudog; runtime.cgoCtxt []uintptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDone runtime/internal/atomic.Uint32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.gcAssistBytes int64 }]).CompareAndSwapNoWB
runtime/internal/atomic.(*Pointer[go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.stackguard1 uintptr; runtime._panic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.sched runtime.gobuf; runtime.syscallsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param unsafe.Pointer; runtime.atomicstatus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; runtime.schedlink runtime.guintptr; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bool; runtime.preemptStop bool; runtime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; runtime.gcscandone bool; runtime.throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/internal/atomic.Bool; runtime.raceignore int8; runtime.sysblocktraced bool; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int64; runtime.runnableTime int64; runtime.sysexitticks int64; runtime.traceseq uint64; runtime.tracelastp runtime.puintptr; runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runtime.sigcode0 uintptr; runtime.sigcode1 uintptr; runtime.sigpc uintptr; runtime.gopc uintptr; runtime.ancestors *[]runtime.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *runtime.sudog; runtime.cgoCtxt []uintptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDone runtime/internal/atomic.Uint32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.gcAssistBytes int64 }]).Load
runtime/internal/atomic.(*Uint32).Add
runtime/internal/atomic.(*Uint32).And
runtime/internal/atomic.(*Uint32).CompareAndSwap
runtime/internal/atomic.(*Uint32).Load
runtime/internal/atomic.(*Uint32).Or
runtime/internal/atomic.(*Uint32).Store
runtime/internal/atomic.(*Uint32).Swap
runtime/internal/atomic.(*Uint64).Add
runtime/internal/atomic.(*Uint64).CompareAndSwap
runtime/internal/atomic.(*Uint64).Load
runtime/internal/atomic.(*Uint64).Store
runtime/internal/atomic.(*Uint8).And
runtime/internal/atomic.(*Uint8).Load
runtime/internal/atomic.(*Uint8).Or
runtime/internal/atomic.(*Uint8).Store
runtime/internal/atomic.(*Uintptr).Add
runtime/internal/atomic.(*Uintptr).CompareAndSwap
runtime/internal/atomic.(*Uintptr).Load
runtime/internal/atomic.(*Uintptr).Store
runtime/internal/atomic.(*Uintptr).Swap
runtime/internal/atomic.(*UnsafePointer).CompareAndSwapNoWB
runtime/internal/atomic.(*UnsafePointer).Load
runtime/internal/atomic.(*UnsafePointer).Store
runtime/internal/atomic.(*UnsafePointer).StoreNoWB
runtime/internal/atomic.storePointer
runtime/internal/sys.LeadingZeros64
runtime/internal/sys.LeadingZeros8
runtime/internal/sys.OnesCount64
runtime/internal/syscall.EpollCreate1
runtime/internal/syscall.EpollCtl
runtime/internal/syscall.EpollWait
runtime/internal/syscall.Syscall6
setg_gcc
sort.Stable
sort.insertionSort
sort.rotate
sort.stable
sort.swapRange
sort.symMerge
strconv.(*decimal).Assign
strconv.(*decimal).Round
strconv.(*decimal).RoundDown
strconv.(*decimal).RoundUp
strconv.(*decimal).Shift
strconv.AppendFloat
strconv.AppendQuote
strconv.AppendQuoteRune
strconv.AppendQuoteRuneToASCII
strconv.AppendQuoteToASCII
strconv.CanBackquote
strconv.FormatInt
strconv.IsPrint
strconv.Itoa
strconv.appendEscapedRune
strconv.appendQuotedRuneWith
strconv.appendQuotedWith
strconv.bigFtoa
strconv.bsearch16
strconv.bsearch32
strconv.computeBounds
strconv.divisibleByPower5
strconv.divmod1e9
strconv.fmtB
strconv.fmtE
strconv.fmtF
strconv.fmtX
strconv.formatBits
strconv.formatDecimal
strconv.formatDigits
strconv.genericFtoa
strconv.init
strconv.isInGraphicList
strconv.isPowerOfTwo
strconv.leftShift
strconv.lower
strconv.max
strconv.min
strconv.mulByLog10Log2
strconv.mulByLog2Log10
strconv.mult128bitPow10
strconv.mult64bitPow10
strconv.prefixIsLessThan
strconv.rightShift
strconv.roundShortest
strconv.ryuDigits
strconv.ryuDigits32
strconv.ryuFtoaFixed32
strconv.ryuFtoaFixed64
strconv.ryuFtoaShortest
strconv.shouldRoundUp
strconv.small
strconv.trim
sync.(*Map).Load
sync.(*Map).LoadOrStore
sync.(*Map).Range
sync.(*Map).dirtyLocked
sync.(*Map).loadReadOnly
sync.(*Map).missLocked
sync.(*Mutex).Lock
sync.(*Mutex).Unlock
sync.(*Mutex).lockSlow
sync.(*Mutex).unlockSlow
sync.(*Once).Do
sync.(*Once).doSlow
sync.(*Once).doSlow.func1
sync.(*Once).doSlow.func2
sync.(*Pool).Get
sync.(*Pool).Put
sync.(*Pool).getSlow
sync.(*Pool).pin
sync.(*Pool).pinSlow
sync.(*Pool).pinSlow.func1
sync.(*RWMutex).RLock
sync.(*RWMutex).RUnlock
sync.(*RWMutex).rUnlockSlow
sync.(*WaitGroup).Add
sync.(*WaitGroup).Done
sync.(*WaitGroup).Wait
sync.(*entry).load
sync.(*entry).tryExpungeLocked
sync.(*entry).tryLoadOrStore
sync.(*entry).unexpungeLocked
sync.(*poolChain).popHead
sync.(*poolChain).popTail
sync.(*poolChain).pushHead
sync.(*poolDequeue).pack
sync.(*poolDequeue).popHead
sync.(*poolDequeue).popTail
sync.(*poolDequeue).pushHead
sync.(*poolDequeue).unpack
sync.event
sync.fatal
sync.indexLocal
sync.init
sync.init.0
sync.init.1
sync.loadPoolChainElt
sync.newEntry
sync.poolCleanup
sync.runtime_Semacquire
sync.runtime_SemacquireMutex
sync.runtime_SemacquireRWMutexR
sync.runtime_Semrelease
sync.runtime_canSpin
sync.runtime_doSpin
sync.runtime_nanotime
sync.runtime_notifyListCheck
sync.runtime_procPin
sync.runtime_procUnpin
sync.runtime_registerPoolCleanup
sync.storePoolChainElt
sync.throw
sync/atomic.(*Int32).Add
sync/atomic.(*Pointer[go.shape.interface {}]).CompareAndSwap
sync/atomic.(*Pointer[go.shape.interface {}]).Load
sync/atomic.(*Pointer[go.shape.interface {}]).Store
sync/atomic.(*Pointer[go.shape.string]).Load
sync/atomic.(*Pointer[go.shape.string]).Store
sync/atomic.(*Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]).Load
sync/atomic.(*Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]).Store
sync/atomic.(*Uint64).Add
sync/atomic.(*Uint64).CompareAndSwap
sync/atomic.(*Uint64).Load
sync/atomic.(*Uint64).Store
sync/atomic.(*Value).Load
sync/atomic.(*Value).Store
sync/atomic.CompareAndSwapPointer
sync/atomic.CompareAndSwapUintptr
sync/atomic.StorePointer
sync/atomic.StoreUint32
sync/atomic.StoreUintptr
sync/atomic.runtime_procPin
sync/atomic.runtime_procUnpin
syscall.(*Errno).Error
syscall.(*Signal).String
syscall.BytePtrFromString
syscall.ByteSliceFromString
syscall.Close
syscall.Errno.Error
syscall.Exit
syscall.Getenv
syscall.Getenv.func1
syscall.Getrlimit
syscall.Open
syscall.RawSyscall
syscall.RawSyscall6
syscall.Read
syscall.Seek
syscall.SetNonblock
syscall.Setrlimit
syscall.Signal.String
syscall.Syscall
syscall.Syscall6
syscall.Write
syscall.copyenv
syscall.errnoErr
syscall.fcntl
syscall.init
syscall.mmap
syscall.munmap
syscall.openat
syscall.read
syscall.runtime_envs
syscall.write
time.(*Location).String
time.(*Location).firstZoneUsed
time.(*Location).get
time.(*Location).lookup
time.(*Location).lookupFirstZone
time.(*Time).GoString
time.(*Time).String
time.(*Time).nsec
time.(*Time).sec
time.(*Time).unixSec
time.(*dataIO).big4
time.(*dataIO).big8
time.(*dataIO).byte
time.(*dataIO).read
time.(*dataIO).rest
time.(*fileSizeError).Error
time.LoadLocationFromTZData
time.Month.String
time.Sleep
time.Time.AppendFormat
time.Time.Format
time.Time.GoString
time.Time.Location
time.Time.Nanosecond
time.Time.String
time.Time.abs
time.Time.appendFormat
time.Time.appendFormatRFC3339
time.Time.locabs
time.Weekday.String
time.absClock
time.absDate
time.absWeekday
time.appendInt
time.appendInt.func1
time.appendNano
time.byteString
time.closefd
time.daysIn
time.daysSinceEpoch
time.digitsLen
time.fileSizeError.Error
time.findZone
time.fmtInt
time.get2
time.get4
time.gorootZoneSource
time.init
time.initLocal
time.isDigit[go.shape.string]
time.isLeap
time.loadLocation
time.loadTzinfo
time.loadTzinfoFromDirOrZip
time.loadTzinfoFromZip
time.loadTzinfoFromZip.func1
time.nextStdChunk
time.now
time.open
time.preadn
time.quote
time.read
time.readFile
time.readFile.func1
time.resetTimer
time.separator
time.startsWithLowerCase
time.stdFracSecond
time.stopTimer
time.tzruleTime
time.tzset
time.tzsetName
time.tzsetNum
time.tzsetOffset
time.tzsetRule
type:.eq.[2]runtime.Frame
type:.eq.[6]internal/cpu.option
type:.eq.context.valueCtx
type:.eq.fmt.fmt
type:.eq.internal/abi.RegArgs
type:.eq.internal/cpu.option
type:.eq.internal/godebug.Setting
type:.eq.internal/poll.FD
type:.eq.internal/reflectlite.uncommonType
type:.eq.io/fs.PathError
type:.eq.math/rand.Rand
type:.eq.os.file
type:.eq.reflect.MapIter
type:.eq.reflect.Method
type:.eq.reflect.ValueError
type:.eq.reflect.hiter
type:.eq.reflect.makeFuncCtxt
type:.eq.reflect.methodValue
type:.eq.reflect.uncommonType
type:.eq.runtime.Frame
type:.eq.runtime.TypeAssertionError
type:.eq.runtime._func
type:.eq.runtime._panic
type:.eq.runtime.bitvector
type:.eq.runtime.boundsError
type:.eq.runtime.errorAddressString
type:.eq.runtime.gcBits
type:.eq.runtime.gcWork
type:.eq.runtime.hchan
type:.eq.runtime.itab
type:.eq.runtime.limiterEvent
type:.eq.runtime.mOS
type:.eq.runtime.mSpanList
type:.eq.runtime.mcache
type:.eq.runtime.modulehash
type:.eq.runtime.mspan
type:.eq.runtime.notInHeap
type:.eq.runtime.piController
type:.eq.runtime.spanSetBlock
type:.eq.runtime.special
type:.eq.runtime.sudog
type:.eq.runtime.sysmontick
type:.eq.runtime.workbuf
type:.eq.runtime/internal/atomic.Int64
type:.eq.runtime/internal/atomic.Uint64
type:.eq.runtime/internal/sys.NotInHeap
type:.eq.struct { runtime.gList; runtime.n int32 }
type:.eq.sync.WaitGroup
type:.eq.sync.entry
type:.eq.sync.poolLocal
type:.eq.sync.poolLocalInternal
type:.eq.sync/atomic.Pointer[interface {}]
type:.eq.sync/atomic.Pointer[string]
type:.eq.sync/atomic.Pointer[sync.readOnly]
type:.eq.sync/atomic.Uint64
type:.eq.time.zone
type:.eq.time.zoneTrans
unicode.init
unicode/utf8.AppendRune
unicode/utf8.DecodeRune
unicode/utf8.DecodeRuneInString
unicode/utf8.EncodeRune
unicode/utf8.RuneCount
unicode/utf8.RuneCountInString
unicode/utf8.RuneLen
unicode/utf8.ValidRune
unicode/utf8.appendRuneNonASCII
(dlv) funcs main.*
main.consumeValues
main.consumeValues.func1
main.main
main.main.func1
main.main.func2
main.main.func3
main.main.func4
main.produceValues
main.produceValues.func1
runtime.main
runtime.main.func1
runtime.main.func2
(dlv) funcs ^main.*
main.consumeValues
main.consumeValues.func1
main.main
main.main.func1
main.main.func2
main.main.func3
main.main.func4
main.produceValues
main.produceValues.func1
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) libraries
(dlv) list
> runtime.gopark() /home/deparker/Code/goroot/src/runtime/proc.go:382 (PC: 0x43c31d)
Warning: debugging optimized function
   377:		mp.waittraceev = traceEv
   378:		mp.waittraceskip = traceskip
   379:		releasem(mp)
   380:		// can't do anything that might move the G between Ms here.
   381:		mcall(park_m)
=> 382:	}
   383:	
   384:	// Puts the current goroutine into a waiting state and unlocks the lock.
   385:	// The goroutine can be made runnable again by calling goready(gp).
   386:	func goparkunlock(lock *mutex, reason waitReason, traceEv byte, traceskip int) {
   387:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceEv, traceskip)
(dlv) sources
/home/deparker/Code/goroot/src/bytes/buffer.go
/home/deparker/Code/goroot/src/bytes/bytes.go
/home/deparker/Code/goroot/src/bytes/reader.go
/home/deparker/Code/goroot/src/context/context.go
/home/deparker/Code/goroot/src/encoding/binary/binary.go
/home/deparker/Code/goroot/src/encoding/binary/varint.go
/home/deparker/Code/goroot/src/errors/errors.go
/home/deparker/Code/goroot/src/errors/join.go
/home/deparker/Code/goroot/src/errors/wrap.go
/home/deparker/Code/goroot/src/fmt/errors.go
/home/deparker/Code/goroot/src/fmt/format.go
/home/deparker/Code/goroot/src/fmt/print.go
/home/deparker/Code/goroot/src/fmt/scan.go
/home/deparker/Code/goroot/src/internal/abi/abi.go
/home/deparker/Code/goroot/src/internal/abi/abi_amd64.go
/home/deparker/Code/goroot/src/internal/bytealg/bytealg.go
/home/deparker/Code/goroot/src/internal/bytealg/compare_amd64.s
/home/deparker/Code/goroot/src/internal/bytealg/compare_native.go
/home/deparker/Code/goroot/src/internal/bytealg/count_native.go
/home/deparker/Code/goroot/src/internal/bytealg/equal_amd64.s
/home/deparker/Code/goroot/src/internal/bytealg/equal_generic.go
/home/deparker/Code/goroot/src/internal/bytealg/equal_native.go
/home/deparker/Code/goroot/src/internal/bytealg/index_amd64.go
/home/deparker/Code/goroot/src/internal/bytealg/index_amd64.s
/home/deparker/Code/goroot/src/internal/bytealg/index_native.go
/home/deparker/Code/goroot/src/internal/bytealg/indexbyte_amd64.s
/home/deparker/Code/goroot/src/internal/bytealg/indexbyte_native.go
/home/deparker/Code/goroot/src/internal/coverage/rtcov/rtcov.go
/home/deparker/Code/goroot/src/internal/cpu/cpu.go
/home/deparker/Code/goroot/src/internal/cpu/cpu_x86.go
/home/deparker/Code/goroot/src/internal/cpu/cpu_x86.s
/home/deparker/Code/goroot/src/internal/fmtsort/sort.go
/home/deparker/Code/goroot/src/internal/goarch/goarch.go
/home/deparker/Code/goroot/src/internal/godebug/godebug.go
/home/deparker/Code/goroot/src/internal/itoa/itoa.go
/home/deparker/Code/goroot/src/internal/oserror/errors.go
/home/deparker/Code/goroot/src/internal/poll/copy_file_range_linux.go
/home/deparker/Code/goroot/src/internal/poll/errno_unix.go
/home/deparker/Code/goroot/src/internal/poll/fcntl_syscall.go
/home/deparker/Code/goroot/src/internal/poll/fd.go
/home/deparker/Code/goroot/src/internal/poll/fd_fsync_posix.go
/home/deparker/Code/goroot/src/internal/poll/fd_mutex.go
/home/deparker/Code/goroot/src/internal/poll/fd_poll_runtime.go
/home/deparker/Code/goroot/src/internal/poll/fd_posix.go
/home/deparker/Code/goroot/src/internal/poll/fd_unix.go
/home/deparker/Code/goroot/src/internal/poll/fd_writev_unix.go
/home/deparker/Code/goroot/src/internal/poll/hook_cloexec.go
/home/deparker/Code/goroot/src/internal/poll/hook_unix.go
/home/deparker/Code/goroot/src/internal/poll/iovec_unix.go
/home/deparker/Code/goroot/src/internal/poll/sendfile_linux.go
/home/deparker/Code/goroot/src/internal/poll/sock_cloexec.go
/home/deparker/Code/goroot/src/internal/poll/sockopt.go
/home/deparker/Code/goroot/src/internal/poll/sockopt_linux.go
/home/deparker/Code/goroot/src/internal/poll/sockopt_unix.go
/home/deparker/Code/goroot/src/internal/poll/sockoptip.go
/home/deparker/Code/goroot/src/internal/poll/splice_linux.go
/home/deparker/Code/goroot/src/internal/poll/writev.go
/home/deparker/Code/goroot/src/internal/race/norace.go
/home/deparker/Code/goroot/src/internal/reflectlite/swapper.go
/home/deparker/Code/goroot/src/internal/reflectlite/type.go
/home/deparker/Code/goroot/src/internal/reflectlite/value.go
/home/deparker/Code/goroot/src/internal/safefilepath/path.go
/home/deparker/Code/goroot/src/internal/safefilepath/path_other.go
/home/deparker/Code/goroot/src/internal/syscall/execenv/execenv_default.go
/home/deparker/Code/goroot/src/internal/syscall/unix/at.go
/home/deparker/Code/goroot/src/internal/syscall/unix/at_fstatat.go
/home/deparker/Code/goroot/src/internal/syscall/unix/at_sysnum_linux.go
/home/deparker/Code/goroot/src/internal/syscall/unix/at_sysnum_newfstatat_linux.go
/home/deparker/Code/goroot/src/internal/syscall/unix/constants.go
/home/deparker/Code/goroot/src/internal/syscall/unix/copy_file_range_linux.go
/home/deparker/Code/goroot/src/internal/syscall/unix/eaccess_linux.go
/home/deparker/Code/goroot/src/internal/syscall/unix/getrandom.go
/home/deparker/Code/goroot/src/internal/syscall/unix/getrandom_linux.go
/home/deparker/Code/goroot/src/internal/syscall/unix/kernel_version_linux.go
/home/deparker/Code/goroot/src/internal/syscall/unix/net.go
/home/deparker/Code/goroot/src/internal/syscall/unix/nonblocking.go
/home/deparker/Code/goroot/src/internal/syscall/unix/sysnum_linux_amd64.go
/home/deparker/Code/goroot/src/internal/testlog/exit.go
/home/deparker/Code/goroot/src/internal/testlog/log.go
/home/deparker/Code/goroot/src/internal/unsafeheader/unsafeheader.go
/home/deparker/Code/goroot/src/io/fs/fs.go
/home/deparker/Code/goroot/src/io/fs/glob.go
/home/deparker/Code/goroot/src/io/fs/readdir.go
/home/deparker/Code/goroot/src/io/fs/readfile.go
/home/deparker/Code/goroot/src/io/fs/stat.go
/home/deparker/Code/goroot/src/io/fs/sub.go
/home/deparker/Code/goroot/src/io/fs/walk.go
/home/deparker/Code/goroot/src/io/io.go
/home/deparker/Code/goroot/src/io/ioutil/ioutil.go
/home/deparker/Code/goroot/src/io/ioutil/tempfile.go
/home/deparker/Code/goroot/src/io/multi.go
/home/deparker/Code/goroot/src/io/pipe.go
/home/deparker/Code/goroot/src/math/abs.go
/home/deparker/Code/goroot/src/math/acosh.go
/home/deparker/Code/goroot/src/math/asin.go
/home/deparker/Code/goroot/src/math/asinh.go
/home/deparker/Code/goroot/src/math/atan.go
/home/deparker/Code/goroot/src/math/atan2.go
/home/deparker/Code/goroot/src/math/atanh.go
/home/deparker/Code/goroot/src/math/bits.go
/home/deparker/Code/goroot/src/math/bits/bits.go
/home/deparker/Code/goroot/src/math/bits/bits_errors.go
/home/deparker/Code/goroot/src/math/bits/bits_tables.go
/home/deparker/Code/goroot/src/math/cbrt.go
/home/deparker/Code/goroot/src/math/const.go
/home/deparker/Code/goroot/src/math/copysign.go
/home/deparker/Code/goroot/src/math/dim.go
/home/deparker/Code/goroot/src/math/dim_asm.go
/home/deparker/Code/goroot/src/math/erf.go
/home/deparker/Code/goroot/src/math/erfinv.go
/home/deparker/Code/goroot/src/math/exp.go
/home/deparker/Code/goroot/src/math/exp2_noasm.go
/home/deparker/Code/goroot/src/math/exp_amd64.go
/home/deparker/Code/goroot/src/math/exp_asm.go
/home/deparker/Code/goroot/src/math/expm1.go
/home/deparker/Code/goroot/src/math/floor.go
/home/deparker/Code/goroot/src/math/floor_asm.go
/home/deparker/Code/goroot/src/math/fma.go
/home/deparker/Code/goroot/src/math/frexp.go
/home/deparker/Code/goroot/src/math/gamma.go
/home/deparker/Code/goroot/src/math/hypot.go
/home/deparker/Code/goroot/src/math/hypot_asm.go
/home/deparker/Code/goroot/src/math/j0.go
/home/deparker/Code/goroot/src/math/j1.go
/home/deparker/Code/goroot/src/math/jn.go
/home/deparker/Code/goroot/src/math/ldexp.go
/home/deparker/Code/goroot/src/math/lgamma.go
/home/deparker/Code/goroot/src/math/log.go
/home/deparker/Code/goroot/src/math/log10.go
/home/deparker/Code/goroot/src/math/log1p.go
/home/deparker/Code/goroot/src/math/log_asm.go
/home/deparker/Code/goroot/src/math/logb.go
/home/deparker/Code/goroot/src/math/mod.go
/home/deparker/Code/goroot/src/math/modf.go
/home/deparker/Code/goroot/src/math/modf_noasm.go
/home/deparker/Code/goroot/src/math/nextafter.go
/home/deparker/Code/goroot/src/math/pow.go
/home/deparker/Code/goroot/src/math/pow10.go
/home/deparker/Code/goroot/src/math/rand/exp.go
/home/deparker/Code/goroot/src/math/rand/normal.go
/home/deparker/Code/goroot/src/math/rand/rand.go
/home/deparker/Code/goroot/src/math/rand/rng.go
/home/deparker/Code/goroot/src/math/rand/zipf.go
/home/deparker/Code/goroot/src/math/remainder.go
/home/deparker/Code/goroot/src/math/signbit.go
/home/deparker/Code/goroot/src/math/sin.go
/home/deparker/Code/goroot/src/math/sincos.go
/home/deparker/Code/goroot/src/math/sinh.go
/home/deparker/Code/goroot/src/math/sqrt.go
/home/deparker/Code/goroot/src/math/stubs.go
/home/deparker/Code/goroot/src/math/tan.go
/home/deparker/Code/goroot/src/math/tanh.go
/home/deparker/Code/goroot/src/math/trig_reduce.go
/home/deparker/Code/goroot/src/math/unsafe.go
/home/deparker/Code/goroot/src/os/dir.go
/home/deparker/Code/goroot/src/os/dir_unix.go
/home/deparker/Code/goroot/src/os/dirent_linux.go
/home/deparker/Code/goroot/src/os/endian_little.go
/home/deparker/Code/goroot/src/os/env.go
/home/deparker/Code/goroot/src/os/error.go
/home/deparker/Code/goroot/src/os/error_errno.go
/home/deparker/Code/goroot/src/os/error_posix.go
/home/deparker/Code/goroot/src/os/exec.go
/home/deparker/Code/goroot/src/os/exec_posix.go
/home/deparker/Code/goroot/src/os/exec_unix.go
/home/deparker/Code/goroot/src/os/executable.go
/home/deparker/Code/goroot/src/os/executable_procfs.go
/home/deparker/Code/goroot/src/os/file.go
/home/deparker/Code/goroot/src/os/file_posix.go
/home/deparker/Code/goroot/src/os/file_unix.go
/home/deparker/Code/goroot/src/os/getwd.go
/home/deparker/Code/goroot/src/os/path.go
/home/deparker/Code/goroot/src/os/path_unix.go
/home/deparker/Code/goroot/src/os/pipe2_unix.go
/home/deparker/Code/goroot/src/os/proc.go
/home/deparker/Code/goroot/src/os/rawconn.go
/home/deparker/Code/goroot/src/os/readfrom_linux.go
/home/deparker/Code/goroot/src/os/removeall_at.go
/home/deparker/Code/goroot/src/os/rlimit.go
/home/deparker/Code/goroot/src/os/rlimit_stub.go
/home/deparker/Code/goroot/src/os/signal/signal.go
/home/deparker/Code/goroot/src/os/signal/signal_unix.go
/home/deparker/Code/goroot/src/os/stat.go
/home/deparker/Code/goroot/src/os/stat_linux.go
/home/deparker/Code/goroot/src/os/stat_unix.go
/home/deparker/Code/goroot/src/os/sticky_notbsd.go
/home/deparker/Code/goroot/src/os/str.go
/home/deparker/Code/goroot/src/os/sys.go
/home/deparker/Code/goroot/src/os/sys_linux.go
/home/deparker/Code/goroot/src/os/sys_unix.go
/home/deparker/Code/goroot/src/os/tempfile.go
/home/deparker/Code/goroot/src/os/types.go
/home/deparker/Code/goroot/src/os/types_unix.go
/home/deparker/Code/goroot/src/os/wait_waitid.go
/home/deparker/Code/goroot/src/path/match.go
/home/deparker/Code/goroot/src/path/path.go
/home/deparker/Code/goroot/src/reflect/abi.go
/home/deparker/Code/goroot/src/reflect/asm_amd64.s
/home/deparker/Code/goroot/src/reflect/deepequal.go
/home/deparker/Code/goroot/src/reflect/float32reg_generic.go
/home/deparker/Code/goroot/src/reflect/makefunc.go
/home/deparker/Code/goroot/src/reflect/swapper.go
/home/deparker/Code/goroot/src/reflect/type.go
/home/deparker/Code/goroot/src/reflect/value.go
/home/deparker/Code/goroot/src/reflect/visiblefields.go
/home/deparker/Code/goroot/src/runtime/alg.go
/home/deparker/Code/goroot/src/runtime/arena.go
/home/deparker/Code/goroot/src/runtime/asan0.go
/home/deparker/Code/goroot/src/runtime/asm_amd64.s
/home/deparker/Code/goroot/src/runtime/atomic_pointer.go
/home/deparker/Code/goroot/src/runtime/cgo.go
/home/deparker/Code/goroot/src/runtime/cgo_mmap.go
/home/deparker/Code/goroot/src/runtime/cgo_sigaction.go
/home/deparker/Code/goroot/src/runtime/cgocall.go
/home/deparker/Code/goroot/src/runtime/cgocallback.go
/home/deparker/Code/goroot/src/runtime/cgocheck.go
/home/deparker/Code/goroot/src/runtime/chan.go
/home/deparker/Code/goroot/src/runtime/checkptr.go
/home/deparker/Code/goroot/src/runtime/compiler.go
/home/deparker/Code/goroot/src/runtime/complex.go
/home/deparker/Code/goroot/src/runtime/covercounter.go
/home/deparker/Code/goroot/src/runtime/covermeta.go
/home/deparker/Code/goroot/src/runtime/cpuflags.go
/home/deparker/Code/goroot/src/runtime/cpuflags_amd64.go
/home/deparker/Code/goroot/src/runtime/cpuprof.go
/home/deparker/Code/goroot/src/runtime/cputicks.go
/home/deparker/Code/goroot/src/runtime/create_file_unix.go
/home/deparker/Code/goroot/src/runtime/debug.go
/home/deparker/Code/goroot/src/runtime/debugcall.go
/home/deparker/Code/goroot/src/runtime/debuglog.go
/home/deparker/Code/goroot/src/runtime/debuglog_off.go
/home/deparker/Code/goroot/src/runtime/defs_linux_amd64.go
/home/deparker/Code/goroot/src/runtime/duff_amd64.s
/home/deparker/Code/goroot/src/runtime/env_posix.go
/home/deparker/Code/goroot/src/runtime/error.go
/home/deparker/Code/goroot/src/runtime/exithook.go
/home/deparker/Code/goroot/src/runtime/extern.go
/home/deparker/Code/goroot/src/runtime/fastlog2.go
/home/deparker/Code/goroot/src/runtime/fastlog2table.go
/home/deparker/Code/goroot/src/runtime/float.go
/home/deparker/Code/goroot/src/runtime/hash64.go
/home/deparker/Code/goroot/src/runtime/heapdump.go
/home/deparker/Code/goroot/src/runtime/histogram.go
/home/deparker/Code/goroot/src/runtime/iface.go
/home/deparker/Code/goroot/src/runtime/internal/atomic/atomic_amd64.go
/home/deparker/Code/goroot/src/runtime/internal/atomic/stubs.go
/home/deparker/Code/goroot/src/runtime/internal/atomic/types.go
/home/deparker/Code/goroot/src/runtime/internal/atomic/types_64bit.go
/home/deparker/Code/goroot/src/runtime/internal/atomic/unaligned.go
/home/deparker/Code/goroot/src/runtime/internal/math/math.go
/home/deparker/Code/goroot/src/runtime/internal/sys/consts.go
/home/deparker/Code/goroot/src/runtime/internal/sys/consts_norace.go
/home/deparker/Code/goroot/src/runtime/internal/sys/intrinsics.go
/home/deparker/Code/goroot/src/runtime/internal/sys/intrinsics_common.go
/home/deparker/Code/goroot/src/runtime/internal/sys/nih.go
/home/deparker/Code/goroot/src/runtime/internal/syscall/asm_linux_amd64.s
/home/deparker/Code/goroot/src/runtime/internal/syscall/defs_linux.go
/home/deparker/Code/goroot/src/runtime/internal/syscall/defs_linux_amd64.go
/home/deparker/Code/goroot/src/runtime/internal/syscall/syscall_linux.go
/home/deparker/Code/goroot/src/runtime/lfstack.go
/home/deparker/Code/goroot/src/runtime/lfstack_64bit.go
/home/deparker/Code/goroot/src/runtime/lock_futex.go
/home/deparker/Code/goroot/src/runtime/lockrank.go
/home/deparker/Code/goroot/src/runtime/lockrank_off.go
/home/deparker/Code/goroot/src/runtime/malloc.go
/home/deparker/Code/goroot/src/runtime/map.go
/home/deparker/Code/goroot/src/runtime/map_fast32.go
/home/deparker/Code/goroot/src/runtime/map_fast64.go
/home/deparker/Code/goroot/src/runtime/map_faststr.go
/home/deparker/Code/goroot/src/runtime/mbarrier.go
/home/deparker/Code/goroot/src/runtime/mbitmap.go
/home/deparker/Code/goroot/src/runtime/mcache.go
/home/deparker/Code/goroot/src/runtime/mcentral.go
/home/deparker/Code/goroot/src/runtime/mcheckmark.go
/home/deparker/Code/goroot/src/runtime/mem.go
/home/deparker/Code/goroot/src/runtime/mem_linux.go
/home/deparker/Code/goroot/src/runtime/memclr_amd64.s
/home/deparker/Code/goroot/src/runtime/memmove_amd64.s
/home/deparker/Code/goroot/src/runtime/metrics.go
/home/deparker/Code/goroot/src/runtime/mfinal.go
/home/deparker/Code/goroot/src/runtime/mfixalloc.go
/home/deparker/Code/goroot/src/runtime/mgc.go
/home/deparker/Code/goroot/src/runtime/mgclimit.go
/home/deparker/Code/goroot/src/runtime/mgcmark.go
/home/deparker/Code/goroot/src/runtime/mgcpacer.go
/home/deparker/Code/goroot/src/runtime/mgcscavenge.go
/home/deparker/Code/goroot/src/runtime/mgcstack.go
/home/deparker/Code/goroot/src/runtime/mgcsweep.go
/home/deparker/Code/goroot/src/runtime/mgcwork.go
/home/deparker/Code/goroot/src/runtime/mheap.go
/home/deparker/Code/goroot/src/runtime/mpagealloc.go
/home/deparker/Code/goroot/src/runtime/mpagealloc_64bit.go
/home/deparker/Code/goroot/src/runtime/mpagecache.go
/home/deparker/Code/goroot/src/runtime/mpallocbits.go
/home/deparker/Code/goroot/src/runtime/mprof.go
/home/deparker/Code/goroot/src/runtime/mranges.go
/home/deparker/Code/goroot/src/runtime/msan0.go
/home/deparker/Code/goroot/src/runtime/msize.go
/home/deparker/Code/goroot/src/runtime/mspanset.go
/home/deparker/Code/goroot/src/runtime/mstats.go
/home/deparker/Code/goroot/src/runtime/mwbbuf.go
/home/deparker/Code/goroot/src/runtime/nbpipe_pipe2.go
/home/deparker/Code/goroot/src/runtime/netpoll.go
/home/deparker/Code/goroot/src/runtime/netpoll_epoll.go
/home/deparker/Code/goroot/src/runtime/os_linux.go
/home/deparker/Code/goroot/src/runtime/os_linux_generic.go
/home/deparker/Code/goroot/src/runtime/os_linux_noauxv.go
/home/deparker/Code/goroot/src/runtime/os_linux_x86.go
/home/deparker/Code/goroot/src/runtime/os_nonopenbsd.go
/home/deparker/Code/goroot/src/runtime/pagetrace_off.go
/home/deparker/Code/goroot/src/runtime/panic.go
/home/deparker/Code/goroot/src/runtime/plugin.go
/home/deparker/Code/goroot/src/runtime/preempt.go
/home/deparker/Code/goroot/src/runtime/preempt_amd64.s
/home/deparker/Code/goroot/src/runtime/preempt_nonwindows.go
/home/deparker/Code/goroot/src/runtime/print.go
/home/deparker/Code/goroot/src/runtime/proc.go
/home/deparker/Code/goroot/src/runtime/profbuf.go
/home/deparker/Code/goroot/src/runtime/proflabel.go
/home/deparker/Code/goroot/src/runtime/race0.go
/home/deparker/Code/goroot/src/runtime/rdebug.go
/home/deparker/Code/goroot/src/runtime/relax_stub.go
/home/deparker/Code/goroot/src/runtime/retry.go
/home/deparker/Code/goroot/src/runtime/rt0_linux_amd64.s
/home/deparker/Code/goroot/src/runtime/runtime.go
/home/deparker/Code/goroot/src/runtime/runtime1.go
/home/deparker/Code/goroot/src/runtime/runtime2.go
/home/deparker/Code/goroot/src/runtime/runtime_boring.go
/home/deparker/Code/goroot/src/runtime/rwmutex.go
/home/deparker/Code/goroot/src/runtime/select.go
/home/deparker/Code/goroot/src/runtime/sema.go
/home/deparker/Code/goroot/src/runtime/signal_amd64.go
/home/deparker/Code/goroot/src/runtime/signal_linux_amd64.go
/home/deparker/Code/goroot/src/runtime/signal_unix.go
/home/deparker/Code/goroot/src/runtime/sigqueue.go
/home/deparker/Code/goroot/src/runtime/sigqueue_note.go
/home/deparker/Code/goroot/src/runtime/sigtab_linux_generic.go
/home/deparker/Code/goroot/src/runtime/sizeclasses.go
/home/deparker/Code/goroot/src/runtime/slice.go
/home/deparker/Code/goroot/src/runtime/softfloat64.go
/home/deparker/Code/goroot/src/runtime/stack.go
/home/deparker/Code/goroot/src/runtime/stkframe.go
/home/deparker/Code/goroot/src/runtime/string.go
/home/deparker/Code/goroot/src/runtime/stubs.go
/home/deparker/Code/goroot/src/runtime/stubs2.go
/home/deparker/Code/goroot/src/runtime/stubs3.go
/home/deparker/Code/goroot/src/runtime/stubs_amd64.go
/home/deparker/Code/goroot/src/runtime/stubs_linux.go
/home/deparker/Code/goroot/src/runtime/symtab.go
/home/deparker/Code/goroot/src/runtime/sys_linux_amd64.s
/home/deparker/Code/goroot/src/runtime/sys_nonppc64x.go
/home/deparker/Code/goroot/src/runtime/sys_x86.go
/home/deparker/Code/goroot/src/runtime/time.go
/home/deparker/Code/goroot/src/runtime/time_linux_amd64.s
/home/deparker/Code/goroot/src/runtime/time_nofake.go
/home/deparker/Code/goroot/src/runtime/timeasm.go
/home/deparker/Code/goroot/src/runtime/tls_stub.go
/home/deparker/Code/goroot/src/runtime/trace.go
/home/deparker/Code/goroot/src/runtime/traceback.go
/home/deparker/Code/goroot/src/runtime/type.go
/home/deparker/Code/goroot/src/runtime/typekind.go
/home/deparker/Code/goroot/src/runtime/unsafe.go
/home/deparker/Code/goroot/src/runtime/utf8.go
/home/deparker/Code/goroot/src/runtime/vdso_elf64.go
/home/deparker/Code/goroot/src/runtime/vdso_linux.go
/home/deparker/Code/goroot/src/runtime/vdso_linux_amd64.go
/home/deparker/Code/goroot/src/runtime/write_err.go
/home/deparker/Code/goroot/src/sort/search.go
/home/deparker/Code/goroot/src/sort/slice.go
/home/deparker/Code/goroot/src/sort/sort.go
/home/deparker/Code/goroot/src/sort/zsortfunc.go
/home/deparker/Code/goroot/src/sort/zsortinterface.go
/home/deparker/Code/goroot/src/strconv/atob.go
/home/deparker/Code/goroot/src/strconv/atoc.go
/home/deparker/Code/goroot/src/strconv/atof.go
/home/deparker/Code/goroot/src/strconv/atoi.go
/home/deparker/Code/goroot/src/strconv/bytealg.go
/home/deparker/Code/goroot/src/strconv/ctoa.go
/home/deparker/Code/goroot/src/strconv/decimal.go
/home/deparker/Code/goroot/src/strconv/eisel_lemire.go
/home/deparker/Code/goroot/src/strconv/ftoa.go
/home/deparker/Code/goroot/src/strconv/ftoaryu.go
/home/deparker/Code/goroot/src/strconv/isprint.go
/home/deparker/Code/goroot/src/strconv/itoa.go
/home/deparker/Code/goroot/src/strconv/quote.go
/home/deparker/Code/goroot/src/sync/atomic/doc.go
/home/deparker/Code/goroot/src/sync/atomic/type.go
/home/deparker/Code/goroot/src/sync/atomic/value.go
/home/deparker/Code/goroot/src/sync/cond.go
/home/deparker/Code/goroot/src/sync/map.go
/home/deparker/Code/goroot/src/sync/mutex.go
/home/deparker/Code/goroot/src/sync/once.go
/home/deparker/Code/goroot/src/sync/pool.go
/home/deparker/Code/goroot/src/sync/poolqueue.go
/home/deparker/Code/goroot/src/sync/runtime.go
/home/deparker/Code/goroot/src/sync/runtime2.go
/home/deparker/Code/goroot/src/sync/rwmutex.go
/home/deparker/Code/goroot/src/sync/waitgroup.go
/home/deparker/Code/goroot/src/syscall/asan0.go
/home/deparker/Code/goroot/src/syscall/dirent.go
/home/deparker/Code/goroot/src/syscall/endian_little.go
/home/deparker/Code/goroot/src/syscall/env_unix.go
/home/deparker/Code/goroot/src/syscall/exec_linux.go
/home/deparker/Code/goroot/src/syscall/exec_unix.go
/home/deparker/Code/goroot/src/syscall/flock.go
/home/deparker/Code/goroot/src/syscall/lsf_linux.go
/home/deparker/Code/goroot/src/syscall/msan0.go
/home/deparker/Code/goroot/src/syscall/net.go
/home/deparker/Code/goroot/src/syscall/netlink_linux.go
/home/deparker/Code/goroot/src/syscall/setuidgid_linux.go
/home/deparker/Code/goroot/src/syscall/sockcmsg_linux.go
/home/deparker/Code/goroot/src/syscall/sockcmsg_unix.go
/home/deparker/Code/goroot/src/syscall/sockcmsg_unix_other.go
/home/deparker/Code/goroot/src/syscall/syscall.go
/home/deparker/Code/goroot/src/syscall/syscall_linux.go
/home/deparker/Code/goroot/src/syscall/syscall_linux_accept4.go
/home/deparker/Code/goroot/src/syscall/syscall_linux_amd64.go
/home/deparker/Code/goroot/src/syscall/syscall_unix.go
/home/deparker/Code/goroot/src/syscall/time_nofake.go
/home/deparker/Code/goroot/src/syscall/timestruct.go
/home/deparker/Code/goroot/src/syscall/zerrors_linux_amd64.go
/home/deparker/Code/goroot/src/syscall/zsyscall_linux_amd64.go
/home/deparker/Code/goroot/src/syscall/zsysnum_linux_amd64.go
/home/deparker/Code/goroot/src/syscall/ztypes_linux_amd64.go
/home/deparker/Code/goroot/src/time/format.go
/home/deparker/Code/goroot/src/time/format_rfc3339.go
/home/deparker/Code/goroot/src/time/sleep.go
/home/deparker/Code/goroot/src/time/sys_unix.go
/home/deparker/Code/goroot/src/time/tick.go
/home/deparker/Code/goroot/src/time/time.go
/home/deparker/Code/goroot/src/time/zoneinfo.go
/home/deparker/Code/goroot/src/time/zoneinfo_goroot.go
/home/deparker/Code/goroot/src/time/zoneinfo_read.go
/home/deparker/Code/goroot/src/time/zoneinfo_unix.go
/home/deparker/Code/goroot/src/unicode/casetables.go
/home/deparker/Code/goroot/src/unicode/digit.go
/home/deparker/Code/goroot/src/unicode/graphic.go
/home/deparker/Code/goroot/src/unicode/letter.go
/home/deparker/Code/goroot/src/unicode/tables.go
/home/deparker/Code/goroot/src/unicode/utf8/utf8.go
/home/deparker/Code/workshops/march-monthly-2023/ultimate-go-debugging/day-2/session/main.go
<autogenerated>
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) types
**os/signal.handler
**reflect.rtype
**runtime._defer
**runtime._panic
**runtime._type
**runtime.arenaHint
**runtime.bmap
**runtime.funcval
**runtime.g
**runtime.hchan
**runtime.itab
**runtime.m
**runtime.mcache
**runtime.moduledata
**runtime.mspan
**runtime.notInHeap
**runtime.p
**runtime.special
**runtime.stackWorkBuf
**runtime.sudog
**runtime.timer
**runtime.traceBuf
**sync.Pool
**sync.entry
**sync.poolChainElt
**uint8
**unicode.RangeTable
*[1048576]runtime.inlinedCall
*[1125899906842623]uint8
*[131072]uint16
*[16]uint8
*[16]uintptr
*[171]uint8
*[1]int
*[1]interface {}
*[1]os.Signal
*[1]string
*[1]uintptr
*[256]runtime.guintptr
*[268435456]uintptr
*[281474976710655]uint32
*[2]float32
*[2]float64
*[2]interface {}
*[2]runtime.Frame
*[2]uint8
*[2]uintptr
*[32]uintptr
*[4194304]*runtime.heapArena
*[46912496118442]runtime.elfSym
*[4]uint8
*[562949953421311]uint16
*[5]uintptr
*[65536]runtime.scase
*[6]internal/cpu.option
*[70368744177663]runtime.elfDyn
*[8192]runtime.pallocData
*[8]runtime.pcvalueCacheEnt
*[8]uint8
*[96]uint8
*[]*runtime._defer
*[]*runtime.bmap
*[]*runtime.moduledata
*[]*runtime.sudog
*[]runtime.Frame
*[]runtime.ancestorInfo
*[]syscall.Iovec
*[]uint8
*[]unsafe.Pointer
*bool
*bucket<*uint8,[]uint8>
*bucket<chan<- os.Signal,*os/signal.handler>
*bucket<context.canceler,struct {}>
*bucket<int32,unsafe.Pointer>
*bucket<interface {},*sync.entry>
*bucket<runtime._typePair,struct {}>
*bucket<runtime.typeOff,*runtime._type>
*bucket<string,*unicode.RangeTable>
*bucket<string,bool>
*bucket<string,int>
*bucket<string,uint64>
*bucket<uint32,[]*runtime._type>
*bucket<unsafe.Pointer,int32>
*chan<- os.Signal
*context.cancelCtx
*context.canceler
*context.emptyCtx
*context.timerCtx
*context.valueCtx
*error
*errors.errorString
*float32
*float64
*fmt.buffer
*fmt.fmt
*fmt.pp
*func()
*func(string, string)
*go.shape.func(string, string)
*go.shape.interface {}
*go.shape.string
*go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }
*go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.stackguard1 uintptr; runtime._panic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.sched runtime.gobuf; runtime.syscallsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param unsafe.Pointer; runtime.atomicstatus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; runtime.schedlink runtime.guintptr; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bool; runtime.preemptStop bool; runtime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; runtime.gcscandone bool; runtime.throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/internal/atomic.Bool; runtime.raceignore int8; runtime.sysblocktraced bool; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int64; runtime.runnableTime int64; runtime.sysexitticks int64; runtime.traceseq uint64; runtime.tracelastp runtime.puintptr; runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runtime.sigcode0 uintptr; runtime.sigcode1 uintptr; runtime.sigpc uintptr; runtime.gopc uintptr; runtime.ancestors *[]runtime.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *runtime.sudog; runtime.cgoCtxt []uintptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDone runtime/internal/atomic.Uint32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.gcAssistBytes int64 }
*go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
*hash<*uint8,[]uint8>
*hash<chan<- os.Signal,*os/signal.handler>
*hash<context.canceler,struct {}>
*hash<int32,unsafe.Pointer>
*hash<interface {},*sync.entry>
*hash<runtime._typePair,struct {}>
*hash<runtime.typeOff,*runtime._type>
*hash<string,*unicode.RangeTable>
*hash<string,bool>
*hash<string,int>
*hash<string,uint64>
*hash<uint32,[]*runtime._type>
*hash<unsafe.Pointer,int32>
*hchan<bool>
*hchan<int>
*hchan<main.packet>
*hchan<os.Signal>
*hchan<struct {}>
*hchan<time.Time>
*hchan<uint32>
*int
*int32
*int64
*int8
*interface {}
*internal/abi.IntArgRegBitmap
*internal/abi.RegArgs
*internal/cpu.option
*internal/fmtsort.SortedMap
*internal/godebug.Setting
*internal/poll.DeadlineExceededError
*internal/poll.FD
*internal/poll.errNetClosing
*internal/poll.fdMutex
*internal/poll.pollDesc
*internal/reflectlite.Kind
*internal/reflectlite.arrayType
*internal/reflectlite.chanType
*internal/reflectlite.mapType
*internal/reflectlite.ptrType
*internal/reflectlite.rtype
*internal/reflectlite.sliceType
*internal/reflectlite.uncommonType
*internal/unsafeheader.Slice
*internal/unsafeheader.String
*io.discard
*io/fs.PathError
*main.packet
*map.bucket[chan<- os.Signal]*os/signal.handler
*map.bucket[context.canceler]struct {}
*map.bucket[interface {}]*sync.entry
*map.bucket[runtime._typePair]struct {}
*map.bucket[string]bool
*map.bucket[uint32][]*runtime._type
*map.hdr[chan<- os.Signal]*os/signal.handler
*map.hdr[context.canceler]struct {}
*map.hdr[interface {}]*sync.entry
*map.hdr[string]bool
*map[runtime.typeOff]*runtime._type
*math/rand.Rand
*math/rand.lockedSource
*math/rand.rngSource
*os.File
*os.Signal
*os.dirInfo
*os.file
*os/signal.handler
*os/signal.stopping
*reflect.ChanDir
*reflect.Kind
*reflect.MapIter
*reflect.Method
*reflect.Value
*reflect.ValueError
*reflect.abiSeq
*reflect.abiStep
*reflect.arrayType
*reflect.bitVector
*reflect.chanType
*reflect.emptyInterface
*reflect.funcType
*reflect.hiter
*reflect.imethod
*reflect.interfaceType
*reflect.makeFuncCtxt
*reflect.mapType
*reflect.method
*reflect.methodValue
*reflect.nonEmptyInterface
*reflect.ptrType
*reflect.rtype
*reflect.sliceType
*reflect.structField
*reflect.structType
*reflect.uncommonType
*runtime.Frame
*runtime.Frames
*runtime.Func
*runtime.StackRecord
*runtime.TypeAssertionError
*runtime._defer
*runtime._func
*runtime._panic
*runtime._type
*runtime.activeSweep
*runtime.addrRange
*runtime.addrRanges
*runtime.adjustinfo
*runtime.ancestorInfo
*runtime.arenaHint
*runtime.arenaIdx
*runtime.arraytype
*runtime.atomicHeadTailIndex
*runtime.atomicMSpanPointer
*runtime.atomicOffAddr
*runtime.atomicSpanSetSpinePointer
*runtime.bitvector
*runtime.blockRecord
*runtime.bmap
*runtime.boundsError
*runtime.bucket
*runtime.buckhashArray
*runtime.cgoCallers
*runtime.cgoSymbolizerArg
*runtime.chantype
*runtime.checkmarksMap
*runtime.consistentHeapStats
*runtime.cpuProfile
*runtime.dbgVar
*runtime.debugCallWrapArgs
*runtime.eface
*runtime.elfEhdr
*runtime.elfPhdr
*runtime.elfVerdaux
*runtime.elfVerdef
*runtime.errorAddressString
*runtime.errorString
*runtime.exitHook
*runtime.finblock
*runtime.findfuncbucket
*runtime.fixalloc
*runtime.fpstate1
*runtime.funcinl
*runtime.functab
*runtime.functype
*runtime.funcval
*runtime.g
*runtime.gList
*runtime.gQueue
*runtime.gcBgMarkWorkerNode
*runtime.gcBits
*runtime.gcBitsArena
*runtime.gcCPULimiterState
*runtime.gcControllerState
*runtime.gcWork
*runtime.gclink
*runtime.gobuf
*runtime.goroutineProfileStateHolder
*runtime.gsignalStack
*runtime.guintptr
*runtime.hchan
*runtime.heapArena
*runtime.heapStatsDelta
*runtime.hiter
*runtime.hmap
*runtime.iface
*runtime.imethod
*runtime.initTask
*runtime.interfacetype
*runtime.itab
*runtime.itabTableType
*runtime.itimerspec
*runtime.lfnode
*runtime.lfstack
*runtime.limiterEvent
*runtime.linearAlloc
*runtime.liveUserArenaChunk
*runtime.lockRank
*runtime.m
*runtime.mOS
*runtime.mProfCycleHolder
*runtime.mSpanList
*runtime.mSpanStateBox
*runtime.mapextra
*runtime.maptype
*runtime.markBits
*runtime.mcache
*runtime.mcentral
*runtime.memRecord
*runtime.memRecordCycle
*runtime.method
*runtime.mheap
*runtime.mlink
*runtime.moduledata
*runtime.modulehash
*runtime.mspan
*runtime.muintptr
*runtime.mutex
*runtime.notInHeap
*runtime.note
*runtime.p
*runtime.pageAlloc
*runtime.pageBits
*runtime.pageCache
*runtime.pallocBits
*runtime.pallocData
*runtime.pallocSum
*runtime.pcHeader
*runtime.pcvalueCache
*runtime.persistentAlloc
*runtime.piController
*runtime.plainError
*runtime.pollCache
*runtime.pollDesc
*runtime.profAtomic
*runtime.profBuf
*runtime.ptabEntry
*runtime.ptrtype
*runtime.puintptr
*runtime.randomEnum
*runtime.randomOrder
*runtime.reflectMethodValue
*runtime.rwmutex
*runtime.scase
*runtime.scavengeIndex
*runtime.scavengerState
*runtime.semTable
*runtime.semaRoot
*runtime.sigactiont
*runtime.sigcontext
*runtime.sigctxt
*runtime.siginfo
*runtime.sigset
*runtime.slicetype
*runtime.spanSet
*runtime.spanSetBlock
*runtime.spanSetBlockAlloc
*runtime.special
*runtime.specialReachable
*runtime.specialfinalizer
*runtime.specialprofile
*runtime.specialsIter
*runtime.stack
*runtime.stackObject
*runtime.stackObjectBuf
*runtime.stackObjectRecord
*runtime.stackScanState
*runtime.stackWorkBuf
*runtime.stackfreelist
*runtime.stackmap
*runtime.stackt
*runtime.stkframe
*runtime.stringStruct
*runtime.structfield
*runtime.structtype
*runtime.sudog
*runtime.sweepClass
*runtime.sweepLocked
*runtime.sweepLocker
*runtime.sysMemStat
*runtime.sysmontick
*runtime.textsect
*runtime.timeHistogram
*runtime.timer
*runtime.timespec
*runtime.tmpBuf
*runtime.traceAlloc
*runtime.traceAllocBlock
*runtime.traceAllocBlockPtr
*runtime.traceBuf
*runtime.traceBufPtr
*runtime.traceStack
*runtime.traceStackTable
*runtime.uncommontype
*runtime.vdsoInfo
*runtime.vdsoSymbolKey
*runtime.vdsoVersionKey
*runtime.waitReason
*runtime.waitq
*runtime.wbBuf
*runtime.workbuf
*runtime/internal/atomic.Bool
*runtime/internal/atomic.Float64
*runtime/internal/atomic.Int32
*runtime/internal/atomic.Int64
*runtime/internal/atomic.Pointer[go.shape.func(string, string)]
*runtime/internal/atomic.Pointer[go.shape.string]
*runtime/internal/atomic.Pointer[go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]
*runtime/internal/atomic.Pointer[go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.stackguard1 uintptr; runtime._panic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.sched runtime.gobuf; runtime.syscallsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param unsafe.Pointer; runtime.atomicstatus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; runtime.schedlink runtime.guintptr; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bool; runtime.preemptStop bool; runtime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; runtime.gcscandone bool; runtime.throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/internal/atomic.Bool; runtime.raceignore int8; runtime.sysblocktraced bool; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int64; runtime.runnableTime int64; runtime.sysexitticks int64; runtime.traceseq uint64; runtime.tracelastp runtime.puintptr; runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runtime.sigcode0 uintptr; runtime.sigcode1 uintptr; runtime.sigpc uintptr; runtime.gopc uintptr; runtime.ancestors *[]runtime.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *runtime.sudog; runtime.cgoCtxt []uintptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDone runtime/internal/atomic.Uint32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.gcAssistBytes int64 }]
*runtime/internal/atomic.Pointer[runtime.spanSetBlock]
*runtime/internal/atomic.Uint32
*runtime/internal/atomic.Uint64
*runtime/internal/atomic.Uint8
*runtime/internal/atomic.Uintptr
*runtime/internal/atomic.UnsafePointer
*runtime/internal/sys.NotInHeap
*runtime/internal/syscall.EpollEvent
*strconv.decimal
*strconv.decimalSlice
*strconv.floatInfo
*strconv.leftCheat
*string
*struct { F uintptr; context..autotmp_3 *sync.Mutex }
*struct { F uintptr; context..autotmp_6 *sync.Mutex }
*struct { F uintptr; context.c *context.cancelCtx }
*struct { F uintptr; context.parent context.Context; context.child context.canceler }
*struct { F uintptr; fmt..autotmp_16 *fmt.pp; fmt..autotmp_17 interface {}; fmt..autotmp_18 int32 }
*struct { F uintptr; fmt..autotmp_19 *fmt.pp; fmt..autotmp_20 interface {}; fmt..autotmp_21 int32 }
*struct { F uintptr; fmt..autotmp_22 *fmt.pp; fmt..autotmp_23 interface {}; fmt..autotmp_24 int32 }
*struct { F uintptr; fmt..autotmp_25 *fmt.pp; fmt..autotmp_26 interface {}; fmt..autotmp_27 int32 }
*struct { F uintptr; internal/godebug..autotmp_3 *sync.Mutex }
*struct { F uintptr; internal/godebug.did map[string]bool }
*struct { F uintptr; internal/godebug.s *internal/godebug.Setting }
*struct { F uintptr; internal/poll..autotmp_10 *internal/poll.FD }
*struct { F uintptr; internal/poll..autotmp_12 *internal/poll.FD }
*struct { F uintptr; internal/testlog..autotmp_1 *sync.Mutex }
*struct { F uintptr; main..autotmp_11 func(<-chan os.Signal, func()); main..autotmp_12 <-chan os.Signal; main..autotmp_13 func() }
*struct { F uintptr; main..autotmp_14 context.Context; main..autotmp_15 *sync.WaitGroup; main..autotmp_16 chan<- main.packet }
*struct { F uintptr; main..autotmp_17 context.Context; main..autotmp_18 *sync.WaitGroup; main..autotmp_19 <-chan main.packet }
*struct { F uintptr; main..autotmp_5 *sync.WaitGroup }
*struct { F uintptr; main..autotmp_9 *sync.WaitGroup }
*struct { F uintptr; os/signal..autotmp_5 *sync.Mutex }
*struct { F uintptr; os/signal..autotmp_6 *sync.Mutex }
*struct { F uintptr; os/signal.h *os/signal.handler }
*struct { F uintptr; reflect.x *reflect.rtype }
*struct { F uintptr; sync..autotmp_2 *sync.Mutex }
*struct { F uintptr; sync..autotmp_3 *uint32 }
*struct { F uintptr; sync..autotmp_8 *sync.Mutex }
*struct { F uintptr; syscall..autotmp_9 *sync.RWMutex }
*struct { F uintptr; time..autotmp_12 uintptr }
*struct { F uintptr; time..autotmp_24 uintptr }
*struct { reflect.ityp *reflect.rtype; reflect.typ *reflect.rtype; reflect.hash uint32; reflect._ [4]uint8; reflect.fun [100000]unsafe.Pointer }
*struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr }
*struct { runtime.gList; runtime.n int32 }
*struct {}
*sudog<bool>
*sudog<int>
*sudog<main.packet>
*sudog<os.Signal>
*sudog<struct {}>
*sudog<time.Time>
*sudog<uint32>
*sync.Map
*sync.Mutex
*sync.Once
*sync.Pool
*sync.RWMutex
*sync.WaitGroup
*sync.eface
*sync.entry
*sync.poolChain
*sync.poolChainElt
*sync.poolDequeue
*sync.poolLocal
*sync.poolLocalInternal
*sync.readOnly
*sync/atomic.Int32
*sync/atomic.Pointer[go.shape.interface {}]
*sync/atomic.Pointer[go.shape.string]
*sync/atomic.Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]
*sync/atomic.Pointer[interface {}]
*sync/atomic.Pointer[string]
*sync/atomic.Pointer[sync.readOnly]
*sync/atomic.Uint64
*sync/atomic.Value
*sync/atomic.efaceWords
*syscall.Errno
*syscall.Iovec
*syscall.Rlimit
*syscall.Signal
*time.Location
*time.Time
*time.Timer
*time.dataIO
*time.fileSizeError
*time.zone
*time.zoneTrans
*uint16
*uint32
*uint64
*uint8
*uintptr
*unicode.Range16
*unicode.Range32
*unicode.RangeTable
*unsafe.Pointer
<-chan main.packet
<-chan os.Signal
<-chan struct {}
<-chan time.Time
<unspecified>
[0]*go.shape.interface {}
[0]*go.shape.string
[0]*go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
[0]*interface {}
[0]*string
[0]*sync.readOnly
[0]main.packet
[0]uintptr
[100000]unsafe.Pointer
[1000]uintptr
[100]uint8
[100]uintptr
[101]runtime.finalizer
[1024]uint8
[1048576]runtime.inlinedCall
[1048576]uint8
[104]uint8
[10]runtime.heldLockInfo
[10]string
[10]uint8
[1125899906842623]uint8
[128]*runtime.mspan
[128]*runtime.sudog
[128]runtime/internal/syscall.EpollEvent
[128]uint8
[128]uintptr
[129]*runtime.g
[129]uint8
[131072]uint16
[131072]uintptr
[133]string
[136]*runtime.mspan
[136]struct { runtime.mcentral runtime.mcentral; runtime.pad [24]uint8 }
[13]int32
[14]uint8
[15]uint64
[160]runtime/internal/atomic.Uint64
[16384]uint8
[16]runtime.xmmreg1
[16]uint8
[16]uintptr
[16]unicode/utf8.acceptRange
[171]uint8
[1]*[4194304]*runtime.heapArena
[1]int
[1]interface {}
[1]os.Signal
[1]runtime.stackObjectRecord
[1]string
[1]uint64
[1]uint8
[1]uintptr
[20]uint64
[20]uint8
[249]uint8
[24]uint32
[24]uint8
[252]uintptr
[253]uintptr
[256]runtime.guintptr
[256]uint64
[256]uint8
[268435456]uintptr
[281474976710655]uint32
[2]**runtime.stackWorkBuf
[2][8]runtime.pcvalueCacheEnt
[2]float32
[2]float64
[2]interface {}
[2]runtime.Frame
[2]runtime.evacDst
[2]runtime.spanSet
[2]string
[2]uint64
[2]uint8
[2]uintptr
[32]*runtime._defer
[32]string
[32]uint8
[32]uintptr
[33]float64
[35]runtime.mSpanList
[3]int64
[3]runtime.heapStatsDelta
[3]runtime.memRecordCycle
[3]runtime.mutex
[3]string
[3]uint16
[3]uint32
[3]uint64
[3]uint8
[4096]uint8
[40]uint8
[4194304]*runtime.heapArena
[46912496118442]runtime.elfSym
[4]runtime.stackfreelist
[4]string
[4]struct { runtime.item runtime.stackpoolItem; runtime._ [40]uint8 }
[4]uint16
[4]uint32
[4]uint64
[4]uint8
[4]uintptr
[512]*runtime.itab
[512]runtime.atomicMSpanPointer
[512]uint8
[512]uintptr
[562949953421311]uint16
[5][]runtime.pallocSum
[5]int64
[5]string
[5]uint
[5]uint8
[5]uintptr
[607]int64
[63]runtime.stackObject
[64488]uint8
[64]uint8
[64]uintptr
[65520]runtime.gcBits
[65528]uint8
[65536]runtime.scase
[65]int64
[65]runtime.sigTabT
[65]uint32
[65]uint8
[65]uintptr
[68]uint16
[68]uint32
[68]uint64
[68]uint8
[696][2]uint64
[6]int
[6]internal/cpu.option
[6]string
[6]uint8
[6]uintptr
[70368744177663]runtime.elfDyn
[70]uint8
[800]uint8
[8192]*[8192]runtime.pallocData
[8192]*runtime.mspan
[8192]runtime.pallocData
[8192]runtime.traceStackPtr
[8192]uint8
[8]runtime.fpxreg1
[8]runtime.pcvalueCacheEnt
[8]string
[8]uint64
[8]uint8
[96]uint8
[9]string
[9]uintptr
[9]unsafe.Pointer
[]*reflect.rtype
[]*runtime._defer
[]*runtime._type
[]*runtime.bmap
[]*runtime.g
[]*runtime.itab
[]*runtime.moduledata
[]*runtime.mspan
[]*runtime.p
[]*runtime.sudog
[]*runtime.timer
[]*sync.Pool
[]int
[]int32
[]interface {}
[]internal/cpu.option
[]key<*uint8>
[]key<chan<- os.Signal>
[]key<context.canceler>
[]key<int32>
[]key<interface {}>
[]key<runtime._typePair>
[]key<runtime.typeOff>
[]key<string>
[]key<uint32>
[]key<unsafe.Pointer>
[]main.packet
[]map[runtime.typeOff]*runtime._type
[]os.Signal
[]os/signal.stopping
[]reflect.Value
[]reflect.abiStep
[]reflect.imethod
[]reflect.method
[]reflect.structField
[]runtime.Frame
[]runtime.StackRecord
[]runtime.addrRange
[]runtime.ancestorInfo
[]runtime.arenaIdx
[]runtime.dbgVar
[]runtime.exitHook
[]runtime.functab
[]runtime.imethod
[]runtime.liveUserArenaChunk
[]runtime.method
[]runtime.modulehash
[]runtime.pallocSum
[]runtime.ptabEntry
[]runtime.scase
[]runtime.stackObjectRecord
[]runtime.structfield
[]runtime.textsect
[]runtime.vdsoSymbolKey
[]runtime/internal/atomic.Uint8
[]runtime/internal/syscall.EpollEvent
[]strconv.leftCheat
[]string
[]sync.eface
[]sync.poolLocal
[]syscall.Iovec
[]time.zone
[]time.zoneTrans
[]uint16
[]uint32
[]uint64
[]uint8
[]uintptr
[]unicode.Range16
[]unicode.Range32
[]unsafe.Pointer
[]val<*os/signal.handler>
[]val<*runtime._type>
[]val<*sync.entry>
[]val<*unicode.RangeTable>
[]val<[]*runtime._type>
[]val<[]uint8>
[]val<bool>
[]val<int32>
[]val<int>
[]val<struct {}>
[]val<uint64>
[]val<unsafe.Pointer>
bool
bucket<*uint8,[]uint8>
bucket<chan<- os.Signal,*os/signal.handler>
bucket<context.canceler,struct {}>
bucket<int32,unsafe.Pointer>
bucket<interface {},*sync.entry>
bucket<runtime._typePair,struct {}>
bucket<runtime.typeOff,*runtime._type>
bucket<string,*unicode.RangeTable>
bucket<string,bool>
bucket<string,int>
bucket<string,uint64>
bucket<uint32,[]*runtime._type>
bucket<unsafe.Pointer,int32>
bytes.readOp
chan bool
chan int
chan main.packet
chan os.Signal
chan struct {}
chan uint32
chan<- main.packet
chan<- os.Signal
complex128
complex64
context.CancelFunc
context.Context
context.cancelCtx
context.canceler
context.emptyCtx
context.stringer
context.timerCtx
context.valueCtx
error
errors.errorString
float32
float64
fmt.Formatter
fmt.GoStringer
fmt.Stringer
fmt.buffer
fmt.fmt
fmt.fmtFlags
fmt.pp
func()
func() bool
func() int32
func() interface {}
func(*os.file) error
func(*runtime.g)
func(*runtime.g) bool
func(*runtime.g, unsafe.Pointer) bool
func(*runtime.itab)
func(*runtime.p)
func(*runtime.siginfo, *runtime.sigctxt, *runtime.g) bool
func(*runtime.stkframe, unsafe.Pointer) bool
func(*runtime/internal/atomic.Int64) bool
func(<-chan os.Signal, func())
func(func()) bool
func(int)
func(int) error
func(int, []uint8) (int, error)
func(int, int, int) runtime.addrRange
func(int, runtime.addrRange) (int, int)
func(int, runtime.addrRange) runtime.addrRange
func(int64) int64
func(interface {}, interface {}) bool
func(interface {}, uintptr)
func(runtime.offAddr, uintptr)
func(string) (string, error)
func(string, string)
func(string, string) ([]uint8, error)
func(uint) uint8
func(uint32, runtime.vdsoSymbolKey) bool
func(uint64, uint64) uint64
func(uint8, uint8) bool
func(uint8, uint8, uint8)
func(uintptr) (uintptr, int64)
func(uintptr) int
func(uintptr) uint8
func(uintptr, unsafe.Pointer, int32) int32
func(unsafe.Pointer, uintptr) uintptr
func(unsafe.Pointer, unsafe.Pointer)
func(unsafe.Pointer, unsafe.Pointer) bool
func(unsafe.Pointer, unsafe.Pointer) int32
go.shape.func(string, string)
go.shape.interface {}
go.shape.string
go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }
go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.stackguard1 uintptr; runtime._panic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.sched runtime.gobuf; runtime.syscallsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param unsafe.Pointer; runtime.atomicstatus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; runtime.schedlink runtime.guintptr; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bool; runtime.preemptStop bool; runtime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; runtime.gcscandone bool; runtime.throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/internal/atomic.Bool; runtime.raceignore int8; runtime.sysblocktraced bool; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int64; runtime.runnableTime int64; runtime.sysexitticks int64; runtime.traceseq uint64; runtime.tracelastp runtime.puintptr; runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runtime.sigcode0 uintptr; runtime.sigcode1 uintptr; runtime.sigpc uintptr; runtime.gopc uintptr; runtime.ancestors *[]runtime.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *runtime.sudog; runtime.cgoCtxt []uintptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDone runtime/internal/atomic.Uint32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.gcAssistBytes int64 }
go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
hash<*uint8,[]uint8>
hash<chan<- os.Signal,*os/signal.handler>
hash<context.canceler,struct {}>
hash<int32,unsafe.Pointer>
hash<interface {},*sync.entry>
hash<runtime._typePair,struct {}>
hash<runtime.typeOff,*runtime._type>
hash<string,*unicode.RangeTable>
hash<string,bool>
hash<string,int>
hash<string,uint64>
hash<uint32,[]*runtime._type>
hash<unsafe.Pointer,int32>
hchan<bool>
hchan<int>
hchan<main.packet>
hchan<os.Signal>
hchan<struct {}>
hchan<time.Time>
hchan<uint32>
int
int16
int32
int64
int8
interface { M() }
interface {}
internal/abi.IntArgRegBitmap
internal/abi.RegArgs
internal/cpu.CacheLinePad
internal/cpu.option
internal/fmtsort.SortedMap
internal/goarch.ArchFamilyType
internal/godebug.Setting
internal/poll.DeadlineExceededError
internal/poll.FD
internal/poll.errNetClosing
internal/poll.fdMutex
internal/poll.pollDesc
internal/reflectlite.Kind
internal/reflectlite.Type
internal/reflectlite.arrayType
internal/reflectlite.chanDir
internal/reflectlite.chanType
internal/reflectlite.emptyInterface
internal/reflectlite.flag
internal/reflectlite.mapType
internal/reflectlite.name
internal/reflectlite.nameOff
internal/reflectlite.ptrType
internal/reflectlite.rtype
internal/reflectlite.sliceType
internal/reflectlite.tflag
internal/reflectlite.typeOff
internal/reflectlite.uncommonType
internal/syscall/unix.GetRandomFlag
internal/unsafeheader.Slice
internal/unsafeheader.String
io.Reader
io.Writer
io.discard
io/fs.FileMode
io/fs.PathError
main.packet
map[*uint8][]uint8
map[chan<- os.Signal]*os/signal.handler
map[context.canceler]struct {}
map[int32]unsafe.Pointer
map[interface {}]*sync.entry
map[runtime._typePair]struct {}
map[runtime.typeOff]*runtime._type
map[string]*unicode.RangeTable
map[string]bool
map[string]int
map[string]uint64
map[uint32][]*runtime._type
map[unsafe.Pointer]int32
math/rand.Rand
math/rand.Source
math/rand.Source64
math/rand.lockedSource
math/rand.rngSource
noalg.[2]struct { context.c unsafe.Pointer; context.elem unsafe.Pointer }
noalg.[2]struct { main.c unsafe.Pointer; main.elem unsafe.Pointer }
noalg.[2]struct { runtime.c unsafe.Pointer; runtime.elem unsafe.Pointer }
noalg.[8]*os/signal.handler
noalg.[8]*sync.entry
noalg.[8][]*runtime._type
noalg.[8]bool
noalg.[8]chan<- os.Signal
noalg.[8]context.canceler
noalg.[8]interface {}
noalg.[8]runtime._typePair
noalg.[8]string
noalg.[8]struct {}
noalg.[8]uint32
noalg.map.bucket[chan<- os.Signal]*os/signal.handler
noalg.map.bucket[context.canceler]struct {}
noalg.map.bucket[interface {}]*sync.entry
noalg.map.bucket[runtime._typePair]struct {}
noalg.map.bucket[string]bool
noalg.map.bucket[uint32][]*runtime._type
noalg.map.hdr[chan<- os.Signal]*os/signal.handler
noalg.map.hdr[context.canceler]struct {}
noalg.map.hdr[interface {}]*sync.entry
noalg.map.hdr[runtime._typePair]struct {}
noalg.map.hdr[string]bool
noalg.map.hdr[uint32][]*runtime._type
noalg.map.iter[chan<- os.Signal]*os/signal.handler
noalg.map.iter[context.canceler]struct {}
noalg.map.iter[interface {}]*sync.entry
noalg.struct { F uintptr; R *runtime.itabTableType }
noalg.struct { F uintptr; context..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; context..autotmp_6 *sync.Mutex }
noalg.struct { F uintptr; context.c *context.cancelCtx }
noalg.struct { F uintptr; context.parent context.Context; context.child context.canceler }
noalg.struct { F uintptr; fmt..autotmp_16 *fmt.pp; fmt..autotmp_17 interface {}; fmt..autotmp_18 int32 }
noalg.struct { F uintptr; fmt..autotmp_19 *fmt.pp; fmt..autotmp_20 interface {}; fmt..autotmp_21 int32 }
noalg.struct { F uintptr; fmt..autotmp_22 *fmt.pp; fmt..autotmp_23 interface {}; fmt..autotmp_24 int32 }
noalg.struct { F uintptr; fmt..autotmp_25 *fmt.pp; fmt..autotmp_26 interface {}; fmt..autotmp_27 int32 }
noalg.struct { F uintptr; internal/godebug..autotmp_3 *sync.Mutex }
noalg.struct { F uintptr; internal/godebug.did map[string]bool }
noalg.struct { F uintptr; internal/godebug.s *internal/godebug.Setting }
noalg.struct { F uintptr; internal/poll..autotmp_10 *internal/poll.FD }
noalg.struct { F uintptr; internal/poll..autotmp_12 *internal/poll.FD }
noalg.struct { F uintptr; internal/testlog..autotmp_1 *sync.Mutex }
noalg.struct { F uintptr; main..autotmp_11 func(<-chan os.Signal, func()); main..autotmp_12 <-chan os.Signal; main..autotmp_13 func() }
noalg.struct { F uintptr; main..autotmp_14 context.Context; main..autotmp_15 *sync.WaitGroup; main..autotmp_16 chan<- main.packet }
noalg.struct { F uintptr; main..autotmp_17 context.Context; main..autotmp_18 *sync.WaitGroup; main..autotmp_19 <-chan main.packet }
noalg.struct { F uintptr; main..autotmp_5 *sync.WaitGroup }
noalg.struct { F uintptr; main..autotmp_9 *sync.WaitGroup }
noalg.struct { F uintptr; os/signal..autotmp_5 *sync.Mutex }
noalg.struct { F uintptr; os/signal..autotmp_6 *sync.Mutex }
noalg.struct { F uintptr; os/signal.h *os/signal.handler }
noalg.struct { F uintptr; reflect.x *reflect.rtype }
noalg.struct { F uintptr; runtime.addr *uint32; runtime.ret int32 }
noalg.struct { F uintptr; runtime.addr unsafe.Pointer; runtime.n uintptr }
noalg.struct { F uintptr; runtime.addrRangeToSummaryRange func(int, runtime.addrRange) (int, int); runtime.summaryRangeToSumAddrRange func(int, int, int) runtime.addrRange }
noalg.struct { F uintptr; runtime.argp unsafe.Pointer; runtime.isLive func(uint8, uint8) bool }
noalg.struct { F uintptr; runtime.buf **runtime.traceBuf; runtime.pid int32 }
noalg.struct { F uintptr; runtime.c **runtime.mcache }
noalg.struct { F uintptr; runtime.c *runtime.hchan }
noalg.struct { F uintptr; runtime.c *runtime.mcache }
noalg.struct { F uintptr; runtime.caughtPanic *bool }
noalg.struct { F uintptr; runtime.e *runtime.eface }
noalg.struct { F uintptr; runtime.e *runtime.eface; runtime.f *runtime.eface; runtime.nret uintptr; runtime.fint *runtime._type; runtime.ot *runtime.ptrtype }
noalg.struct { F uintptr; runtime.firstFree *struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr } }
noalg.struct { F uintptr; runtime.fn *runtime.funcval; runtime.gp *runtime.g; runtime.pc uintptr }
noalg.struct { F uintptr; runtime.frame *runtime.stkframe; runtime.bad uintptr }
noalg.struct { F uintptr; runtime.freem **runtime.m }
noalg.struct { F uintptr; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.callerpc uintptr; runtime.dispatch uintptr; runtime.lockedm *bool; runtime.lockedExt *uint32 }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.pc uintptr; runtime.sp uintptr }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.pp *runtime.p }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.scanWork int64 }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.traceskip int }
noalg.struct { F uintptr; runtime.gp *runtime.g; runtime.workDone *int64; runtime.gcw *runtime.gcWork }
noalg.struct { F uintptr; runtime.gp1 *runtime.g; runtime.offset int }
noalg.struct { F uintptr; runtime.grunning *int }
noalg.struct { F uintptr; runtime.h *runtime.mheap; runtime.npages uintptr; runtime.s **runtime.mspan; runtime.spanclass runtime.spanClass }
noalg.struct { F uintptr; runtime.i *int }
noalg.struct { F uintptr; runtime.info *runtime.vdsoInfo; runtime.version int32 }
noalg.struct { F uintptr; runtime.liveInfo unsafe.Pointer; runtime.liveIdx int32; runtime.startOffset uint8 }
noalg.struct { F uintptr; runtime.me *runtime.g; runtime.curgp *runtime.g; runtime.level int32 }
noalg.struct { F uintptr; runtime.msgs *runtime._panic; runtime.docrash *bool; runtime.gp *runtime.g; runtime.pc uintptr; runtime.sp uintptr }
noalg.struct { F uintptr; runtime.n *int; runtime.pc uintptr; runtime.sp uintptr; runtime.gp *runtime.g; runtime.skip int; runtime.pcbuf []uintptr }
noalg.struct { F uintptr; runtime.needUnlock *bool }
noalg.struct { F uintptr; runtime.newg *runtime.g; runtime.stacksize int32 }
noalg.struct { F uintptr; runtime.now *int64 }
noalg.struct { F uintptr; runtime.ok *bool }
noalg.struct { F uintptr; runtime.ok *bool; runtime.oldp *runtime.p; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.oldval uint32; runtime.newval uint32 }
noalg.struct { F uintptr; runtime.p **runtime.notInHeap; runtime.size uintptr; runtime.align uintptr; runtime.sysStat *runtime.sysMemStat }
noalg.struct { F uintptr; runtime.p *runtime.pageAlloc }
noalg.struct { F uintptr; runtime.p unsafe.Pointer; runtime.b *runtime.bucket }
noalg.struct { F uintptr; runtime.pc *uintptr; runtime.ret *string }
noalg.struct { F uintptr; runtime.pc uintptr; runtime.sp uintptr; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.pc uintptr; runtime.sp unsafe.Pointer; runtime.gp *runtime.g; runtime.prevDefer *runtime._defer }
noalg.struct { F uintptr; runtime.pp *runtime.p }
noalg.struct { F uintptr; runtime.preemptible bool }
noalg.struct { F uintptr; runtime.prevDefer *runtime._defer; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.released *uintptr; runtime.p *runtime.pageAlloc; runtime.ci runtime.chunkIdx; runtime.pageIdx uint; runtime.nbytes uintptr }
noalg.struct { F uintptr; runtime.restart *bool }
noalg.struct { F uintptr; runtime.ret *int32; runtime.sig *uint32; runtime.new *runtime.sigactiont; runtime.old *runtime.sigactiont }
noalg.struct { F uintptr; runtime.ret *uintptr; runtime.addr unsafe.Pointer; runtime.n uintptr; runtime.prot int32; runtime.flags int32; runtime.fd int32; runtime.off uint32 }
noalg.struct { F uintptr; runtime.rw *runtime.rwmutex }
noalg.struct { F uintptr; runtime.s **runtime.mspan }
noalg.struct { F uintptr; runtime.s *runtime.mspan }
noalg.struct { F uintptr; runtime.s *runtime.mspan; runtime.h *runtime.mheap }
noalg.struct { F uintptr; runtime.s string }
noalg.struct { F uintptr; runtime.scases []runtime.scase; runtime.lockorder []uint16 }
noalg.struct { F uintptr; runtime.sp uintptr; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.sp1 uintptr; runtime.sp2 uintptr; runtime.sp3 uintptr; runtime.gp *runtime.g }
noalg.struct { F uintptr; runtime.src uintptr; runtime.dst *uintptr }
noalg.struct { F uintptr; runtime.start *bool }
noalg.struct { F uintptr; runtime.startTime int64 }
noalg.struct { F uintptr; runtime.state *runtime.stackScanState; runtime.gcw *runtime.gcWork }
noalg.struct { F uintptr; runtime.stk unsafe.Pointer; runtime.mp *runtime.m }
noalg.struct { F uintptr; runtime.tab *runtime.traceStackTable; runtime.id *uint32; runtime.pcs []uintptr; runtime.hash uintptr }
noalg.struct { F uintptr; runtime.typ *runtime._type; runtime.src unsafe.Pointer; runtime.off uintptr; runtime.size uintptr }
noalg.struct { F uintptr; sync..autotmp_2 *sync.Mutex }
noalg.struct { F uintptr; sync..autotmp_3 *uint32 }
noalg.struct { F uintptr; sync..autotmp_8 *sync.Mutex }
noalg.struct { F uintptr; syscall..autotmp_9 *sync.RWMutex }
noalg.struct { F uintptr; time..autotmp_12 uintptr }
noalg.struct { F uintptr; time..autotmp_24 uintptr }
noalg.struct { context.c unsafe.Pointer; context.elem unsafe.Pointer }
noalg.struct { context.started bool; context.heap bool; context.openDefer bool; context.sp uintptr; context.pc uintptr; context.fn uintptr; context._panic uintptr; context.link uintptr; context.fd uintptr; context.varp uintptr; context.framepc uintptr }
noalg.struct { fmt.started bool; fmt.heap bool; fmt.openDefer bool; fmt.sp uintptr; fmt.pc uintptr; fmt.fn uintptr; fmt._panic uintptr; fmt.link uintptr; fmt.fd uintptr; fmt.varp uintptr; fmt.framepc uintptr }
noalg.struct { internal/godebug.started bool; internal/godebug.heap bool; internal/godebug.openDefer bool; internal/godebug.sp uintptr; internal/godebug.pc uintptr; internal/godebug.fn uintptr; internal/godebug._panic uintptr; internal/godebug.link uintptr; internal/godebug.fd uintptr; internal/godebug.varp uintptr; internal/godebug.framepc uintptr }
noalg.struct { internal/poll.started bool; internal/poll.heap bool; internal/poll.openDefer bool; internal/poll.sp uintptr; internal/poll.pc uintptr; internal/poll.fn uintptr; internal/poll._panic uintptr; internal/poll.link uintptr; internal/poll.fd uintptr; internal/poll.varp uintptr; internal/poll.framepc uintptr }
noalg.struct { internal/testlog.started bool; internal/testlog.heap bool; internal/testlog.openDefer bool; internal/testlog.sp uintptr; internal/testlog.pc uintptr; internal/testlog.fn uintptr; internal/testlog._panic uintptr; internal/testlog.link uintptr; internal/testlog.fd uintptr; internal/testlog.varp uintptr; internal/testlog.framepc uintptr }
noalg.struct { main.c unsafe.Pointer; main.elem unsafe.Pointer }
noalg.struct { main.started bool; main.heap bool; main.openDefer bool; main.sp uintptr; main.pc uintptr; main.fn uintptr; main._panic uintptr; main.link uintptr; main.fd uintptr; main.varp uintptr; main.framepc uintptr }
noalg.struct { os/signal.started bool; os/signal.heap bool; os/signal.openDefer bool; os/signal.sp uintptr; os/signal.pc uintptr; os/signal.fn uintptr; os/signal._panic uintptr; os/signal.link uintptr; os/signal.fd uintptr; os/signal.varp uintptr; os/signal.framepc uintptr }
noalg.struct { runtime.c unsafe.Pointer; runtime.elem unsafe.Pointer }
noalg.struct { sync.started bool; sync.heap bool; sync.openDefer bool; sync.sp uintptr; sync.pc uintptr; sync.fn uintptr; sync._panic uintptr; sync.link uintptr; sync.fd uintptr; sync.varp uintptr; sync.framepc uintptr }
noalg.struct { syscall.started bool; syscall.heap bool; syscall.openDefer bool; syscall.sp uintptr; syscall.pc uintptr; syscall.fn uintptr; syscall._panic uintptr; syscall.link uintptr; syscall.fd uintptr; syscall.varp uintptr; syscall.framepc uintptr }
noalg.struct { time.started bool; time.heap bool; time.openDefer bool; time.sp uintptr; time.pc uintptr; time.fn uintptr; time._panic uintptr; time.link uintptr; time.fd uintptr; time.varp uintptr; time.framepc uintptr }
os.File
os.Signal
os.dirInfo
os.file
os.newFileKind
os.readdirMode
os/signal.handler
os/signal.stopping
reflect.ChanDir
reflect.Kind
reflect.MapIter
reflect.Method
reflect.SelectDir
reflect.StructField
reflect.StructTag
reflect.Type
reflect.Value
reflect.ValueError
reflect.abiDesc
reflect.abiSeq
reflect.abiStep
reflect.abiStepKind
reflect.arrayType
reflect.bitVector
reflect.chanType
reflect.emptyInterface
reflect.flag
reflect.funcType
reflect.hiter
reflect.imethod
reflect.interfaceType
reflect.layoutKey
reflect.layoutType
reflect.makeFuncCtxt
reflect.mapType
reflect.method
reflect.methodValue
reflect.name
reflect.nameOff
reflect.nonEmptyInterface
reflect.ptrType
reflect.rtype
reflect.sliceType
reflect.structField
reflect.structType
reflect.textOff
reflect.tflag
reflect.typeOff
reflect.uncommonType
runtime.Frame
runtime.Frames
runtime.Func
runtime.StackRecord
runtime.TypeAssertionError
runtime._defer
runtime._func
runtime._panic
runtime._type
runtime._typePair
runtime.activeSweep
runtime.addrRange
runtime.addrRanges
runtime.adjustinfo
runtime.ancestorInfo
runtime.arenaHint
runtime.arenaIdx
runtime.arraytype
runtime.atomicHeadTailIndex
runtime.atomicMSpanPointer
runtime.atomicOffAddr
runtime.atomicSpanSetSpinePointer
runtime.bitvector
runtime.blockRecord
runtime.bmap
runtime.boundsError
runtime.boundsErrorCode
runtime.bucket
runtime.bucketType
runtime.buckhashArray
runtime.cgoCallers
runtime.cgoSymbolizerArg
runtime.cgoTracebackArg
runtime.cgothreadstart
runtime.chantype
runtime.checkmarksMap
runtime.chunkIdx
runtime.consistentHeapStats
runtime.cpuProfile
runtime.cpuStats
runtime.dbgVar
runtime.debugCallWrapArgs
runtime.dlogPerM
runtime.eface
runtime.elfDyn
runtime.elfEhdr
runtime.elfPhdr
runtime.elfSym
runtime.elfVerdaux
runtime.elfVerdef
runtime.errorAddressString
runtime.errorString
runtime.evacDst
runtime.exitHook
runtime.finalizer
runtime.finblock
runtime.findfuncbucket
runtime.fixalloc
runtime.forcegcstate
runtime.fpstate1
runtime.fpxreg1
runtime.funcFlag
runtime.funcID
runtime.funcInfo
runtime.funcinl
runtime.functab
runtime.functype
runtime.funcval
runtime.g
runtime.gList
runtime.gQueue
runtime.gcBgMarkWorkerNode
runtime.gcBits
runtime.gcBitsArena
runtime.gcCPULimiterState
runtime.gcControllerState
runtime.gcDrainFlags
runtime.gcMarkWorkerMode
runtime.gcMode
runtime.gcTrigger
runtime.gcTriggerKind
runtime.gcWork
runtime.gclink
runtime.gclinkptr
runtime.gobuf
runtime.goroutineProfileState
runtime.goroutineProfileStateHolder
runtime.gsignalStack
runtime.guintptr
runtime.hchan
runtime.headTailIndex
runtime.heapArena
runtime.heapBits
runtime.heapStatsDelta
runtime.heldLockInfo
runtime.hex
runtime.hiter
runtime.hmap
runtime.iface
runtime.imethod
runtime.initTask
runtime.inlinedCall
runtime.interfacetype
runtime.itab
runtime.itabTableType
runtime.itimerspec
runtime.lfnode
runtime.lfstack
runtime.libcall
runtime.limiterEvent
runtime.limiterEventStamp
runtime.limiterEventType
runtime.linearAlloc
runtime.liveUserArenaChunk
runtime.lockRank
runtime.lockRankStruct
runtime.m
runtime.mOS
runtime.mProfCycleHolder
runtime.mSpanList
runtime.mSpanState
runtime.mSpanStateBox
runtime.mapextra
runtime.maptype
runtime.markBits
runtime.mcache
runtime.mcentral
runtime.memRecord
runtime.memRecordCycle
runtime.method
runtime.metricKind
runtime.mheap
runtime.mlink
runtime.moduledata
runtime.modulehash
runtime.mspan
runtime.mstats
runtime.muintptr
runtime.mutex
runtime.name
runtime.nameOff
runtime.notInHeap
runtime.notInHeapSlice
runtime.note
runtime.offAddr
runtime.p
runtime.pMask
runtime.pageAlloc
runtime.pageBits
runtime.pageCache
runtime.pageTraceBuf
runtime.pallocBits
runtime.pallocData
runtime.pallocSum
runtime.pcHeader
runtime.pcvalueCache
runtime.pcvalueCacheEnt
runtime.perThreadSyscallArgs
runtime.persistentAlloc
runtime.piController
runtime.plainError
runtime.pollCache
runtime.pollDesc
runtime.pollInfo
runtime.profAtomic
runtime.profBuf
runtime.profBufReadMode
runtime.profIndex
runtime.ptabEntry
runtime.ptrtype
runtime.puintptr
runtime.randomEnum
runtime.randomOrder
runtime.reflectMethodValue
runtime.rwmutex
runtime.scase
runtime.scavengeIndex
runtime.scavengerState
runtime.schedt
runtime.selectDir
runtime.semTable
runtime.semaProfileFlags
runtime.semaRoot
runtime.sigTabT
runtime.sigactiont
runtime.sigcontext
runtime.sigctxt
runtime.sigevent
runtime.sigeventFields
runtime.siginfo
runtime.siginfoFields
runtime.sigset
runtime.slice
runtime.slicetype
runtime.spanAllocType
runtime.spanClass
runtime.spanSet
runtime.spanSetBlock
runtime.spanSetBlockAlloc
runtime.spanSetSpinePointer
runtime.special
runtime.specialReachable
runtime.specialfinalizer
runtime.specialprofile
runtime.specialsIter
runtime.stack
runtime.stackObject
runtime.stackObjectBuf
runtime.stackObjectBufHdr
runtime.stackObjectRecord
runtime.stackScanState
runtime.stackWorkBuf
runtime.stackWorkBufHdr
runtime.stackfreelist
runtime.stackmap
runtime.stackpoolItem
runtime.stackt
runtime.statDep
runtime.stkframe
runtime.stringStruct
runtime.stringStructDWARF
runtime.stringer
runtime.structfield
runtime.structtype
runtime.sudog
runtime.suspendGState
runtime.sweepClass
runtime.sweepLocked
runtime.sweepLocker
runtime.sweepdata
runtime.sysMemStat
runtime.sysmontick
runtime.textOff
runtime.textsect
runtime.tflag
runtime.throwType
runtime.timeHistogram
runtime.timer
runtime.timespec
runtime.tmpBuf
runtime.traceAlloc
runtime.traceAllocBlock
runtime.traceAllocBlockPtr
runtime.traceBuf
runtime.traceBufHeader
runtime.traceBufPtr
runtime.traceStack
runtime.traceStackPtr
runtime.traceStackTable
runtime.tracestat
runtime.typeOff
runtime.uncommontype
runtime.vdsoInfo
runtime.vdsoSymbolKey
runtime.vdsoVersionKey
runtime.waitReason
runtime.waitq
runtime.wbBuf
runtime.workType
runtime.workbuf
runtime.workbufhdr
runtime.writeHeapBits
runtime.xmmreg1
runtime/internal/atomic.Bool
runtime/internal/atomic.Float64
runtime/internal/atomic.Int32
runtime/internal/atomic.Int64
runtime/internal/atomic.Pointer[func(string, string)]
runtime/internal/atomic.Pointer[go.shape.func(string, string)]
runtime/internal/atomic.Pointer[go.shape.string]
runtime/internal/atomic.Pointer[go.shape.struct { runtime.lfnode; runtime.popped runtime/internal/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]
runtime/internal/atomic.Pointer[go.shape.struct { runtime.stack runtime.stack; runtime.stackguard0 uintptr; runtime.stackguard1 uintptr; runtime._panic *runtime._panic; runtime._defer *runtime._defer; runtime.m *runtime.m; runtime.sched runtime.gobuf; runtime.syscallsp uintptr; runtime.syscallpc uintptr; runtime.stktopsp uintptr; runtime.param unsafe.Pointer; runtime.atomicstatus runtime/internal/atomic.Uint32; runtime.stackLock uint32; runtime.goid uint64; runtime.schedlink runtime.guintptr; runtime.waitsince int64; runtime.waitreason runtime.waitReason; runtime.preempt bool; runtime.preemptStop bool; runtime.preemptShrink bool; runtime.asyncSafePoint bool; runtime.paniconfault bool; runtime.gcscandone bool; runtime.throwsplit bool; runtime.activeStackChans bool; runtime.parkingOnChan runtime/internal/atomic.Bool; runtime.raceignore int8; runtime.sysblocktraced bool; runtime.tracking bool; runtime.trackingSeq uint8; runtime.trackingStamp int64; runtime.runnableTime int64; runtime.sysexitticks int64; runtime.traceseq uint64; runtime.tracelastp runtime.puintptr; runtime.lockedm runtime.muintptr; runtime.sig uint32; runtime.writebuf []uint8; runtime.sigcode0 uintptr; runtime.sigcode1 uintptr; runtime.sigpc uintptr; runtime.gopc uintptr; runtime.ancestors *[]runtime.ancestorInfo; runtime.startpc uintptr; runtime.racectx uintptr; runtime.waiting *runtime.sudog; runtime.cgoCtxt []uintptr; runtime.labels unsafe.Pointer; runtime.timer *runtime.timer; runtime.selectDone runtime/internal/atomic.Uint32; runtime.goroutineProfiled runtime.goroutineProfileStateHolder; runtime.gcAssistBytes int64 }]
runtime/internal/atomic.Pointer[runtime.g]
runtime/internal/atomic.Pointer[runtime.spanSetBlock]
runtime/internal/atomic.Pointer[string]
runtime/internal/atomic.Uint32
runtime/internal/atomic.Uint64
runtime/internal/atomic.Uint8
runtime/internal/atomic.Uintptr
runtime/internal/atomic.UnsafePointer
runtime/internal/atomic.align64
runtime/internal/atomic.noCopy
runtime/internal/sys.NotInHeap
runtime/internal/sys.nih
runtime/internal/syscall.EpollEvent
sort.Interface
sort.sortedHint
strconv.decimal
strconv.decimalSlice
strconv.floatInfo
strconv.leftCheat
string
struct { internal/cpu._ internal/cpu.CacheLinePad; HasAES bool; HasADX bool; HasAVX bool; HasAVX2 bool; HasBMI1 bool; HasBMI2 bool; HasERMS bool; HasFMA bool; HasOSXSAVE bool; HasPCLMULQDQ bool; HasPOPCNT bool; HasRDTSCP bool; HasSHA bool; HasSSE3 bool; HasSSSE3 bool; HasSSE41 bool; HasSSE42 bool; internal/cpu._ internal/cpu.CacheLinePad }
struct { internal/testlog.mu sync.Mutex; internal/testlog.val bool }
struct { reflect.b bool; reflect.x interface {} }
struct { reflect.ityp *reflect.rtype; reflect.typ *reflect.rtype; reflect.hash uint32; reflect._ [4]uint8; reflect.fun [100000]unsafe.Pointer }
struct { runtime.arenaHints *runtime.arenaHint; runtime.quarantineList runtime.mSpanList; runtime.readyList runtime.mSpanList }
struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr }
struct { runtime.base uintptr; runtime.end uintptr }
struct { runtime.cgocheck int32; runtime.clobberfree int32; runtime.efence int32; runtime.gccheckmark int32; runtime.gcpacertrace int32; runtime.gcshrinkstackoff int32; runtime.gcstoptheworld int32; runtime.gctrace int32; runtime.invalidptr int32; runtime.madvdontneed int32; runtime.scavtrace int32; runtime.scheddetail int32; runtime.schedtrace int32; runtime.tracebackancestors int32; runtime.asyncpreemptoff int32; runtime.harddecommit int32; runtime.adaptivestackstart int32; runtime.malloc bool; runtime.allocfreetrace int32; runtime.inittrace int32; runtime.sbrk int32 }
struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 }
struct { runtime.fill uint64; runtime.capacity uint64 }
struct { runtime.gList; runtime.n int32 }
struct { runtime.gcPercentGoal runtime/internal/atomic.Uint64; runtime.memoryLimitGoal runtime/internal/atomic.Uint64; runtime.assistTime runtime/internal/atomic.Int64; runtime.backgroundTime runtime/internal/atomic.Int64 }
struct { runtime.hooks []runtime.exitHook; runtime.runningExitHooks bool }
struct { runtime.index runtime.scavengeIndex; runtime.released uintptr }
struct { runtime.item runtime.stackpoolItem; runtime._ [40]uint8 }
struct { runtime.len int; runtime.buf [128]*runtime.mspan }
struct { runtime.lock runtime.mutex; runtime.free *runtime.gcBitsArena; runtime.next *runtime.gcBitsArena; runtime.current *runtime.gcBitsArena; runtime.previous *runtime.gcBitsArena }
struct { runtime.lock runtime.mutex; runtime.free [35]runtime.mSpanList }
struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }
struct { runtime.lock runtime.mutex; runtime.list runtime.gList }
struct { runtime.lock runtime.mutex; runtime.lockOwner *runtime.g; runtime.enabled bool; runtime.shutdown bool; runtime.headerWritten bool; runtime.footerWritten bool; runtime.shutdownSema uint32; runtime.seqStart uint64; runtime.ticksStart int64; runtime.ticksEnd int64; runtime.timeStart int64; runtime.timeEnd int64; runtime.seqGC uint64; runtime.reading runtime.traceBufPtr; runtime.empty runtime.traceBufPtr; runtime.fullHead runtime.traceBufPtr; runtime.fullTail runtime.traceBufPtr; runtime.stackTab runtime.traceStackTable; runtime.cpuLogRead *runtime.profBuf; runtime.cpuLogBuf runtime.traceBufPtr; runtime.reader runtime/internal/atomic.Pointer[runtime.g]; runtime.signalLock runtime/internal/atomic.Uint32; runtime.cpuLogWrite *runtime.profBuf; runtime.stringsLock runtime.mutex; runtime.strings map[string]uint64; runtime.stringSeq uint64; runtime.markWorkerLabels [4]uint64; runtime.bufLock runtime.mutex; runtime.buf runtime.traceBufPtr }
struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }
struct { runtime.lock runtime.mutex; runtime.next int32; runtime.m map[int32]unsafe.Pointer; runtime.minv map[unsafe.Pointer]int32 }
struct { runtime.lock runtime.mutex; runtime.q runtime.gQueue }
struct { runtime.lock runtime.mutex; runtime.reuse []runtime.liveUserArenaChunk; runtime.fault []runtime.liveUserArenaChunk }
struct { runtime.lock runtime.mutex; runtime.stack runtime.gList; runtime.noStack runtime.gList; runtime.n int32 }
struct { runtime.mcentral runtime.mcentral; runtime.pad [24]uint8 }
struct { runtime.mutex; runtime.persistentAlloc }
struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state runtime/internal/atomic.Uint32; runtime.delivering runtime/internal/atomic.Uint32; runtime.inuse bool }
struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }
struct { runtime.sema uint32; runtime.active bool; runtime.offset runtime/internal/atomic.Int64; runtime.records []runtime.StackRecord; runtime.labels []unsafe.Pointer }
struct { runtime.signalLock runtime/internal/atomic.Uint32; runtime.hz runtime/internal/atomic.Int32 }
struct { runtime.user bool; runtime.runnable runtime.gQueue; runtime.n int32 }
struct { sync.Mutex; os/signal.m map[chan<- os.Signal]*os/signal.handler; os/signal.ref [65]int64; os/signal.stopping []os/signal.stopping }
struct {}
sudog<bool>
sudog<int>
sudog<main.packet>
sudog<os.Signal>
sudog<struct {}>
sudog<time.Time>
sudog<uint32>
sync.Map
sync.Mutex
sync.Once
sync.Pool
sync.RWMutex
sync.WaitGroup
sync.dequeueNil
sync.eface
sync.entry
sync.noCopy
sync.notifyList
sync.poolChain
sync.poolChainElt
sync.poolDequeue
sync.poolLocal
sync.poolLocalInternal
sync.readOnly
sync/atomic.Int32
sync/atomic.Pointer[go.shape.interface {}]
sync/atomic.Pointer[go.shape.string]
sync/atomic.Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]
sync/atomic.Pointer[interface {}]
sync/atomic.Pointer[string]
sync/atomic.Pointer[sync.readOnly]
sync/atomic.Uint64
sync/atomic.Value
sync/atomic.align64
sync/atomic.efaceWords
sync/atomic.noCopy
syscall.Errno
syscall.Iovec
syscall.Rlimit
syscall.Signal
time.Duration
time.Location
time.Month
time.Time
time.Timer
time.Weekday
time.dataIO
time.fileSizeError
time.rule
time.ruleKind
time.runtimeTimer
time.zone
time.zoneTrans
uint
uint16
uint32
uint64
uint8
uintptr
unicode.Range16
unicode.Range32
unicode.RangeTable
unicode/utf8.acceptRange
unsafe.Pointer
waitq<bool>
waitq<int>
waitq<main.packet>
waitq<os.Signal>
waitq<struct {}>
waitq<time.Time>
waitq<uint32>
(dlv) exit
