(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) list
> _rt0_amd64_linux() /usr/local/go/src/runtime/rt0_linux_amd64.s:8 (PC: 0x4666c0)
Warning: debugging optimized function
     3:	// license that can be found in the LICENSE file.
     4:	
     5:	#include "textflag.h"
     6:	
     7:	TEXT _rt0_amd64_linux(SB),NOSPLIT,$-8
=>   8:		JMP	_rt0_amd64(SB)
     9:	
    10:	TEXT _rt0_amd64_linux_lib(SB),NOSPLIT,$0
    11:		JMP	_rt0_amd64_lib(SB)
(dlv) break main
(dlv) break main.main
Breakpoint 1 set at 0x4b7f52 for main.main() ./main.go:77
(dlv) clearall
Breakpoint 1 cleared at 0x4b7f52 for main.main() ./main.go:77
(dlv) help continue
Run until breakpoint or program termination.

	continue [<linespec>]

Optional linespec argument allows you to continue until a specific location is reached. The program will halt if a breakpoint is hit before reaching the specified location.

For example:

	continue main.main
	continue encoding/json.Marshal

(dlv) list
> _rt0_amd64_linux() /usr/local/go/src/runtime/rt0_linux_amd64.s:8 (PC: 0x4666c0)
Warning: debugging optimized function
     3:	// license that can be found in the LICENSE file.
     4:	
     5:	#include "textflag.h"
     6:	
     7:	TEXT _rt0_amd64_linux(SB),NOSPLIT,$-8
=>   8:		JMP	_rt0_amd64(SB)
     9:	
    10:	TEXT _rt0_amd64_linux_lib(SB),NOSPLIT,$0
    11:		JMP	_rt0_amd64_lib(SB)
(dlv) list 10
Showing /usr/local/go/src/runtime/rt0_linux_amd64.s:10 (PC: 0x0)
     5:	#include "textflag.h"
     6:	
     7:	TEXT _rt0_amd64_linux(SB),NOSPLIT,$-8
     8:		JMP	_rt0_amd64(SB)
     9:	
    10:	TEXT _rt0_amd64_linux_lib(SB),NOSPLIT,$0
    11:		JMP	_rt0_amd64_lib(SB)
(dlv) list +10
Showing /usr/local/go/src/runtime/rt0_linux_amd64.s:18 (PC: 0x0)
(dlv) help list
Show source code.

	[goroutine <n>] [frame <m>] list [<linespec>]

Show source around current point or provided linespec.

For example:

	frame 1 list 69
	list testvariables.go:10000
	list main.main:30
	list 40
(dlv) 
Show source code.

	[goroutine <n>] [frame <m>] list [<linespec>]

Show source around current point or provided linespec.

For example:

	frame 1 list 69
	list testvariables.go:10000
	list main.main:30
	list 40
(dlv) continue main.main
Breakpoint 2 set at 0x4b7f52 for main.main() ./main.go:77
> main.main() ./main.go:77 (hits goroutine(1):1 total:1) (PC: 0x4b7f52)
    72:				}
    73:			}
    74:		}
    75:	}
    76:	
=>  77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
(dlv) breakpoints
Breakpoint runtime-fatal-throw (enabled) at 0x436340 for runtime.throw() /usr/local/go/src/runtime/panic.go:982 (0)
Breakpoint unrecovered-panic (enabled) at 0x436700 for runtime.fatalpanic() /usr/local/go/src/runtime/panic.go:1065 (0)
	print runtime.curg._panic.arg
(dlv) list
> main.main() ./main.go:77 (hits total:0) (PC: 0x4b7f52)
    72:				}
    73:			}
    74:		}
    75:	}
    76:	
=>  77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
(dlv) next
> main.main() ./main.go:79 (PC: 0x4b7f69)
    74:		}
    75:	}
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
=>  79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
(dlv) next
> main.main() ./main.go:81 (PC: 0x4b7f8b)
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) next
> main.main() ./main.go:83 (PC: 0x4b800f)
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
=>  83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
(dlv) restart
Process restarted with PID 4130339
(dlv) continue main.main
Breakpoint 1 set at 0x4b7f52 for main.main() ./main.go:77
> main.main() ./main.go:77 (hits goroutine(1):1 total:1) (PC: 0x4b7f52)
    72:				}
    73:			}
    74:		}
    75:	}
    76:	
=>  77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
(dlv) help next
Step over to next source line.

	next [count]

Optional [count] argument allows you to skip multiple lines.

(dlv) continue 81
Breakpoint 2 set at 0x4b7f8b for main.main() ./main.go:81
> main.main() ./main.go:81 (hits goroutine(1):1 total:1) (PC: 0x4b7f8b)
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) continue 83
Breakpoint 3 set at 0x4b800f for main.main() ./main.go:83
> main.main() ./main.go:83 (hits goroutine(1):1 total:1) (PC: 0x4b800f)
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
=>  83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
(dlv) restart
Process restarted with PID 4130579
(dlv) continue main.main
Breakpoint 1 set at 0x4b7f52 for main.main() ./main.go:77
> main.main() ./main.go:77 (hits goroutine(1):1 total:1) (PC: 0x4b7f52)
    72:				}
    73:			}
    74:		}
    75:	}
    76:	
=>  77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
(dlv) next 2
> main.main() ./main.go:81 (PC: 0x4b7f8b)
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) step
> context.Background() /usr/local/go/src/context/context.go:208 (PC: 0x48aa40)
   203:	
   204:	// Background returns a non-nil, empty Context. It is never canceled, has no
   205:	// values, and has no deadline. It is typically used by the main function,
   206:	// initialization, and tests, and as the top-level Context for incoming
   207:	// requests.
=> 208:	func Background() Context {
   209:		return background
   210:	}
   211:	
   212:	// TODO returns a non-nil, empty Context. Code should use context.TODO when
   213:	// it's unclear which Context to use or it is not yet available (because the
(dlv) bt
0  0x000000000048aa40 in context.Background
   at /usr/local/go/src/context/context.go:208
1  0x00000000004b7f90 in main.main
   at ./main.go:81
2  0x0000000000438a38 in runtime.main
   at /usr/local/go/src/runtime/proc.go:250
3  0x0000000000464fe1 in runtime.goexit
   at /usr/local/go/src/runtime/asm_amd64.s:1571
(dlv) list
> context.Background() /usr/local/go/src/context/context.go:208 (PC: 0x48aa40)
   203:	
   204:	// Background returns a non-nil, empty Context. It is never canceled, has no
   205:	// values, and has no deadline. It is typically used by the main function,
   206:	// initialization, and tests, and as the top-level Context for incoming
   207:	// requests.
=> 208:	func Background() Context {
   209:		return background
   210:	}
   211:	
   212:	// TODO returns a non-nil, empty Context. Code should use context.TODO when
   213:	// it's unclear which Context to use or it is not yet available (because the
(dlv) stepout
> main.main() ./main.go:81 (PC: 0x4b7f90)
Values returned:
	~r0: context.Context(*context.emptyCtx) *0

    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) step
> context.WithCancel() /usr/local/go/src/context/context.go:232 (PC: 0x48aa8f)
   227:	// context's Done channel is closed when the returned cancel function is called
   228:	// or when the parent context's Done channel is closed, whichever happens first.
   229:	//
   230:	// Canceling this context releases resources associated with it, so code should
   231:	// call cancel as soon as the operations running in this Context complete.
=> 232:	func WithCancel(parent Context) (ctx Context, cancel CancelFunc) {
   233:		if parent == nil {
   234:			panic("cannot create context from nil parent")
   235:		}
   236:		c := newCancelCtx(parent)
   237:		propagateCancel(parent, &c)
(dlv) next
> context.WithCancel() /usr/local/go/src/context/context.go:233 (PC: 0x48aac5)
   228:	// or when the parent context's Done channel is closed, whichever happens first.
   229:	//
   230:	// Canceling this context releases resources associated with it, so code should
   231:	// call cancel as soon as the operations running in this Context complete.
   232:	func WithCancel(parent Context) (ctx Context, cancel CancelFunc) {
=> 233:		if parent == nil {
   234:			panic("cannot create context from nil parent")
   235:		}
   236:		c := newCancelCtx(parent)
   237:		propagateCancel(parent, &c)
   238:		return &c, func() { c.cancel(true, Canceled) }
(dlv) step
> context.WithCancel() /usr/local/go/src/context/context.go:236 (PC: 0x48aad5)
   231:	// call cancel as soon as the operations running in this Context complete.
   232:	func WithCancel(parent Context) (ctx Context, cancel CancelFunc) {
   233:		if parent == nil {
   234:			panic("cannot create context from nil parent")
   235:		}
=> 236:		c := newCancelCtx(parent)
   237:		propagateCancel(parent, &c)
   238:		return &c, func() { c.cancel(true, Canceled) }
   239:	}
   240:	
   241:	// newCancelCtx returns an initialized cancelCtx.
(dlv) step
> context.newCancelCtx() /usr/local/go/src/context/context.go:242 (PC: 0x48acc0)
   237:		propagateCancel(parent, &c)
   238:		return &c, func() { c.cancel(true, Canceled) }
   239:	}
   240:	
   241:	// newCancelCtx returns an initialized cancelCtx.
=> 242:	func newCancelCtx(parent Context) cancelCtx {
   243:		return cancelCtx{Context: parent}
   244:	}
   245:	
   246:	// goroutines counts the number of goroutines ever created; for testing.
   247:	var goroutines int32
(dlv) stepout
> context.WithCancel() /usr/local/go/src/context/context.go:236 (PC: 0x48aaff)
Values returned:
	~r0: context.cancelCtx {
		Context: context.Context(*context.emptyCtx) *0,
		mu: sync.Mutex {state: 0, sema: 0},
		done: sync/atomic.Value {
			v: interface {} nil,},
		children: map[context.canceler]struct {} nil,
		err: error nil,}

   231:	// call cancel as soon as the operations running in this Context complete.
   232:	func WithCancel(parent Context) (ctx Context, cancel CancelFunc) {
   233:		if parent == nil {
   234:			panic("cannot create context from nil parent")
   235:		}
=> 236:		c := newCancelCtx(parent)
   237:		propagateCancel(parent, &c)
   238:		return &c, func() { c.cancel(true, Canceled) }
   239:	}
   240:	
   241:	// newCancelCtx returns an initialized cancelCtx.
(dlv) stepout
> main.main() ./main.go:81 (PC: 0x4b7fca)
Values returned:
	ctx: context.Context(*context.cancelCtx) *{
		Context: context.Context(*context.emptyCtx) *0,
		mu: sync.Mutex {state: 0, sema: 0},
		done: sync/atomic.Value {
			v: interface {} nil,},
		children: map[context.canceler]struct {} nil,
		err: error nil,}
	cancel: context.WithCancel.func1

    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) restart
Process restarted with PID 4131321
(dlv) continue 81
(dlv) continue main.main
Breakpoint 1 set at 0x4b7f52 for main.main() ./main.go:77
> main.main() ./main.go:77 (hits goroutine(1):1 total:1) (PC: 0x4b7f52)
    72:				}
    73:			}
    74:		}
    75:	}
    76:	
=>  77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
(dlv) continue 81
Breakpoint 2 set at 0x4b7f8b for main.main() ./main.go:81
> main.main() ./main.go:81 (hits goroutine(1):1 total:1) (PC: 0x4b7f8b)
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) restart
Process restarted with PID 4131548
(dlv) continue main.go:81
Breakpoint 1 set at 0x4b7f8b for main.main() ./main.go:81
> main.main() ./main.go:81 (hits goroutine(1):1 total:1) (PC: 0x4b7f8b)
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) step
> context.Background() /usr/local/go/src/context/context.go:208 (PC: 0x48aa40)
   203:	
   204:	// Background returns a non-nil, empty Context. It is never canceled, has no
   205:	// values, and has no deadline. It is typically used by the main function,
   206:	// initialization, and tests, and as the top-level Context for incoming
   207:	// requests.
=> 208:	func Background() Context {
   209:		return background
   210:	}
   211:	
   212:	// TODO returns a non-nil, empty Context. Code should use context.TODO when
   213:	// it's unclear which Context to use or it is not yet available (because the
(dlv) disassemble
TEXT context.Background(SB) /usr/local/go/src/context/context.go
=>	context.go:208	0x48aa40	4883ec18	sub rsp, 0x18
	context.go:208	0x48aa44	48896c2410	mov qword ptr [rsp+0x10], rbp
	context.go:208	0x48aa49	488d6c2410	lea rbp, ptr [rsp+0x10]
	context.go:208	0x48aa4e	440f113c24	movups xmmword ptr [rsp], xmm15
	context.go:209	0x48aa53	488b1dc61f0d00	mov rbx, qword ptr [context.background]
	context.go:209	0x48aa5a	488d0d9f610500	lea rcx, ptr [rip+0x5619f]
	.:0		0x48aa61	48890c24	mov qword ptr [rsp], rcx
	.:0		0x48aa65	48895c2408	mov qword ptr [rsp+0x8], rbx
	.:0		0x48aa6a	488b0424	mov rax, qword ptr [rsp]
	.:0		0x48aa6e	488b6c2410	mov rbp, qword ptr [rsp+0x10]
	.:0		0x48aa73	4883c418	add rsp, 0x18
	.:0		0x48aa77	c3		ret
(dlv) regs
    Rip = 0x000000000048aa40
    Rsp = 0x000000c000095d88
    Rax = 0x000000c0000140b0
    Rbx = 0x00007f6efdfa01a0
    Rcx = 0x0000000000000000
    Rdx = 0x0000000000000000
    Rsi = 0x0000000000000000
    Rdi = 0x0000000000000000
    Rbp = 0x000000c000095f70
     R8 = 0x000000c0000140b0
     R9 = 0x0000000000000001
    R10 = 0x0000000000000000
    R11 = 0x0000000000000000
    R12 = 0x000000c000095e10
    R13 = 0x0000000000000000
    R14 = 0x000000c0000021a0
    R15 = 0x0000000000000030
 Rflags = 0x0000000000000206	[PF IF IOPL=0]
     Es = 0x0000000000000000
     Cs = 0x0000000000000033
     Ss = 0x000000000000002b
     Ds = 0x0000000000000000
     Fs = 0x0000000000000000
     Gs = 0x0000000000000000
Fs_base = 0x000000000055d870
Gs_base = 0x0000000000000000

(dlv) disassemble
TEXT context.Background(SB) /usr/local/go/src/context/context.go
=>	context.go:208	0x48aa40	4883ec18	sub rsp, 0x18
	context.go:208	0x48aa44	48896c2410	mov qword ptr [rsp+0x10], rbp
	context.go:208	0x48aa49	488d6c2410	lea rbp, ptr [rsp+0x10]
	context.go:208	0x48aa4e	440f113c24	movups xmmword ptr [rsp], xmm15
	context.go:209	0x48aa53	488b1dc61f0d00	mov rbx, qword ptr [context.background]
	context.go:209	0x48aa5a	488d0d9f610500	lea rcx, ptr [rip+0x5619f]
	.:0		0x48aa61	48890c24	mov qword ptr [rsp], rcx
	.:0		0x48aa65	48895c2408	mov qword ptr [rsp+0x8], rbx
	.:0		0x48aa6a	488b0424	mov rax, qword ptr [rsp]
	.:0		0x48aa6e	488b6c2410	mov rbp, qword ptr [rsp+0x10]
	.:0		0x48aa73	4883c418	add rsp, 0x18
	.:0		0x48aa77	c3		ret
(dlv) step-instruction
> context.Background() /usr/local/go/src/context/context.go:208 (PC: 0x48aa44)
   203:	
   204:	// Background returns a non-nil, empty Context. It is never canceled, has no
   205:	// values, and has no deadline. It is typically used by the main function,
   206:	// initialization, and tests, and as the top-level Context for incoming
   207:	// requests.
=> 208:	func Background() Context {
   209:		return background
   210:	}
   211:	
   212:	// TODO returns a non-nil, empty Context. Code should use context.TODO when
   213:	// it's unclear which Context to use or it is not yet available (because the
(dlv) disassemble
TEXT context.Background(SB) /usr/local/go/src/context/context.go
	context.go:208	0x48aa40	4883ec18	sub rsp, 0x18
=>	context.go:208	0x48aa44	48896c2410	mov qword ptr [rsp+0x10], rbp
	context.go:208	0x48aa49	488d6c2410	lea rbp, ptr [rsp+0x10]
	context.go:208	0x48aa4e	440f113c24	movups xmmword ptr [rsp], xmm15
	context.go:209	0x48aa53	488b1dc61f0d00	mov rbx, qword ptr [context.background]
	context.go:209	0x48aa5a	488d0d9f610500	lea rcx, ptr [rip+0x5619f]
	.:0		0x48aa61	48890c24	mov qword ptr [rsp], rcx
	.:0		0x48aa65	48895c2408	mov qword ptr [rsp+0x8], rbx
	.:0		0x48aa6a	488b0424	mov rax, qword ptr [rsp]
	.:0		0x48aa6e	488b6c2410	mov rbp, qword ptr [rsp+0x10]
	.:0		0x48aa73	4883c418	add rsp, 0x18
	.:0		0x48aa77	c3		ret
(dlv) regs
    Rip = 0x000000000048aa44
    Rsp = 0x000000c000095d70
    Rax = 0x000000c0000140b0
    Rbx = 0x00007f6efdfa01a0
    Rcx = 0x0000000000000000
    Rdx = 0x0000000000000000
    Rsi = 0x0000000000000000
    Rdi = 0x0000000000000000
    Rbp = 0x000000c000095f70
     R8 = 0x000000c0000140b0
     R9 = 0x0000000000000001
    R10 = 0x0000000000000000
    R11 = 0x0000000000000000
    R12 = 0x000000c000095e10
    R13 = 0x0000000000000000
    R14 = 0x000000c0000021a0
    R15 = 0x0000000000000030
 Rflags = 0x0000000000000202	[IF IOPL=0]
     Es = 0x0000000000000000
     Cs = 0x0000000000000033
     Ss = 0x000000000000002b
     Ds = 0x0000000000000000
     Fs = 0x0000000000000000
     Gs = 0x0000000000000000
Fs_base = 0x000000000055d870
Gs_base = 0x0000000000000000

(dlv) list
> context.Background() /usr/local/go/src/context/context.go:208 (PC: 0x48aa44)
   203:	
   204:	// Background returns a non-nil, empty Context. It is never canceled, has no
   205:	// values, and has no deadline. It is typically used by the main function,
   206:	// initialization, and tests, and as the top-level Context for incoming
   207:	// requests.
=> 208:	func Background() Context {
   209:		return background
   210:	}
   211:	
   212:	// TODO returns a non-nil, empty Context. Code should use context.TODO when
   213:	// it's unclear which Context to use or it is not yet available (because the
(dlv) disassemble
TEXT context.Background(SB) /usr/local/go/src/context/context.go
	context.go:208	0x48aa40	4883ec18	sub rsp, 0x18
=>	context.go:208	0x48aa44	48896c2410	mov qword ptr [rsp+0x10], rbp
	context.go:208	0x48aa49	488d6c2410	lea rbp, ptr [rsp+0x10]
	context.go:208	0x48aa4e	440f113c24	movups xmmword ptr [rsp], xmm15
	context.go:209	0x48aa53	488b1dc61f0d00	mov rbx, qword ptr [context.background]
	context.go:209	0x48aa5a	488d0d9f610500	lea rcx, ptr [rip+0x5619f]
	.:0		0x48aa61	48890c24	mov qword ptr [rsp], rcx
	.:0		0x48aa65	48895c2408	mov qword ptr [rsp+0x8], rbx
	.:0		0x48aa6a	488b0424	mov rax, qword ptr [rsp]
	.:0		0x48aa6e	488b6c2410	mov rbp, qword ptr [rsp+0x10]
	.:0		0x48aa73	4883c418	add rsp, 0x18
	.:0		0x48aa77	c3		ret
(dlv) stepout
> main.main() ./main.go:81 (PC: 0x4b7f90)
Values returned:
	~r0: context.Context(*context.emptyCtx) *0

    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) funcs main
main.consumeValues
main.consumeValues.func1
main.main
main.main.func1
main.main.func2
main.main.func3
main.main.func4
main.produceValues
main.produceValues.func1
runtime.main
runtime.main.func1
runtime.main.func2
(dlv) disassemble main.main.func1
(dlv) disassemble -l main.main.func1
TEXT main.main.func1(SB) /home/deparker/Code/ultimate-go-debugging/day-2/session/main.go
	main.go:95	0x4b7e80	493b6610		cmp rsp, qword ptr [r14+0x10]
	main.go:95	0x4b7e84	0f8685000000		jbe 0x4b7f0f
	main.go:95	0x4b7e8a	4883ec50		sub rsp, 0x50
	main.go:95	0x4b7e8e	48896c2448		mov qword ptr [rsp+0x48], rbp
	main.go:95	0x4b7e93	488d6c2448		lea rbp, ptr [rsp+0x48]
	main.go:95	0x4b7e98	4889442458		mov qword ptr [rsp+0x58], rax
	main.go:95	0x4b7e9d	48895c2460		mov qword ptr [rsp+0x60], rbx
	main.go:97	0x4b7ea2	31db			xor ebx, ebx
	main.go:97	0x4b7ea4	e8d7ddf4ff		call $runtime.chanrecv1
	main.go:99	0x4b7ea9	440f117c2420		movups xmmword ptr [rsp+0x20], xmm15
	main.go:99	0x4b7eaf	488d442420		lea rax, ptr [rsp+0x20]
	main.go:99	0x4b7eb4	4889442418		mov qword ptr [rsp+0x18], rax
	main.go:99	0x4b7eb9	8400			test byte ptr [rax], al
	main.go:99	0x4b7ebb	488d0d5e910000		lea rcx, ptr [rip+0x915e]
	main.go:99	0x4b7ec2	48894c2420		mov qword ptr [rsp+0x20], rcx
	main.go:99	0x4b7ec7	488d0d12870200		lea rcx, ptr [rip+0x28712]
	main.go:99	0x4b7ece	48894c2428		mov qword ptr [rsp+0x28], rcx
	main.go:99	0x4b7ed3	8400			test byte ptr [rax], al
	main.go:99	0x4b7ed5	eb00			jmp 0x4b7ed7
	main.go:99	0x4b7ed7	4889442430		mov qword ptr [rsp+0x30], rax
	main.go:99	0x4b7edc	48c744243801000000	mov qword ptr [rsp+0x38], 0x1
	main.go:99	0x4b7ee5	48c744244001000000	mov qword ptr [rsp+0x40], 0x1
	main.go:99	0x4b7eee	bb01000000		mov ebx, 0x1
	main.go:99	0x4b7ef3	4889d9			mov rcx, rbx
	main.go:99	0x4b7ef6	e86567ffff		call $fmt.Println
	main.go:102	0x4b7efb	488b542460		mov rdx, qword ptr [rsp+0x60]
	main.go:102	0x4b7f00	488b32			mov rsi, qword ptr [rdx]
	main.go:102	0x4b7f03	ffd6			call rsi
	main.go:103	0x4b7f05	488b6c2448		mov rbp, qword ptr [rsp+0x48]
	main.go:103	0x4b7f0a	4883c450		add rsp, 0x50
	main.go:103	0x4b7f0e	c3			ret
	main.go:95	0x4b7f0f	4889442408		mov qword ptr [rsp+0x8], rax
	.:0		0x4b7f14	48895c2410		mov qword ptr [rsp+0x10], rbx
	.:0		0x4b7f19	e842b1faff		call $runtime.morestack_noctxt
	.:0		0x4b7f1e	488b442408		mov rax, qword ptr [rsp+0x8]
	.:0		0x4b7f23	488b5c2410		mov rbx, qword ptr [rsp+0x10]
	.:0		0x4b7f28	e953ffffff		jmp $main.main.func1
(dlv) 
TEXT main.main.func1(SB) /home/deparker/Code/ultimate-go-debugging/day-2/session/main.go
	main.go:95	0x4b7e80	493b6610		cmp rsp, qword ptr [r14+0x10]
	main.go:95	0x4b7e84	0f8685000000		jbe 0x4b7f0f
	main.go:95	0x4b7e8a	4883ec50		sub rsp, 0x50
	main.go:95	0x4b7e8e	48896c2448		mov qword ptr [rsp+0x48], rbp
	main.go:95	0x4b7e93	488d6c2448		lea rbp, ptr [rsp+0x48]
	main.go:95	0x4b7e98	4889442458		mov qword ptr [rsp+0x58], rax
	main.go:95	0x4b7e9d	48895c2460		mov qword ptr [rsp+0x60], rbx
	main.go:97	0x4b7ea2	31db			xor ebx, ebx
	main.go:97	0x4b7ea4	e8d7ddf4ff		call $runtime.chanrecv1
	main.go:99	0x4b7ea9	440f117c2420		movups xmmword ptr [rsp+0x20], xmm15
	main.go:99	0x4b7eaf	488d442420		lea rax, ptr [rsp+0x20]
	main.go:99	0x4b7eb4	4889442418		mov qword ptr [rsp+0x18], rax
	main.go:99	0x4b7eb9	8400			test byte ptr [rax], al
	main.go:99	0x4b7ebb	488d0d5e910000		lea rcx, ptr [rip+0x915e]
	main.go:99	0x4b7ec2	48894c2420		mov qword ptr [rsp+0x20], rcx
	main.go:99	0x4b7ec7	488d0d12870200		lea rcx, ptr [rip+0x28712]
	main.go:99	0x4b7ece	48894c2428		mov qword ptr [rsp+0x28], rcx
	main.go:99	0x4b7ed3	8400			test byte ptr [rax], al
	main.go:99	0x4b7ed5	eb00			jmp 0x4b7ed7
	main.go:99	0x4b7ed7	4889442430		mov qword ptr [rsp+0x30], rax
	main.go:99	0x4b7edc	48c744243801000000	mov qword ptr [rsp+0x38], 0x1
	main.go:99	0x4b7ee5	48c744244001000000	mov qword ptr [rsp+0x40], 0x1
	main.go:99	0x4b7eee	bb01000000		mov ebx, 0x1
	main.go:99	0x4b7ef3	4889d9			mov rcx, rbx
	main.go:99	0x4b7ef6	e86567ffff		call $fmt.Println
	main.go:102	0x4b7efb	488b542460		mov rdx, qword ptr [rsp+0x60]
	main.go:102	0x4b7f00	488b32			mov rsi, qword ptr [rdx]
	main.go:102	0x4b7f03	ffd6			call rsi
	main.go:103	0x4b7f05	488b6c2448		mov rbp, qword ptr [rsp+0x48]
	main.go:103	0x4b7f0a	4883c450		add rsp, 0x50
	main.go:103	0x4b7f0e	c3			ret
	main.go:95	0x4b7f0f	4889442408		mov qword ptr [rsp+0x8], rax
	.:0		0x4b7f14	48895c2410		mov qword ptr [rsp+0x10], rbx
	.:0		0x4b7f19	e842b1faff		call $runtime.morestack_noctxt
	.:0		0x4b7f1e	488b442408		mov rax, qword ptr [rsp+0x8]
	.:0		0x4b7f23	488b5c2410		mov rbx, qword ptr [rsp+0x10]
	.:0		0x4b7f28	e953ffffff		jmp $main.main.func1
(dlv) restart
Process restarted with PID 4133710
(dlv) continue main.main
Breakpoint 1 set at 0x4b7f52 for main.main() ./main.go:77
> main.main() ./main.go:77 (hits goroutine(1):1 total:1) (PC: 0x4b7f52)
    72:				}
    73:			}
    74:		}
    75:	}
    76:	
=>  77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
(dlv) c
(dlv) restart
Process restarted with PID 4133785
(dlv) continue main.main
Breakpoint 1 set at 0x4b7f52 for main.main() ./main.go:77
> main.main() ./main.go:77 (hits goroutine(1):1 total:1) (PC: 0x4b7f52)
    72:				}
    73:			}
    74:		}
    75:	}
    76:	
=>  77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
(dlv) n
> main.main() ./main.go:79 (PC: 0x4b7f69)
    74:		}
    75:	}
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
=>  79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
(dlv) 
> main.main() ./main.go:81 (PC: 0x4b7f8b)
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) 
> main.main() ./main.go:83 (PC: 0x4b800f)
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
=>  83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
(dlv) 
> main.main() ./main.go:84 (PC: 0x4b80bd)
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
=>  84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
    89:	
(dlv) 
> main.main() ./main.go:85 (PC: 0x4b80cd)
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
=>  85:			fmt.Println(err)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
    89:	
    90:		// Create a channel to be notified when we get a signal.
(dlv) restart <stdin2.txt
Process restarted with PID 4134035
(dlv) continue main.main
Breakpoint 1 set at 0x4b7f52 for main.main() ./main.go:77
> main.main() ./main.go:77 (hits goroutine(1):1 total:1) (PC: 0x4b7f52)
    72:				}
    73:			}
    74:		}
    75:	}
    76:	
=>  77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
(dlv) n
> main.main() ./main.go:79 (PC: 0x4b7f69)
    74:		}
    75:	}
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
=>  79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
(dlv) 
> main.main() ./main.go:81 (PC: 0x4b7f8b)
    76:	
    77:	func main() {
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
=>  81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
(dlv) 
> main.main() ./main.go:83 (PC: 0x4b800f)
    78:		// Create a WaitGroup to ensure program does not exit before goroutines finish.
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
=>  83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
(dlv) 
> main.main() ./main.go:84 (PC: 0x4b80bd)
    79:		var wg sync.WaitGroup
    80:		// Create a context object to pass to our goroutines.
    81:		ctx, cancel := context.WithCancel(context.Background())
    82:	
    83:		data, err := ioutil.ReadAll(os.Stdin)
=>  84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
    89:	
(dlv) 
> main.main() ./main.go:88 (PC: 0x4b81b3)
    83:		data, err := ioutil.ReadAll(os.Stdin)
    84:		if err != nil {
    85:			fmt.Println(err)
    86:			os.Exit(1)
    87:		}
=>  88:		fmt.Printf("got data: %s\n", data)
    89:	
    90:		// Create a channel to be notified when we get a signal.
    91:		sigch := make(chan os.Signal, 1)
    92:		// Ensure we are notified on receipt of SIGTERM.
    93:		signal.Notify(sigch, syscall.SIGTERM)
(dlv) print data
[]uint8 len: 43, cap: 512, [97,110,100,32,110,111,119,32,102,111,114,32,115,111,109,101,116,104,105,110,103,32,99,111,109,112,108,101,116,101,108,121,32,100,105,102,102,101,114,101,110,116,10]
(dlv) print string(data)
"and now for something completely different\n"
(dlv) print len(data)
43
(dlv) print cap(data)
512
(dlv) next
> main.main() ./main.go:91 (PC: 0x4b8265)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
    89:	
    90:		// Create a channel to be notified when we get a signal.
=>  91:		sigch := make(chan os.Signal, 1)
    92:		// Ensure we are notified on receipt of SIGTERM.
    93:		signal.Notify(sigch, syscall.SIGTERM)
    94:	
    95:		go func(sch <-chan os.Signal, cncl func()) {
    96:			// Wait until we get a signal.
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) 
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) ls
> main.main() ./main.go:91 (PC: 0x4b8265)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
    89:	
    90:		// Create a channel to be notified when we get a signal.
=>  91:		sigch := make(chan os.Signal, 1)
    92:		// Ensure we are notified on receipt of SIGTERM.
    93:		signal.Notify(sigch, syscall.SIGTERM)
    94:	
    95:		go func(sch <-chan os.Signal, cncl func()) {
    96:			// Wait until we get a signal.
(dlv) call fmt.Println("hello")
> main.main() ./main.go:91 (PC: 0x4b8265)
(dlv) list
> main.main() ./main.go:91 (PC: 0x4b8265)
    86:			os.Exit(1)
    87:		}
    88:		fmt.Printf("got data: %s\n", data)
    89:	
    90:		// Create a channel to be notified when we get a signal.
=>  91:		sigch := make(chan os.Signal, 1)
    92:		// Ensure we are notified on receipt of SIGTERM.
    93:		signal.Notify(sigch, syscall.SIGTERM)
    94:	
    95:		go func(sch <-chan os.Signal, cncl func()) {
    96:			// Wait until we get a signal.
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) break mainfunc main.main
Breakpoint mainfunc set at 0x4b7f52 for main.main() ./main.go:77
(dlv) clear mainfunc
Breakpoint mainfunc cleared at 0x4b7f52 for main.main() ./main.go:77
(dlv) break main.main
Breakpoint 3 set at 0x4b7f52 for main.main() ./main.go:77
(dlv) clear 3
Breakpoint 3 cleared at 0x4b7f52 for main.main() ./main.go:77
(dlv) clearall
(dlv) break /^main.*/
Breakpoint 4 set at 0x4b7512 for main.produceValues() ./main.go:23
Breakpoint 5 set at 0x4b7886 for main.produceValues.func1() ./main.go:25
Breakpoint 6 set at 0x4b78f2 for main.consumeValues() ./main.go:53
Breakpoint 7 set at 0x4b7e26 for main.consumeValues.func1() ./main.go:55
Breakpoint 8 set at 0x4b7e8a for main.main.func1() ./main.go:95
Breakpoint 9 set at 0x4b7f52 for main.main() ./main.go:77
Breakpoint 10 set at 0x4b85e6 for main.main.func4() ./main.go:115
Breakpoint 11 set at 0x4b8666 for main.main.func3() ./main.go:112
Breakpoint 12 set at 0x4b86e6 for main.main.func2() ./main.go:95
(dlv) clearall
Breakpoint 4 cleared at 0x4b7512 for main.produceValues() ./main.go:23
Breakpoint 5 cleared at 0x4b7886 for main.produceValues.func1() ./main.go:25
Breakpoint 6 cleared at 0x4b78f2 for main.consumeValues() ./main.go:53
Breakpoint 7 cleared at 0x4b7e26 for main.consumeValues.func1() ./main.go:55
Breakpoint 8 cleared at 0x4b7e8a for main.main.func1() ./main.go:95
Breakpoint 9 cleared at 0x4b7f52 for main.main() ./main.go:77
Breakpoint 10 cleared at 0x4b85e6 for main.main.func4() ./main.go:115
Breakpoint 11 cleared at 0x4b8666 for main.main.func3() ./main.go:112
Breakpoint 12 cleared at 0x4b86e6 for main.main.func2() ./main.go:95
(dlv) break m33 main.go:33
Breakpoint m33 set at 0x4b7601 for main.produceValues() ./main.go:33
(dlv) help cond
Set breakpoint condition.

	condition <breakpoint name or id> <boolean expression>.
	condition -hitcount <breakpoint name or id> <operator> <argument>.
	condition -clear <breakpoint name or id>.

Specifies that the breakpoint, tracepoint or watchpoint should break only if the boolean expression is true.

See Documentation/cli/expr.md for a description of supported expressions.

With the -hitcount option a condition on the breakpoint hit count can be set, the following operators are supported

	condition -hitcount bp > n
	condition -hitcount bp >= n
	condition -hitcount bp < n
	condition -hitcount bp <= n
	condition -hitcount bp == n
	condition -hitcount bp != n
	condition -hitcount bp % n

With the -clear option a condtion on the breakpoint can removed.
	
The '% n' form means we should stop at the breakpoint when the hitcount is a multiple of n.

Examples:
	cond 2 i == 10				breakpoint 2 will stop when variable i equals 10
	cond name runtime.curg.goid == 5	breakpoint 'name' will stop only on goroutine 5
	cond -clear 2				the condition on breakpoint 2 will be removed

(dlv) cond -hitcount m33 == 5
(dlv) continue
> [m33] main.produceValues() ./main.go:33 (hits goroutine(10):5 total:5) (PC: 0x4b7601)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) cond -clear m33
(dlv) clear m33
Breakpoint m33 cleared at 0x4b7601 for main.produceValues() ./main.go:33
(dlv) break m33 main.go:33
Breakpoint m33 set at 0x4b7601 for main.produceValues() ./main.go:33
(dlv) help on
Executes a command when a breakpoint is hit.

	on <breakpoint name or id> <command>
	on <breakpoint name or id> -edit
	

Supported commands: print, stack, goroutine, trace and cond. 
To convert a breakpoint into a tracepoint use:
	
	on <breakpoint name or id> trace

The command 'on <bp> cond <cond-arguments>' is equivalent to 'cond <bp> <cond-arguments>'.

The command 'on x -edit' can be used to edit the list of commands executed when the breakpoint is hit.
(dlv) on m33 print id
(dlv) continue
> [m33] main.produceValues() ./main.go:33 (hits goroutine(10):1 total:1) (PC: 0x4b7601)
	id: 2740376916591569721
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) on m33 stack
(dlv) continue
> [m33] main.produceValues() ./main.go:33 (hits goroutine(10):2 total:2) (PC: 0x4b7601)
	id: 6842348953158377901
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) help on
Executes a command when a breakpoint is hit.

	on <breakpoint name or id> <command>
	on <breakpoint name or id> -edit
	

Supported commands: print, stack, goroutine, trace and cond. 
To convert a breakpoint into a tracepoint use:
	
	on <breakpoint name or id> trace

The command 'on <bp> cond <cond-arguments>' is equivalent to 'cond <bp> <cond-arguments>'.

The command 'on x -edit' can be used to edit the list of commands executed when the breakpoint is hit.
(dlv) on m33 -edit
(dlv) on m33 goroutine
(dlv) c
> [m33] main.produceValues() ./main.go:33 (hits goroutine(10):3 total:3) (PC: 0x4b7601)
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4548432111829895923
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) toggle m33
Breakpoint m33 toggled at 0x4b7601 for main.produceValues() ./main.go:33
(dlv) breakpoints
Breakpoint runtime-fatal-throw (enabled) at 0x436340 for runtime.throw() /usr/local/go/src/runtime/panic.go:982 (0)
Breakpoint unrecovered-panic (enabled) at 0x436700 for runtime.fatalpanic() /usr/local/go/src/runtime/panic.go:1065 (0)
	print runtime.curg._panic.arg
Breakpoint m33 (disabled) at 0x4b7601 for main.produceValues() ./main.go:33 (3)
	stack 50
	goroutine
	print id
(dlv) toggle m33
Breakpoint m33 toggled at 0x4b7601 for main.produceValues() ./main.go:33
(dlv) breakpoints
Breakpoint runtime-fatal-throw (enabled) at 0x436340 for runtime.throw() /usr/local/go/src/runtime/panic.go:982 (0)
Breakpoint unrecovered-panic (enabled) at 0x436700 for runtime.fatalpanic() /usr/local/go/src/runtime/panic.go:1065 (0)
	print runtime.curg._panic.arg
Breakpoint m33 (enabled) at 0x4b7601 for main.produceValues() ./main.go:33 (3)
	stack 50
	goroutine
	print id
(dlv) toggle m33
Breakpoint m33 toggled at 0x4b7601 for main.produceValues() ./main.go:33
(dlv) continue
received SIGINT, stopping process (will not forward signal)
> runtime.futex() /usr/local/go/src/runtime/sys_linux_amd64.s:553 (PC: 0x466ea3)
Warning: debugging optimized function
   548:		MOVQ	ts+16(FP), R10
   549:		MOVQ	addr2+24(FP), R8
   550:		MOVL	val3+32(FP), R9
   551:		MOVL	$SYS_futex, AX
   552:		SYSCALL
=> 553:		MOVL	AX, ret+40(FP)
   554:		RET
   555:	
   556:	// int32 clone(int32 flags, void *stk, M *mp, G *gp, void (*fn)(void));
   557:	TEXT runtime·clone(SB),NOSPLIT,$0
   558:		MOVL	flags+0(FP), DI
(dlv) breakpoints
Breakpoint runtime-fatal-throw (enabled) at 0x436340 for runtime.throw() /usr/local/go/src/runtime/panic.go:982 (0)
Breakpoint unrecovered-panic (enabled) at 0x436700 for runtime.fatalpanic() /usr/local/go/src/runtime/panic.go:1065 (0)
	print runtime.curg._panic.arg
Breakpoint m33 (disabled) at 0x4b7601 for main.produceValues() ./main.go:33 (3)
	stack 50
	goroutine
	print id
(dlv) toggle m33
Breakpoint m33 toggled at 0x4b7601 for main.produceValues() ./main.go:33
(dlv) on m33 trace
(dlv) continue
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 342376459156714484
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6704983416423920798
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2177095312906357951
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 9217856616463903772
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5046865088722140163
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8192258187529012279
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 9131465356217396391
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 187704516591184695
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1536965605015697909
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3327541621836704977
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5560609076278380264
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2305258944663902312
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5059676714553639763
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8523573776399848878
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8599569780483654618
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7100316839031869279
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2042358574287811481
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2268897373652545673
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1538327168691339339
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1163740862346026843
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 91288124062352742
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 601345939793565396
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1010218373458977741
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7005324115438908713
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6583580523236527416
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4876264178129913922
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7810141229794275369
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8392635217406736200
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8299681208740305914
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4609089734599418948
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2638897832405764103
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7536200269550972740
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3136058503508036403
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 9087120522589444334
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8062963439688049271
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5009171860788791413
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8597995684846178772
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6545807081503048217
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3770162778656332703
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5873131498401640734
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3700539730949894007
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8396803897164061602
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 9106381973984006790
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8525354735853916620
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8456056801672765448
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6667355051153283477
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7505599440067471432
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4545108703252457684
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 170352456538870046
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2260856825663246287
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2102240331283461766
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6184109276013593730
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7294598216206301323
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1352857433969154607
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1953276383201645797
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1005486431700268949
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4120170176217176926
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6667815544267679411
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8240409182357523445
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 792335616856378590
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2328068779113349237
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5773297907696643228
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1685424242355919891
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 907774949284532579
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 751302867777458493
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3802119889305094598
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6139334173622827470
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4286078774239973775
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5792184396548871900
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7355795456580894357
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 572068432631447366
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3844646369533344092
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3962249417662739595
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5168265641324298303
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3817435902658385069
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6111517813132030944
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3774555702943039201
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 47095941211992558
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2649280250860047005
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7106921091792335135
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1332585449845422642
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3647771153845271591
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1027542754055958604
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7929477131704113439
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5313030679632478666
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7169805911141931961
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7064269395430202993
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1403088389703797997
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8877078262469120848
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8562651293801280500
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 202957957870077760
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8636049609988386497
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7159508457985711628
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 875085249683513463
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 783564695818215884
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1158112640392705657
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3476472271877937846
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1512374594366108220
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5313532627543525682
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3513589203980346582
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5400180742325440618
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5981401958586641861
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1840727187805915761
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7367137511923697139
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 753436097047116301
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5676360290190231731
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1656672610792100525
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8352519747416209047
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4573450017117246862
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5237070174886483381
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1774346023724877445
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8792809756880449249
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3255932821698593253
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2515083874085734196
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5637525110650867584
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 883201290153522579
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5388978888286899186
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3040021138798301161
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7106774622327675005
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4106426063531776070
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6985422146274981785
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4399217366335298544
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2857968460327280402
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6957357539176772936
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5615638004042977865
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2950951258943126287
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3990673600299061827
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2858598690412448466
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4026894119347270111
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2772281657695835163
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7523655646239494183
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4018681461108698076
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7569556877841487776
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2393174095885984275
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1322012229553065885
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 83972768602425288
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3246351233961998591
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7943396279718211624
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 855222169539000589
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3025574836752287659
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4344652084758025344
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8044094005331017974
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 9222606351562267320
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 900450751479578747
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1700321507566507959
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7278839681630522877
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 400229838772376365
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3237039157232128938
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3939947391192610270
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2220089952453841537
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5692407448391682478
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7271257372128579530
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4812975592197214858
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4114474093276143828
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 160453838604970219
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4906149970077013719
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5294160057087964839
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7349293839476547567
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 736763889824486739
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8836593353983052553
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5895837664496920044
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6502775234783661360
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1505269418103826619
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7965160742022148727
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5374666719233833481
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3881996106933676935
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5995617095318619262
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7360723080875290448
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 153696683308310256
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8300780407818162855
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2429689471528457815
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6591346966313089934
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2682068241435331301
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6330279369843624189
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3805821112695410137
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1135423301749106732
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8555057108003330842
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5865895554923173594
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6195576456731090266
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 924449750228108060
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 9164618840853056747
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4380295845291826761
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 867351431998451124
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6527173070892352658
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6214914369842706059
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2291050533737868864
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7751618741459497706
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3727538167317433968
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5257598446011601588
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 930186948059390362
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3472443670270473929
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 9065093900706803794
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 479983241094024895
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2677124400367747048
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2435068158041467646
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2676236809467226637
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4365212938430783670
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3579813279555875792
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1032532047374249126
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5712868128405688318
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6482873585750095416
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2622242940039082689
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 446533164322790083
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8950392850381144225
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8921499109145565991
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8003950019288984036
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6415797333855988990
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 315190274742828968
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5587723080118396351
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 9036321947924863335
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4568684170082302264
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1756976227302853300
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8396447698074304543
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8599197949167483187
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1165836070790200557
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3456275693262101224
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7082380643348871008
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7701482773656030791
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6819511357185859042
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4321744378748780327
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 122081905620369903
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7941434215197382319
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 634933435605570809
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6502157882110232005
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2805904199683973221
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8674201742848731277
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3911265180155372005
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 3526552796135304558
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1826337080994644101
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1328301484937753908
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2776363377853235488
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6782336143409269316
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8926566513833977124
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2854888966169652134
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1722151376978051849
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8778762270527512136
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4258241131026401887
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7542949659898120033
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2881454750368093517
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 605349336438440704
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7419307884090550496
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8263997529764613480
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7903938881339590215
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8368781557560231524
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4649668069883071238
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2472663287872811144
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2662184220770819617
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5326088022318883191
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 503852750358742012
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 933879097474000747
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5638306742724814688
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 1324762414080751798
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 420699321447418700
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8647758154637323508
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7658376161166272261
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 4271926524814414671
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5600862655201547844
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6250010891145886639
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 770662386975832492
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 2040938218805381752
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5356999064861059263
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 6009566395558259159
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 7092706335764506653
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 935189382735892637
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 8995876378922474937
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5609454849719122752
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
> goroutine(10): [m33] main.produceValues()
	Goroutine 10:
		Runtime: ./main.go:33 main.produceValues (0x4b7601)
		User: ./main.go:33 main.produceValues (0x4b7601)
		Go: ./main.go:112 main.main (0x4b84bc)
		Start: ./main.go:23 main.produceValues (0x4b7500)
	id: 5750805317523850508
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
	Stack:
		0  0x00000000004b7601 in main.produceValues
		     at ./main.go:33
		1  0x00000000004b86b5 in main.main.func3
		     at ./main.go:112
		2  0x0000000000464fe1 in runtime.goexit
		     at /usr/local/go/src/runtime/asm_amd64.s:1571
received SIGINT, stopping process (will not forward signal)
> runtime.futex() /usr/local/go/src/runtime/sys_linux_amd64.s:553 (PC: 0x466ea3)
Warning: debugging optimized function
   548:		MOVQ	ts+16(FP), R10
   549:		MOVQ	addr2+24(FP), R8
   550:		MOVL	val3+32(FP), R9
   551:		MOVL	$SYS_futex, AX
   552:		SYSCALL
=> 553:		MOVL	AX, ret+40(FP)
   554:		RET
   555:	
   556:	// int32 clone(int32 flags, void *stk, M *mp, G *gp, void (*fn)(void));
   557:	TEXT runtime·clone(SB),NOSPLIT,$0
   558:		MOVL	flags+0(FP), DI
(dlv) clearall
Tracepoint m33 cleared at 0x4b7601 for main.produceValues() ./main.go:33
(dlv) continue main.go:62
(dlv) lsit
(dlv) list
> runtime.futex() /usr/local/go/src/runtime/sys_linux_amd64.s:553 (PC: 0x466ea3)
Warning: debugging optimized function
   548:		MOVQ	ts+16(FP), R10
   549:		MOVQ	addr2+24(FP), R8
   550:		MOVL	val3+32(FP), R9
   551:		MOVL	$SYS_futex, AX
   552:		SYSCALL
=> 553:		MOVL	AX, ret+40(FP)
   554:		RET
   555:	
   556:	// int32 clone(int32 flags, void *stk, M *mp, G *gp, void (*fn)(void));
   557:	TEXT runtime·clone(SB),NOSPLIT,$0
   558:		MOVL	flags+0(FP), DI
(dlv) continue main.go:64
Breakpoint 15 set at 0x4b79d9 for main.consumeValues() ./main.go:64
> main.consumeValues() ./main.go:64 (hits goroutine(11):1 total:1) (PC: 0x4b79d9)
    59:		for {
    60:			select {
    61:			case <-ctx.Done():
    62:				// If the context has been cancelled, return.
    63:				return
=>  64:			case pkt := <-ch:
    65:				// Store data in our buffer.
    66:				buf = append(buf, pkt)
    67:	
    68:				fmt.Println("got value:", binary.LittleEndian.Uint64(pkt.val))
    69:	
(dlv) continue main.go:33
Breakpoint 16 set at 0x4b7601 for main.produceValues() ./main.go:33
> main.produceValues() ./main.go:33 (hits goroutine(10):1 total:1) (PC: 0x4b7601)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) watch -rw id
(dlv) watch -w
(dlv) watch -w id
Watchpoint id set at 0xc0000b0e30
(dlv) print &id
(*int)(0xc0000b0e30)
(dlv) continue
> watchpoint on [id] main.produceValues() ./main.go:49 (hits goroutine(10):1 total:1) (PC: 0x4b77b6)
    44:			}
    45:	
    46:			id -= 16
    47:	
    48:			// Sleep 0.5 seconds.
=>  49:			time.Sleep(10 * time.Millisecond)
    50:		}
    51:	}
    52:	
    53:	func consumeValues(ctx context.Context, wg *sync.WaitGroup, ch <-chan packet) {
    54:		// Let WaitGroup know we're finished executing.
(dlv) funcs
_rt0_amd64
_rt0_amd64_linux
aeshashbody
bytes.Contains
bytes.Equal
bytes.Index
bytes.IndexByte
bytes.init
callRet
cmpbody
context.(*cancelCtx).Done
context.(*cancelCtx).Done.func1
context.(*cancelCtx).Err
context.(*cancelCtx).String
context.(*cancelCtx).Value
context.(*cancelCtx).cancel
context.(*emptyCtx).Done
context.(*emptyCtx).Err
context.(*emptyCtx).String
context.(*emptyCtx).Value
context.Background
context.WithCancel
context.WithCancel.func1
context.contextName
context.init
context.init.0
context.newCancelCtx
context.parentCancelCtx
context.propagateCancel
context.propagateCancel.func1
context.removeChild
context.value
debugCall1024
debugCall128
debugCall16384
debugCall2048
debugCall256
debugCall32
debugCall32768
debugCall4096
debugCall512
debugCall64
debugCall65536
debugCall8192
encoding/binary.init
encoding/binary.littleEndian.Uint64
errors.(*errorString).Error
errors.New
errors.init
fmt.(*buffer).write
fmt.(*buffer).writeByte
fmt.(*buffer).writeRune
fmt.(*buffer).writeString
fmt.(*fmt).clearflags
fmt.(*fmt).fmtBoolean
fmt.(*fmt).fmtBs
fmt.(*fmt).fmtBx
fmt.(*fmt).fmtC
fmt.(*fmt).fmtFloat
fmt.(*fmt).fmtInteger
fmt.(*fmt).fmtQ
fmt.(*fmt).fmtQc
fmt.(*fmt).fmtS
fmt.(*fmt).fmtSbx
fmt.(*fmt).fmtSx
fmt.(*fmt).fmtUnicode
fmt.(*fmt).init
fmt.(*fmt).pad
fmt.(*fmt).padString
fmt.(*fmt).truncate
fmt.(*fmt).truncateString
fmt.(*fmt).writePadding
fmt.(*pp).Write
fmt.(*pp).argNumber
fmt.(*pp).badArgNum
fmt.(*pp).badVerb
fmt.(*pp).catchPanic
fmt.(*pp).doPrintf
fmt.(*pp).doPrintln
fmt.(*pp).fmt0x64
fmt.(*pp).fmtBool
fmt.(*pp).fmtBytes
fmt.(*pp).fmtComplex
fmt.(*pp).fmtFloat
fmt.(*pp).fmtInteger
fmt.(*pp).fmtPointer
fmt.(*pp).fmtString
fmt.(*pp).free
fmt.(*pp).handleMethods
fmt.(*pp).handleMethods.func1
fmt.(*pp).handleMethods.func2
fmt.(*pp).handleMethods.func3
fmt.(*pp).handleMethods.func4
fmt.(*pp).missingArg
fmt.(*pp).printArg
fmt.(*pp).printValue
fmt.(*pp).unknownType
fmt.Fprintf
fmt.Fprintln
fmt.Printf
fmt.Println
fmt.getField
fmt.glob..func1
fmt.init
fmt.intFromArg
fmt.newPrinter
fmt.parseArgNumber
fmt.parsenum
fmt.tooLarge
gogo
gosave_systemstack_switch
indexbody
indexbytebody
internal/abi.(*IntArgRegBitmap).Get
internal/abi.(*IntArgRegBitmap).Set
internal/abi.(*RegArgs).IntRegArgAddr
internal/bytealg.Cutover
internal/bytealg.Equal
internal/bytealg.HashStrBytes
internal/bytealg.Index
internal/bytealg.IndexByte
internal/bytealg.IndexByteString
internal/bytealg.IndexRabinKarpBytes
internal/bytealg.init.0
internal/cpu.Initialize
internal/cpu.cpuid
internal/cpu.doinit
internal/cpu.indexByte
internal/cpu.isSet
internal/cpu.processOptions
internal/cpu.xgetbv
internal/fmtsort.(*SortedMap).Len
internal/fmtsort.(*SortedMap).Less
internal/fmtsort.(*SortedMap).Swap
internal/fmtsort.Sort
internal/fmtsort.compare
internal/fmtsort.floatCompare
internal/fmtsort.isNaN
internal/fmtsort.nilCompare
internal/itoa.Itoa
internal/itoa.Uitoa
internal/oserror.init
internal/poll.(*DeadlineExceededError).Error
internal/poll.(*FD).Close
internal/poll.(*FD).Init
internal/poll.(*FD).Read
internal/poll.(*FD).Read.func1
internal/poll.(*FD).Write
internal/poll.(*FD).Write.func1
internal/poll.(*FD).decref
internal/poll.(*FD).destroy
internal/poll.(*FD).eofError
internal/poll.(*FD).readLock
internal/poll.(*FD).readUnlock
internal/poll.(*FD).writeLock
internal/poll.(*FD).writeUnlock
internal/poll.(*errNetClosing).Error
internal/poll.(*fdMutex).decref
internal/poll.(*fdMutex).increfAndClose
internal/poll.(*fdMutex).rwlock
internal/poll.(*fdMutex).rwunlock
internal/poll.(*pollDesc).close
internal/poll.(*pollDesc).evict
internal/poll.(*pollDesc).init
internal/poll.(*pollDesc).pollable
internal/poll.(*pollDesc).prepare
internal/poll.(*pollDesc).prepareRead
internal/poll.(*pollDesc).prepareWrite
internal/poll.(*pollDesc).wait
internal/poll.(*pollDesc).waitRead
internal/poll.(*pollDesc).waitWrite
internal/poll.convertErr
internal/poll.errClosing
internal/poll.errNetClosing.Error
internal/poll.errnoErr
internal/poll.ignoringEINTRIO
internal/poll.init
internal/poll.runtime_Semacquire
internal/poll.runtime_Semrelease
internal/poll.runtime_pollClose
internal/poll.runtime_pollOpen
internal/poll.runtime_pollReset
internal/poll.runtime_pollServerInit
internal/poll.runtime_pollUnblock
internal/poll.runtime_pollWait
internal/race.Enable
internal/reflectlite.(*Kind).String
internal/reflectlite.(*rtype).Elem
internal/reflectlite.(*rtype).Kind
internal/reflectlite.(*rtype).Len
internal/reflectlite.(*rtype).String
internal/reflectlite.(*rtype).nameOff
internal/reflectlite.Kind.String
internal/reflectlite.TypeOf
internal/reflectlite.add
internal/reflectlite.name.data
internal/reflectlite.name.name
internal/reflectlite.name.readVarint
internal/reflectlite.resolveNameOff
internal/reflectlite.toType
internal/syscall/unix.IsNonblock
internal/testlog.PanicOnExit0
internal/testlog.PanicOnExit0.func1
io.(*discard).Write
io.ReadAll
io.discard.Write
io.init
io/fs.(*PathError).Error
io/fs.errClosed
io/fs.errExist
io/fs.errInvalid
io/fs.errNotExist
io/fs.errPermission
io/fs.init
io/ioutil.ReadAll
io/ioutil.init
main.consumeValues
main.consumeValues.func1
main.main
main.main.func1
main.main.func2
main.main.func3
main.main.func4
main.produceValues
main.produceValues.func1
math.Float32bits
math.Float64bits
math.init
math/bits.TrailingZeros
math/rand.(*Rand).Int
math/rand.(*Rand).Int63
math/rand.(*Rand).Read
math/rand.(*lockedSource).Int63
math/rand.(*lockedSource).read
math/rand.(*rngSource).Int63
math/rand.(*rngSource).Seed
math/rand.(*rngSource).Uint64
math/rand.Int
math/rand.New
math/rand.NewSource
math/rand.Read
math/rand.init
math/rand.read
math/rand.seedrand
memeqbody
os.(*File).Read
os.(*File).Write
os.(*File).checkValid
os.(*File).read
os.(*File).wrapErr
os.(*File).write
os.(*dirInfo).close
os.(*file).close
os.Exit
os.NewFile
os.epipecheck
os.errDeadlineExceeded
os.errNoDeadline
os.glob..func1
os.init
os.init.0
os.newFile
os.runtime_args
os.runtime_beforeExit
os.sigpipe
os/signal.(*handler).set
os/signal.(*handler).want
os/signal.Notify
os/signal.Notify.func1
os/signal.Notify.func1.1
os/signal.Notify.func2
os/signal.enableSignal
os/signal.init.0
os/signal.loop
os/signal.process
os/signal.process.func1
os/signal.signal_enable
os/signal.signal_ignored
os/signal.signal_recv
os/signal.signum
path.init
reflect.(*ChanDir).String
reflect.(*Kind).String
reflect.(*MapIter).Key
reflect.(*MapIter).Next
reflect.(*MapIter).Value
reflect.(*Value).Kind
reflect.(*Value).Len
reflect.(*Value).String
reflect.(*ValueError).Error
reflect.(*abiSeq).addArg
reflect.(*abiSeq).addRcvr
reflect.(*abiSeq).assignFloatN
reflect.(*abiSeq).assignIntN
reflect.(*abiSeq).regAssign
reflect.(*abiSeq).stackAssign
reflect.(*abiSeq).stepsForValue
reflect.(*bitVector).append
reflect.(*funcType).Elem
reflect.(*funcType).Field
reflect.(*funcType).Kind
reflect.(*funcType).Len
reflect.(*funcType).String
reflect.(*funcType).in
reflect.(*funcType).out
reflect.(*hiter).initialized
reflect.(*interfaceType).NumMethod
reflect.(*rtype).Elem
reflect.(*rtype).Field
reflect.(*rtype).Kind
reflect.(*rtype).Len
reflect.(*rtype).NumMethod
reflect.(*rtype).Size
reflect.(*rtype).String
reflect.(*rtype).common
reflect.(*rtype).exportedMethods
reflect.(*rtype).nameOff
reflect.(*rtype).pointers
reflect.(*rtype).textOff
reflect.(*rtype).typeOff
reflect.(*rtype).uncommon
reflect.(*structField).embedded
reflect.(*structField).offset
reflect.(*structType).Field
reflect.(*uncommonType).exportedMethods
reflect.ChanDir.String
reflect.Kind.String
reflect.TypeOf
reflect.Value.Bool
reflect.Value.Bytes
reflect.Value.CanAddr
reflect.Value.CanInterface
reflect.Value.Complex
reflect.Value.Elem
reflect.Value.Field
reflect.Value.Float
reflect.Value.Index
reflect.Value.Int
reflect.Value.Interface
reflect.Value.IsNil
reflect.Value.IsValid
reflect.Value.Kind
reflect.Value.Len
reflect.Value.MapRange
reflect.Value.NumField
reflect.Value.NumMethod
reflect.Value.Pointer
reflect.Value.Slice
reflect.Value.String
reflect.Value.Type
reflect.Value.Uint
reflect.Value.pointer
reflect.ValueOf
reflect.add
reflect.addReflectOff
reflect.addTypeBits
reflect.align
reflect.archFloat32FromReg
reflect.archFloat32ToReg
reflect.arrayAt
reflect.callMethod
reflect.callMethod
reflect.chanlen
reflect.copyVal
reflect.escapes
reflect.flag.kind
reflect.flag.mustBe
reflect.flag.ro
reflect.floatFromReg
reflect.floatToReg
reflect.funcLayout
reflect.funcLayout.func1
reflect.ifaceIndir
reflect.init
reflect.intFromReg
reflect.intToReg
reflect.makeMethodValue
reflect.mapiterelem
reflect.mapiterinit
reflect.mapiterkey
reflect.mapiternext
reflect.maplen
reflect.memmove
reflect.methodName
reflect.methodReceiver
reflect.methodValueCall
reflect.methodValueCallCodePtr
reflect.moveMakeFuncArgPtrs
reflect.moveMakeFuncArgPtrs
reflect.name.data
reflect.name.hasTag
reflect.name.isExported
reflect.name.name
reflect.name.readVarint
reflect.name.tag
reflect.newAbiDesc
reflect.newName
reflect.packEface
reflect.resolveNameOff
reflect.resolveReflectName
reflect.resolveTextOff
reflect.resolveTypeOff
reflect.storeRcvr
reflect.toType
reflect.typedmemclr
reflect.typedmemmove
reflect.unpackEface
reflect.unsafe_New
reflect.valueInterface
reflect.verifyNotInHeapPtr
reflect.writeVarint
runtime.(*Frames).Next
runtime.(*Func).Entry
runtime.(*Func).Name
runtime.(*Func).funcInfo
runtime.(*Func).raw
runtime.(*TypeAssertionError).Error
runtime.(*_func).funcInfo
runtime.(*_func).isInlined
runtime.(*_type).nameOff
runtime.(*_type).pkgpath
runtime.(*_type).string
runtime.(*_type).textOff
runtime.(*_type).typeOff
runtime.(*_type).uncommon
runtime.(*activeSweep).begin
runtime.(*activeSweep).end
runtime.(*activeSweep).isDone
runtime.(*activeSweep).markDrained
runtime.(*activeSweep).reset
runtime.(*activeSweep).sweepers
runtime.(*addrRanges).add
runtime.(*addrRanges).cloneInto
runtime.(*addrRanges).findAddrGreaterEqual
runtime.(*addrRanges).findSucc
runtime.(*addrRanges).init
runtime.(*addrRanges).removeGreaterEqual
runtime.(*addrRanges).removeLast
runtime.(*bmap).keys
runtime.(*bmap).overflow
runtime.(*bmap).setoverflow
runtime.(*boundsError).Error
runtime.(*bucket).bp
runtime.(*bucket).mp
runtime.(*bucket).stk
runtime.(*consistentHeapStats).acquire
runtime.(*consistentHeapStats).release
runtime.(*cpuProfile).add
runtime.(*cpuProfile).addExtra
runtime.(*cpuProfile).addNonGo
runtime.(*errorAddressString).Error
runtime.(*errorString).Error
runtime.(*fixalloc).alloc
runtime.(*fixalloc).free
runtime.(*fixalloc).init
runtime.(*functype).dotdotdot
runtime.(*functype).in
runtime.(*functype).out
runtime.(*gList).empty
runtime.(*gList).pop
runtime.(*gList).push
runtime.(*gList).pushAll
runtime.(*gQueue).empty
runtime.(*gQueue).pop
runtime.(*gQueue).popList
runtime.(*gQueue).push
runtime.(*gQueue).pushBack
runtime.(*gQueue).pushBackAll
runtime.(*gcBits).bitp
runtime.(*gcBits).bytep
runtime.(*gcBitsArena).tryAlloc
runtime.(*gcControllerState).addGlobals
runtime.(*gcControllerState).addScannableStack
runtime.(*gcControllerState).commit
runtime.(*gcControllerState).endCycle
runtime.(*gcControllerState).enlistWorker
runtime.(*gcControllerState).findRunnableGCWorker
runtime.(*gcControllerState).findRunnableGCWorker.func1
runtime.(*gcControllerState).init
runtime.(*gcControllerState).logWorkTime
runtime.(*gcControllerState).resetLive
runtime.(*gcControllerState).revise
runtime.(*gcControllerState).setGCPercent
runtime.(*gcControllerState).startCycle
runtime.(*gcControllerState).update
runtime.(*gcWork).balance
runtime.(*gcWork).dispose
runtime.(*gcWork).empty
runtime.(*gcWork).init
runtime.(*gcWork).put
runtime.(*gcWork).putBatch
runtime.(*gcWork).putFast
runtime.(*gcWork).tryGet
runtime.(*gcWork).tryGetFast
runtime.(*guintptr).cas
runtime.(*guintptr).set
runtime.(*hchan).raceaddr
runtime.(*hchan).sortkey
runtime.(*headTailIndex).cas
runtime.(*headTailIndex).incTail
runtime.(*headTailIndex).load
runtime.(*headTailIndex).reset
runtime.(*hmap).createOverflow
runtime.(*hmap).growing
runtime.(*hmap).incrnoverflow
runtime.(*hmap).newoverflow
runtime.(*hmap).noldbuckets
runtime.(*hmap).oldbucketmask
runtime.(*hmap).sameSizeGrow
runtime.(*itab).init
runtime.(*itabTableType).add
runtime.(*itabTableType).add-fm
runtime.(*itabTableType).find
runtime.(*lfstack).empty
runtime.(*lfstack).pop
runtime.(*lfstack).push
runtime.(*linearAlloc).alloc
runtime.(*lockRank).String
runtime.(*mSpanList).init
runtime.(*mSpanList).insert
runtime.(*mSpanList).isEmpty
runtime.(*mSpanList).remove
runtime.(*mSpanList).takeAll
runtime.(*mSpanStateBox).get
runtime.(*mSpanStateBox).set
runtime.(*maptype).hashMightPanic
runtime.(*maptype).indirectelem
runtime.(*maptype).indirectkey
runtime.(*maptype).needkeyupdate
runtime.(*maptype).reflexivekey
runtime.(*markBits).advance
runtime.(*mcache).allocLarge
runtime.(*mcache).nextFree
runtime.(*mcache).prepareForSweep
runtime.(*mcache).refill
runtime.(*mcache).releaseAll
runtime.(*mcentral).cacheSpan
runtime.(*mcentral).fullSwept
runtime.(*mcentral).fullUnswept
runtime.(*mcentral).grow
runtime.(*mcentral).init
runtime.(*mcentral).partialSwept
runtime.(*mcentral).partialUnswept
runtime.(*mcentral).uncacheSpan
runtime.(*memRecordCycle).add
runtime.(*mheap).alloc
runtime.(*mheap).alloc.func1
runtime.(*mheap).allocMSpanLocked
runtime.(*mheap).allocManual
runtime.(*mheap).allocNeedsZero
runtime.(*mheap).allocSpan
runtime.(*mheap).freeMSpanLocked
runtime.(*mheap).freeManual
runtime.(*mheap).freeSpan
runtime.(*mheap).freeSpan.func1
runtime.(*mheap).freeSpanLocked
runtime.(*mheap).grow
runtime.(*mheap).init
runtime.(*mheap).nextSpanForSweep
runtime.(*mheap).reclaim
runtime.(*mheap).reclaimChunk
runtime.(*mheap).setSpans
runtime.(*mheap).sysAlloc
runtime.(*mheap).tryAllocMSpan
runtime.(*moduledata).textAddr
runtime.(*moduledata).textOff
runtime.(*mspan).allocBitsForIndex
runtime.(*mspan).base
runtime.(*mspan).countAlloc
runtime.(*mspan).divideByElemSize
runtime.(*mspan).ensureSwept
runtime.(*mspan).init
runtime.(*mspan).isFree
runtime.(*mspan).markBitsForBase
runtime.(*mspan).markBitsForIndex
runtime.(*mspan).nextFreeIndex
runtime.(*mspan).objIndex
runtime.(*mspan).refillAllocCache
runtime.(*mspan).reportZombies
runtime.(*muintptr).set
runtime.(*notInHeap).add
runtime.(*p).destroy
runtime.(*p).destroy.func1
runtime.(*p).init
runtime.(*pageAlloc).alloc
runtime.(*pageAlloc).allocRange
runtime.(*pageAlloc).allocToCache
runtime.(*pageAlloc).chunkOf
runtime.(*pageAlloc).find
runtime.(*pageAlloc).find.func1
runtime.(*pageAlloc).findMappedAddr
runtime.(*pageAlloc).free
runtime.(*pageAlloc).grow
runtime.(*pageAlloc).init
runtime.(*pageAlloc).scavenge
runtime.(*pageAlloc).scavenge.func1
runtime.(*pageAlloc).scavengeOne
runtime.(*pageAlloc).scavengeOne.func1
runtime.(*pageAlloc).scavengeOneFast
runtime.(*pageAlloc).scavengeRangeLocked
runtime.(*pageAlloc).scavengeReserve
runtime.(*pageAlloc).scavengeStartGen
runtime.(*pageAlloc).scavengeUnreserve
runtime.(*pageAlloc).sysGrow
runtime.(*pageAlloc).sysGrow.func1
runtime.(*pageAlloc).sysGrow.func2
runtime.(*pageAlloc).sysGrow.func3
runtime.(*pageAlloc).sysInit
runtime.(*pageAlloc).update
runtime.(*pageBits).block64
runtime.(*pageBits).clear
runtime.(*pageBits).clearAll
runtime.(*pageBits).clearBlock64
runtime.(*pageBits).clearRange
runtime.(*pageBits).popcntRange
runtime.(*pageBits).set
runtime.(*pageBits).setAll
runtime.(*pageBits).setBlock64
runtime.(*pageBits).setRange
runtime.(*pageCache).alloc
runtime.(*pageCache).allocN
runtime.(*pageCache).empty
runtime.(*pageCache).flush
runtime.(*pallocBits).allocAll
runtime.(*pallocBits).allocPages64
runtime.(*pallocBits).allocRange
runtime.(*pallocBits).find
runtime.(*pallocBits).find1
runtime.(*pallocBits).findLargeN
runtime.(*pallocBits).findSmallN
runtime.(*pallocBits).free
runtime.(*pallocBits).free1
runtime.(*pallocBits).freeAll
runtime.(*pallocBits).pages64
runtime.(*pallocBits).summarize
runtime.(*pallocData).allocAll
runtime.(*pallocData).allocRange
runtime.(*pallocData).findScavengeCandidate
runtime.(*pallocData).hasScavengeCandidate
runtime.(*piController).next
runtime.(*piController).reset
runtime.(*plainError).Error
runtime.(*pollCache).alloc
runtime.(*pollCache).free
runtime.(*pollDesc).info
runtime.(*pollDesc).publishInfo
runtime.(*pollDesc).setEventErr
runtime.(*profAtomic).cas
runtime.(*profAtomic).load
runtime.(*profBuf).canWriteRecord
runtime.(*profBuf).canWriteTwoRecords
runtime.(*profBuf).hasOverflow
runtime.(*profBuf).incrementOverflow
runtime.(*profBuf).takeOverflow
runtime.(*profBuf).wakeupExtra
runtime.(*profBuf).write
runtime.(*puintptr).set
runtime.(*randomEnum).done
runtime.(*randomEnum).next
runtime.(*randomEnum).position
runtime.(*randomOrder).reset
runtime.(*randomOrder).start
runtime.(*rwmutex).rlock
runtime.(*rwmutex).rlock.func1
runtime.(*rwmutex).runlock
runtime.(*semaRoot).dequeue
runtime.(*semaRoot).queue
runtime.(*semaRoot).rotateLeft
runtime.(*semaRoot).rotateRight
runtime.(*sigctxt).cs
runtime.(*sigctxt).fault
runtime.(*sigctxt).fixsigcode
runtime.(*sigctxt).fs
runtime.(*sigctxt).gs
runtime.(*sigctxt).preparePanic
runtime.(*sigctxt).pushCall
runtime.(*sigctxt).r10
runtime.(*sigctxt).r11
runtime.(*sigctxt).r12
runtime.(*sigctxt).r13
runtime.(*sigctxt).r14
runtime.(*sigctxt).r15
runtime.(*sigctxt).r8
runtime.(*sigctxt).r9
runtime.(*sigctxt).rax
runtime.(*sigctxt).rbp
runtime.(*sigctxt).rbx
runtime.(*sigctxt).rcx
runtime.(*sigctxt).rdi
runtime.(*sigctxt).rdx
runtime.(*sigctxt).regs
runtime.(*sigctxt).rflags
runtime.(*sigctxt).rip
runtime.(*sigctxt).rsi
runtime.(*sigctxt).rsp
runtime.(*sigctxt).set_rip
runtime.(*sigctxt).set_rsp
runtime.(*sigctxt).sigaddr
runtime.(*sigctxt).sigcode
runtime.(*sigctxt).siglr
runtime.(*sigctxt).sigpc
runtime.(*sigctxt).sigsp
runtime.(*spanSet).pop
runtime.(*spanSet).push
runtime.(*spanSet).reset
runtime.(*spanSetBlockAlloc).alloc
runtime.(*spanSetBlockAlloc).free
runtime.(*specialsIter).next
runtime.(*specialsIter).unlinkAndNext
runtime.(*specialsIter).valid
runtime.(*stackObject).setRecord
runtime.(*stackObjectRecord).gcdata
runtime.(*stackObjectRecord).ptrdata
runtime.(*stackObjectRecord).useGCProg
runtime.(*stackScanState).addObject
runtime.(*stackScanState).buildIndex
runtime.(*stackScanState).findObject
runtime.(*stackScanState).getPtr
runtime.(*stackScanState).putPtr
runtime.(*structfield).offset
runtime.(*sweepClass).clear
runtime.(*sweepClass).load
runtime.(*sweepClass).update
runtime.(*sweepLocked).sweep
runtime.(*sweepLocker).tryAcquire
runtime.(*sysMemStat).add
runtime.(*sysMemStat).load
runtime.(*timeHistogram).record
runtime.(*timespec).setNsec
runtime.(*traceAlloc).alloc
runtime.(*traceAllocBlockPtr).set
runtime.(*traceBuf).byte
runtime.(*traceBuf).varint
runtime.(*traceBufPtr).set
runtime.(*traceStack).stack
runtime.(*traceStackTable).find
runtime.(*traceStackTable).newStack
runtime.(*traceStackTable).put
runtime.(*waitReason).String
runtime.(*waitq).dequeue
runtime.(*waitq).dequeueSudoG
runtime.(*waitq).enqueue
runtime.(*wbBuf).discard
runtime.(*wbBuf).putFast
runtime.(*wbBuf).reset
runtime.(*workbuf).checkempty
runtime.(*workbuf).checknonempty
runtime.Caller
runtime.CallersFrames
runtime.FuncForPC
runtime.GOMAXPROCS
runtime.GOROOT
runtime.Gosched
runtime.LockOSThread
runtime.SetFinalizer
runtime.SetFinalizer.func1
runtime.SetFinalizer.func2
runtime.UnlockOSThread
runtime._ELF_ST_BIND
runtime._ELF_ST_TYPE
runtime._ExternalCode
runtime._GC
runtime._LostExternalCode
runtime._LostSIGPROFDuringAtomic64
runtime._System
runtime._VDSO
runtime.abort
runtime.acquireLockRank
runtime.acquireSudog
runtime.acquirem
runtime.acquirep
runtime.activeModules
runtime.add
runtime.add1
runtime.addAdjustedTimers
runtime.addOneOpenDeferFrame
runtime.addOneOpenDeferFrame.func1
runtime.addOneOpenDeferFrame.func1.1
runtime.addb
runtime.addfinalizer
runtime.addrRange.contains
runtime.addrRange.removeGreaterEqual
runtime.addrRange.size
runtime.addrRange.subtract
runtime.addrsToSummaryRange
runtime.addspecial
runtime.adjustSignalStack
runtime.adjustctxt
runtime.adjustdefers
runtime.adjustframe
runtime.adjustpanics
runtime.adjustpointer
runtime.adjustpointers
runtime.adjustsudogs
runtime.adjusttimers
runtime.advanceEvacuationMark
runtime.alginit
runtime.alignDown
runtime.alignUp
runtime.allGsSnapshot
runtime.allgadd
runtime.allocm
runtime.allocm.func1
runtime.allocmcache
runtime.allocmcache.func1
runtime.appendIntStr
runtime.archauxv
runtime.arenaIdx.l1
runtime.arenaIdx.l2
runtime.arenaIndex
runtime.args
runtime.args
runtime.argv_index
runtime.asmcgocall
runtime.asmcgocall
runtime.asminit
runtime.assertE2I
runtime.assertE2I2
runtime.assertI2I2
runtime.assertLockHeld
runtime.assertWorldStopped
runtime.assertWorldStoppedOrLockHeld
runtime.asyncPreempt
runtime.asyncPreempt2
runtime.asyncPreempt2
runtime.atoi
runtime.atoi32
runtime.atomicAllG
runtime.atomicAllGIndex
runtime.atomicstorep
runtime.atomicwb
runtime.badPointer
runtime.badTimer
runtime.badctxt
runtime.badmcall
runtime.badmcall
runtime.badmcall2
runtime.badmcall2
runtime.badmorestackg0
runtime.badmorestackg0
runtime.badmorestackgsignal
runtime.badmorestackgsignal
runtime.badreflectcall
runtime.badreflectcall
runtime.badsignal
runtime.badsystemstack
runtime.badsystemstack
runtime.badunlockosthread
runtime.beforeIdle
runtime.bgscavenge
runtime.bgscavenge.func1
runtime.bgsweep
runtime.binarySearchTree
runtime.blockAlignSummaryRange
runtime.blockableSig
runtime.blockevent
runtime.blocksampled
runtime.bool2int
runtime.boundsError.Error
runtime.bucketEvacuated
runtime.bucketMask
runtime.bucketShift
runtime.bulkBarrierBitmap
runtime.bulkBarrierPreWrite
runtime.bulkBarrierPreWriteSrcOnly
runtime.bytes
runtime.c128equal
runtime.c128hash
runtime.c64equal
runtime.c64hash
runtime.call1024
runtime.call1048576
runtime.call1073741824
runtime.call128
runtime.call131072
runtime.call134217728
runtime.call16
runtime.call16384
runtime.call16777216
runtime.call2048
runtime.call2097152
runtime.call256
runtime.call262144
runtime.call268435456
runtime.call32
runtime.call32768
runtime.call33554432
runtime.call4096
runtime.call4194304
runtime.call512
runtime.call524288
runtime.call536870912
runtime.call64
runtime.call65536
runtime.call67108864
runtime.call8192
runtime.call8388608
runtime.callCgoMmap
runtime.callCgoMunmap
runtime.callCgoSigaction
runtime.callCgoSymbolizer
runtime.callers
runtime.callers.func1
runtime.canPreemptM
runtime.canpanic
runtime.cansemacquire
runtime.casGFromPreempted
runtime.casGToPreemptScan
runtime.casfrom_Gscanstatus
runtime.casgstatus
runtime.casgstatus.func1
runtime.castogscanstatus
runtime.cfuncname
runtime.cfuncnameFromNameoff
runtime.cgoCheckBits
runtime.cgoCheckMemmove
runtime.cgoCheckSliceCopy
runtime.cgoCheckTypedBlock
runtime.cgoCheckTypedBlock.func1
runtime.cgoCheckUsingType
runtime.cgoCheckWriteBarrier
runtime.cgoCheckWriteBarrier.func1
runtime.cgoContextPCs
runtime.cgoInRange
runtime.cgoIsGoPointer
runtime.cgoSigtramp
runtime.cgocall
runtime.chanbuf
runtime.chanparkcommit
runtime.chanrecv
runtime.chanrecv.func1
runtime.chanrecv1
runtime.chansend
runtime.chansend.func1
runtime.chansend1
runtime.check
runtime.check
runtime.checkASM
runtime.checkIdleGCNoP
runtime.checkRunqsNoP
runtime.checkTimeouts
runtime.checkTimers
runtime.checkTimersNoP
runtime.checkdead
runtime.checkdead.func1
runtime.checkmcount
runtime.chunkBase
runtime.chunkIdx.l1
runtime.chunkIdx.l2
runtime.chunkIndex
runtime.chunkPageIndex
runtime.clearDeletedTimers
runtime.clearpools
runtime.clobberfree
runtime.clone
runtime.closechan
runtime.closefd
runtime.closeonexec
runtime.cmpstring
runtime.concatstring2
runtime.concatstring3
runtime.concatstring4
runtime.concatstring5
runtime.concatstrings
runtime.convT
runtime.convT64
runtime.convTnoptr
runtime.convTslice
runtime.convTstring
runtime.copystack
runtime.countSub
runtime.cpuinit
runtime.cputicks
runtime.crash
runtime.createfing
runtime.debugCallCheck
runtime.debugCallCheck
runtime.debugCallCheck.func1
runtime.debugCallPanicked
runtime.debugCallV2
runtime.debugCallWrap
runtime.debugCallWrap
runtime.debugCallWrap.func1
runtime.debugCallWrap.func2
runtime.debugCallWrap1
runtime.debugCallWrap1.func1
runtime.debugCallWrap2
runtime.debugCallWrap2.func1
runtime.decoderune
runtime.deductSweepCredit
runtime.defaultMemProfileRate
runtime.deferCallSave
runtime.deferprocStack
runtime.deferreturn
runtime.deltimer
runtime.dematerializeGCProg
runtime.dieFromSignal
runtime.divRoundUp
runtime.doInit
runtime.doSigPreempt
runtime.doaddtimer
runtime.dodeltimer
runtime.dodeltimer0
runtime.dolockOSThread
runtime.dopanic_m
runtime.dounlockOSThread
runtime.dropg
runtime.dropm
runtime.duffcopy
runtime.duffzero
runtime.dumpgstatus
runtime.dumpregs
runtime.efaceOf
runtime.efaceeq
runtime.elideWrapperCalling
runtime.empty
runtime.encoderune
runtime.endCheckmarks
runtime.ensureSigM
runtime.ensureSigM.func1
runtime.entersyscall
runtime.entersyscall
runtime.entersyscall_gcwait
runtime.entersyscall_sysmon
runtime.entersyscallblock
runtime.entersyscallblock.func1
runtime.entersyscallblock.func2
runtime.entersyscallblock_handoff
runtime.envKeyEqual
runtime.environ
runtime.epollcreate
runtime.epollcreate1
runtime.epollctl
runtime.epollwait
runtime.eqslice
runtime.errorAddressString.Error
runtime.errorString.Error
runtime.evacuate
runtime.evacuate_fast32
runtime.evacuate_fast64
runtime.evacuate_faststr
runtime.evacuated
runtime.execute
runtime.exit
runtime.exitThread
runtime.exitsyscall
runtime.exitsyscall
runtime.exitsyscall0
runtime.exitsyscallfast
runtime.exitsyscallfast.func1
runtime.exitsyscallfast_pidle
runtime.exitsyscallfast_reacquired
runtime.exitsyscallfast_reacquired.func1
runtime.expandCgoFrames
runtime.extendRandom
runtime.f32equal
runtime.f32hash
runtime.f64equal
runtime.f64hash
runtime.fastexprand
runtime.fastlog2
runtime.fastrand
runtime.fastrandinit
runtime.fastrandn
runtime.fatalpanic
runtime.fatalpanic.func1
runtime.fatalpanic.func2
runtime.fatalthrow
runtime.fatalthrow.func1
runtime.fillAligned
runtime.fillAligned.func1
runtime.findBitRange64
runtime.findObject
runtime.findfunc
runtime.findmoduledatap
runtime.findnull
runtime.findrunnable
runtime.findsghi
runtime.finishsweep_m
runtime.float64bits
runtime.float64frombits
runtime.fmtNSAsMS
runtime.forEachG
runtime.forEachGRace
runtime.forEachP
runtime.forcegchelper
runtime.freeSomeWbufs
runtime.freeSomeWbufs.func1
runtime.freeSpecial
runtime.freeStackSpans
runtime.freedefer
runtime.freedeferfn
runtime.freedeferpanic
runtime.freemcache
runtime.freemcache.func1
runtime.freezetheworld
runtime.full
runtime.funcInfo._Func
runtime.funcInfo.entry
runtime.funcInfo.valid
runtime.funcMaxSPDelta
runtime.funcdata
runtime.funcfile
runtime.funcline
runtime.funcline1
runtime.funcname
runtime.funcnameFromNameoff
runtime.funcpkgpath
runtime.funcspdelta
runtime.futex
runtime.futexsleep
runtime.futexwakeup
runtime.futexwakeup.func1
runtime.gcAssistAlloc
runtime.gcAssistAlloc.func1
runtime.gcAssistAlloc1
runtime.gcBgMarkPrepare
runtime.gcBgMarkStartWorkers
runtime.gcBgMarkWorker
runtime.gcBgMarkWorker.func1
runtime.gcBgMarkWorker.func2
runtime.gcDrain
runtime.gcDrainN
runtime.gcDumpObject
runtime.gcFlushBgCredit
runtime.gcMark
runtime.gcMarkDone
runtime.gcMarkDone.func1
runtime.gcMarkDone.func1.1
runtime.gcMarkDone.func2
runtime.gcMarkDone.func3
runtime.gcMarkRootCheck
runtime.gcMarkRootCheck.func1
runtime.gcMarkRootPrepare
runtime.gcMarkRootPrepare.func1
runtime.gcMarkTermination
runtime.gcMarkTermination.func1
runtime.gcMarkTermination.func2
runtime.gcMarkTermination.func3
runtime.gcMarkTermination.func4
runtime.gcMarkTermination.func4.1
runtime.gcMarkTinyAllocs
runtime.gcMarkWorkAvailable
runtime.gcPaceScavenger
runtime.gcPaceSweeper
runtime.gcParkAssist
runtime.gcResetMarkState
runtime.gcResetMarkState.func1
runtime.gcStart
runtime.gcStart.func1
runtime.gcStart.func2
runtime.gcSweep
runtime.gcTrigger.test
runtime.gcWakeAllAssists
runtime.gcWriteBarrier
runtime.gcWriteBarrierBX
runtime.gcWriteBarrierCX
runtime.gcWriteBarrierDX
runtime.gcWriteBarrierR8
runtime.gcWriteBarrierR9
runtime.gcWriteBarrierSI
runtime.gcallers
runtime.gcd
runtime.gcenable
runtime.gcenable.func1
runtime.gcenable.func2
runtime.gcinit
runtime.gclinkptr.ptr
runtime.gcmarknewobject
runtime.gcstopm
runtime.gentraceback
runtime.getArgInfo
runtime.getArgInfoFast
runtime.getHugePageSize
runtime.getLockRank
runtime.getMCache
runtime.getRandomData
runtime.getStackMap
runtime.getargp
runtime.getempty
runtime.getempty.func1
runtime.getitab
runtime.getpid
runtime.getproccount
runtime.getsig
runtime.gettid
runtime.gfget
runtime.gfget.func1
runtime.gfpurge
runtime.gfput
runtime.globrunqget
runtime.globrunqput
runtime.globrunqputbatch
runtime.globrunqputhead
runtime.goPanicIndex
runtime.goPanicIndexU
runtime.goPanicSlice3Acap
runtime.goPanicSlice3Alen
runtime.goPanicSlice3AlenU
runtime.goPanicSlice3B
runtime.goPanicSlice3C
runtime.goPanicSliceAcap
runtime.goPanicSliceAcapU
runtime.goPanicSliceAlen
runtime.goPanicSliceAlenU
runtime.goPanicSliceB
runtime.goPanicSliceBU
runtime.goargs
runtime.goenvs
runtime.goenvs_unix
runtime.goexit
runtime.goexit0
runtime.goexit1
runtime.goexit1
runtime.gogetenv
runtime.gogo
runtime.gopanic
runtime.gopark
runtime.goparkunlock
runtime.gopreempt_m
runtime.goready
runtime.goready.func1
runtime.gorecover
runtime.goroutineReady
runtime.goroutineheader
runtime.goschedImpl
runtime.gosched_m
runtime.goschedguarded
runtime.goschedguarded_m
runtime.gostartcall
runtime.gostartcallfn
runtime.gostring
runtime.gostringnocopy
runtime.gotraceback
runtime.goyield
runtime.goyield_m
runtime.greyobject
runtime.growWork
runtime.growWork_fast32
runtime.growWork_fast64
runtime.growWork_faststr
runtime.growslice
runtime.guintptr.ptr
runtime.gwrite
runtime.handoff
runtime.handoffp
runtime.hasPrefix
runtime.hashGrow
runtime.headTailIndex.head
runtime.headTailIndex.split
runtime.headTailIndex.tail
runtime.heapBits.bits
runtime.heapBits.forward
runtime.heapBits.forwardOrBoundary
runtime.heapBits.initSpan
runtime.heapBits.isPointer
runtime.heapBits.next
runtime.heapBits.nextArena
runtime.heapBitsForAddr
runtime.heapBitsSetType
runtime.heapBitsSetTypeGCProg
runtime.heapRetained
runtime.hexdumpWords
runtime.ifaceeq
runtime.inHeapOrStack
runtime.inPersistentAlloc
runtime.inVDSOPage
runtime.incidlelocked
runtime.init
runtime.init.0
runtime.init.1
runtime.init.4
runtime.init.5
runtime.init.6
runtime.initAlgAES
runtime.initsig
runtime.injectglist
runtime.injectglist.func1
runtime.int64Hash
runtime.interequal
runtime.interhash
runtime.intstring
runtime.isAbortPC
runtime.isAsyncSafePoint
runtime.isDirectIface
runtime.isEmpty
runtime.isExportedRuntime
runtime.isFinite
runtime.isInf
runtime.isNaN
runtime.isPowerOfTwo
runtime.isShrinkStackSafe
runtime.isSweepDone
runtime.isSystemGoroutine
runtime.itabAdd
runtime.itabHashFunc
runtime.itabsinit
runtime.iterate_itabs
runtime.itoa
runtime.itoaDiv
runtime.key32
runtime.levelIndexToOffAddr
runtime.lfnodeValidate
runtime.lfstackPack
runtime.lfstackUnpack
runtime.lock
runtime.lock2
runtime.lockInit
runtime.lockOSThread
runtime.lockRank.String
runtime.lockWithRank
runtime.lockWithRankMayAcquire
runtime.lockextra
runtime.mPark
runtime.mProf_Flush
runtime.mProf_FlushLocked
runtime.mProf_Free
runtime.mProf_Malloc
runtime.mProf_Malloc.func1
runtime.mProf_NextCycle
runtime.mReserveID
runtime.mStackIsSystemAllocated
runtime.madvise
runtime.main
runtime.main.func1
runtime.main.func2
runtime.makeAddrRange
runtime.makeBucketArray
runtime.makeHeadTailIndex
runtime.makeSpanClass
runtime.makechan
runtime.makemap
runtime.makemap_small
runtime.makeslice
runtime.makeslicecopy
runtime.malg
runtime.malg.func1
runtime.mallocgc
runtime.mallocinit
runtime.mapaccess1_fast32
runtime.mapaccess1_fast64
runtime.mapaccess2
runtime.mapaccess2_fast32
runtime.mapaccess2_fast64
runtime.mapaccess2_faststr
runtime.mapaccessK
runtime.mapassign
runtime.mapassign_fast32
runtime.mapassign_fast64ptr
runtime.mapassign_faststr
runtime.mapdelete
runtime.mapiterinit
runtime.mapiternext
runtime.markBits.isMarked
runtime.markBits.setMarked
runtime.markBits.setMarkedNonAtomic
runtime.markroot
runtime.markroot.func1
runtime.markrootBlock
runtime.markrootFreeGStacks
runtime.markrootSpans
runtime.materializeGCProg
runtime.mcall
runtime.mcommoninit
runtime.mcount
runtime.mdestroy
runtime.memclrHasPointers
runtime.memclrNoHeapPointers
runtime.memclrNoHeapPointersChunked
runtime.memequal
runtime.memequal0
runtime.memequal128
runtime.memequal16
runtime.memequal32
runtime.memequal64
runtime.memequal8
runtime.memequal_varlen
runtime.memhash
runtime.memhash128
runtime.memhash32
runtime.memhash32Fallback
runtime.memhash64
runtime.memhash64Fallback
runtime.memhashFallback
runtime.memmove
runtime.mergeSummaries
runtime.mexit
runtime.mget
runtime.mincore
runtime.minit
runtime.minitSignalMask
runtime.minitSignalStack
runtime.minitSignals
runtime.mix
runtime.mmap
runtime.mmap.func1
runtime.modtimer
runtime.moduledataverify
runtime.moduledataverify1
runtime.modulesinit
runtime.morestack
runtime.morestack_noctxt
runtime.morestackc
runtime.morestackc
runtime.moveTimers
runtime.mpreinit
runtime.mput
runtime.msigrestore
runtime.mspinning
runtime.mstart
runtime.mstart0
runtime.mstart0
runtime.mstart1
runtime.mstartm0
runtime.muintptr.ptr
runtime.munmap
runtime.munmap.func1
runtime.name.data
runtime.name.isBlank
runtime.name.isExported
runtime.name.name
runtime.name.pkgPath
runtime.name.readvarint
runtime.name.tag
runtime.nanotime
runtime.nanotime1
runtime.needm
runtime.netpoll
runtime.netpollBreak
runtime.netpollGenericInit
runtime.netpollblock
runtime.netpollblockcommit
runtime.netpollcheckerr
runtime.netpollclose
runtime.netpollgoready
runtime.netpollinit
runtime.netpollinited
runtime.netpollopen
runtime.netpollready
runtime.netpollunblock
runtime.newAllocBits
runtime.newArenaMayUnlock
runtime.newBucket
runtime.newMarkBits
runtime.newSpecialsIter
runtime.newarray
runtime.newdefer
runtime.newextram
runtime.newm
runtime.newm1
runtime.newobject
runtime.newosproc
runtime.newproc
runtime.newproc
runtime.newproc.func1
runtime.newproc1
runtime.newstack
runtime.newstack
runtime.nextFreeFast
runtime.nextMarkBitArenaEpoch
runtime.nextSample
runtime.nilfunc
runtime.nilinterequal
runtime.nilinterhash
runtime.noSignalStack
runtime.nobarrierWakeTime
runtime.noescape
runtime.nonblockingPipe
runtime.noteclear
runtime.notesleep
runtime.notetsleep
runtime.notetsleep_internal
runtime.notetsleepg
runtime.notewakeup
runtime.offAddr.add
runtime.offAddr.addr
runtime.offAddr.diff
runtime.offAddr.equal
runtime.offAddr.lessEqual
runtime.offAddr.lessThan
runtime.offAddr.sub
runtime.offAddrToLevelIndex
runtime.oneNewExtraM
runtime.open
runtime.osArchInit
runtime.osPreemptExtEnter
runtime.osPreemptExtExit
runtime.osRelax
runtime.osSetupTLS
runtime.osStackAlloc
runtime.osStackFree
runtime.osinit
runtime.osinit
runtime.osyield
runtime.osyield_no_g
runtime.overLoadFactor
runtime.pMask.clear
runtime.pMask.read
runtime.pMask.set
runtime.packPallocSum
runtime.pageIndexOf
runtime.pallocSum.end
runtime.pallocSum.max
runtime.pallocSum.start
runtime.pallocSum.unpack
runtime.panicCheck1
runtime.panicCheck2
runtime.panicIndex
runtime.panicIndexU
runtime.panicSlice3Acap
runtime.panicSlice3Alen
runtime.panicSlice3AlenU
runtime.panicSlice3B
runtime.panicSlice3C
runtime.panicSliceAcap
runtime.panicSliceAcapU
runtime.panicSliceAlen
runtime.panicSliceAlenU
runtime.panicSliceB
runtime.panicSliceBU
runtime.panicdivide
runtime.panicdottypeE
runtime.panicdottypeI
runtime.panicfloat
runtime.panicmakeslicecap
runtime.panicmakeslicelen
runtime.panicmem
runtime.panicmemAddr
runtime.panicoverflow
runtime.panicshift
runtime.panicwrap
runtime.park_m
runtime.parkunlock_c
runtime.parsedebugvars
runtime.pcdatastart
runtime.pcdatavalue
runtime.pcdatavalue1
runtime.pcdatavalue2
runtime.pcvalue
runtime.pcvalueCacheKey
runtime.persistentalloc
runtime.persistentalloc.func1
runtime.persistentalloc1
runtime.pidleget
runtime.pidleput
runtime.pipe
runtime.pipe2
runtime.plainError.Error
runtime.pollFractionalWorkerExit
runtime.pollInfo.closing
runtime.pollInfo.eventErr
runtime.pollInfo.expiredReadDeadline
runtime.pollInfo.expiredWriteDeadline
runtime.pollWork
runtime.preemptM
runtime.preemptPark
runtime.preemptall
runtime.preemptone
runtime.prepareFreeWorkbufs
runtime.preprintpanics
runtime.preprintpanics.func1
runtime.printAncestorTraceback
runtime.printAncestorTracebackFuncInfo
runtime.printArgs
runtime.printArgs.func1
runtime.printArgs.func2
runtime.printArgs.func3
runtime.printCgoTraceback
runtime.printDebugLog
runtime.printOneCgoTraceback
runtime.printScavTrace
runtime.printany
runtime.printanycustomtype
runtime.printbool
runtime.printcomplex
runtime.printcreatedby
runtime.printcreatedby1
runtime.printfloat
runtime.printhex
runtime.printint
runtime.printlock
runtime.printnl
runtime.printpanics
runtime.printpointer
runtime.printslice
runtime.printsp
runtime.printstring
runtime.printuint
runtime.printuintptr
runtime.printunlock
runtime.procPin
runtime.procUnpin
runtime.procresize
runtime.procyield
runtime.profIndex.addCountsAndClearFlags
runtime.profIndex.dataCount
runtime.profIndex.tagCount
runtime.profilealloc
runtime.progToPointerMask
runtime.publicationBarrier
runtime.puintptr.ptr
runtime.putempty
runtime.putfull
runtime.queuefinalizer
runtime.r4
runtime.r8
runtime.raise
runtime.raisebadsignal
runtime.raiseproc
runtime.rawbyteslice
runtime.rawstring
runtime.rawstringtmp
runtime.read
runtime.readGOGC
runtime.readUnaligned32
runtime.readUnaligned64
runtime.readgstatus
runtime.readvarint
runtime.readvarintUnsafe
runtime.ready
runtime.readyForScavenger
runtime.readyWithTime
runtime.recordForPanic
runtime.recordspan
runtime.recovery
runtime.recv
runtime.recvDirect
runtime.reentersyscall
runtime.reentersyscall.func1
runtime.reflectOffsLock
runtime.reflectOffsUnlock
runtime.reflectcall
runtime.reflectcall
runtime.reflectcallmove
runtime.reflectcallmove
runtime.releaseLockRank
runtime.releaseSudog
runtime.releasem
runtime.releasep
runtime.removefinalizer
runtime.removespecial
runtime.resetForSleep
runtime.resetspinning
runtime.resettimer
runtime.resolveNameOff
runtime.resolveTypeOff
runtime.restoreGsignalStack
runtime.resumeG
runtime.retake
runtime.return0
runtime.round2
runtime.roundupsize
runtime.rt0_go
runtime.rt_sigaction
runtime.rtsigprocmask
runtime.runGCProg
runtime.runOneTimer
runtime.runOpenDeferFrame
runtime.runPerThreadSyscall
runtime.runSafePointFn
runtime.runfinq
runtime.runqdrain
runtime.runqempty
runtime.runqget
runtime.runqgrab
runtime.runqput
runtime.runqputbatch
runtime.runqputslow
runtime.runqsteal
runtime.runtimer
runtime.save
runtime.saveAncestors
runtime.saveblockevent
runtime.scanConservative
runtime.scanblock
runtime.scanframeworker
runtime.scanobject
runtime.scanstack
runtime.scanstack.func1
runtime.scavengeSleep
runtime.schedEnableUser
runtime.schedEnabled
runtime.sched_getaffinity
runtime.schedinit
runtime.schedinit
runtime.schedtrace
runtime.schedtrace.func1
runtime.schedule
runtime.selectgo
runtime.selectgo.func2
runtime.selectgo.func3
runtime.selectnbrecv
runtime.selectnbsend
runtime.sellock
runtime.selparkcommit
runtime.selunlock
runtime.semacquire
runtime.semacquire1
runtime.semrelease
runtime.semrelease1
runtime.semroot
runtime.send
runtime.sendDirect
runtime.setCheckmark
runtime.setGCPhase
runtime.setGNoWB
runtime.setGsignalStack
runtime.setMNoWB
runtime.setNonblock
runtime.setSignalstackSP
runtime.setThreadCPUProfiler
runtime.setg
runtime.setprofilebucket
runtime.setsig
runtime.setsigstack
runtime.settls
runtime.shade
runtime.shouldPushSigpanic
runtime.showframe
runtime.showfuncinfo
runtime.shrinkstack
runtime.siftdownTimer
runtime.siftupTimer
runtime.sigFetchG
runtime.sigInitIgnored
runtime.sigInstallGoHandler
runtime.sigNotOnStack
runtime.sigaction
runtime.sigaction.func1
runtime.sigaddset
runtime.sigaltstack
runtime.sigblock
runtime.sigdelset
runtime.sigenable
runtime.sigfillset
runtime.sigfwd
runtime.sigfwdgo
runtime.sighandler
runtime.signalDuringFork
runtime.signalM
runtime.signalstack
runtime.signame
runtime.sigpanic
runtime.sigpanic0
runtime.sigpipe
runtime.sigprocmask
runtime.sigprof
runtime.sigprofNonGo
runtime.sigprofNonGo
runtime.sigprofNonGoPC
runtime.sigprofNonGoWrapper
runtime.sigreturn
runtime.sigsave
runtime.sigsend
runtime.sigtramp
runtime.sigtrampgo
runtime.sigtrampgo
runtime.slicebytetostring
runtime.spanAllocType.manual
runtime.spanClass.noscan
runtime.spanClass.sizeclass
runtime.spanHasNoSpecials
runtime.spanHasSpecials
runtime.spanOf
runtime.spanOfHeap
runtime.spanOfUnchecked
runtime.spillArgs
runtime.stackalloc
runtime.stackcache_clear
runtime.stackcacherefill
runtime.stackcacherelease
runtime.stackcheck
runtime.stackfree
runtime.stackinit
runtime.stacklog2
runtime.stackmapdata
runtime.stackpoolalloc
runtime.stackpoolfree
runtime.startCheckmarks
runtime.startPCforTrace
runtime.startTemplateThread
runtime.startTheWorld
runtime.startTheWorld.func1
runtime.startTheWorldGC
runtime.startTheWorldWithSema
runtime.startlockedm
runtime.startm
runtime.startpanic_m
runtime.stealWork
runtime.step
runtime.stkbucket
runtime.stkobjinit
runtime.stopTheWorld
runtime.stopTheWorld.func1
runtime.stopTheWorldGC
runtime.stopTheWorldWithSema
runtime.stoplockedm
runtime.stopm
runtime.strequal
runtime.strhash
runtime.strhashFallback
runtime.stringDataOnStack
runtime.stringStructOf
runtime.stringtoslicebyte
runtime.subtract1
runtime.subtractb
runtime.suspendG
runtime.sweepClass.split
runtime.sweepone
runtime.sweepone.func1
runtime.syncadjustsudogs
runtime.sysAlloc
runtime.sysFault
runtime.sysFree
runtime.sysHugePage
runtime.sysMap
runtime.sysMmap
runtime.sysMunmap
runtime.sysReserve
runtime.sysReserveAligned
runtime.sysSigaction
runtime.sysSigaction.func1
runtime.sysUnused
runtime.sysUsed
runtime.sysargs
runtime.sysauxv
runtime.sysmon
runtime.systemstack
runtime.systemstack_switch
runtime.templateThread
runtime.testAtomic64
runtime.tgkill
runtime.throw
runtime.throw.func1
runtime.timeSleepUntil
runtime.timediv
runtime.timer_create
runtime.timer_delete
runtime.timer_settime
runtime.tooManyOverflowBuckets
runtime.tophash
runtime.traceAcquireBuffer
runtime.traceAllocBlockPtr.ptr
runtime.traceBufPtr.ptr
runtime.traceBufPtrOf
runtime.traceEvent
runtime.traceEventLocked
runtime.traceFlush
runtime.traceFullQueue
runtime.traceGCDone
runtime.traceGCMarkAssistDone
runtime.traceGCMarkAssistStart
runtime.traceGCSTWDone
runtime.traceGCSTWStart
runtime.traceGCStart
runtime.traceGCSweepDone
runtime.traceGCSweepSpan
runtime.traceGCSweepStart
runtime.traceGoCreate
runtime.traceGoEnd
runtime.traceGoPark
runtime.traceGoPreempt
runtime.traceGoSched
runtime.traceGoStart
runtime.traceGoSysBlock
runtime.traceGoSysCall
runtime.traceGoSysExit
runtime.traceGoUnpark
runtime.traceGomaxprocs
runtime.traceHeapAlloc
runtime.traceHeapGoal
runtime.traceProcFree
runtime.traceProcStart
runtime.traceProcStop
runtime.traceReader
runtime.traceReleaseBuffer
runtime.traceStackID
runtime.traceStackPtr.ptr
runtime.tracealloc
runtime.tracealloc.func1
runtime.traceback
runtime.traceback1
runtime.tracebackCgoContext
runtime.tracebackHexdump
runtime.tracebackHexdump.func1
runtime.tracebackothers
runtime.tracebackothers.func1
runtime.tracebacktrap
runtime.tracefree
runtime.tracefree.func1
runtime.tracegc
runtime.trygetfull
runtime.typeBitsBulkBarrier
runtime.typedmemclr
runtime.typedmemmove
runtime.typedslicecopy
runtime.typehash
runtime.typelinksinit
runtime.typesEqual
runtime.unblocksig
runtime.unlock
runtime.unlock2
runtime.unlockOSThread
runtime.unlockWithRank
runtime.unlockextra
runtime.unminit
runtime.unminitSignals
runtime.unreachableMethod
runtime.unspillArgs
runtime.updateTimer0When
runtime.updateTimerModifiedEarliest
runtime.updateTimerPMask
runtime.usesLibcall
runtime.usleep
runtime.usleep_no_g
runtime.validSIGPROF
runtime.vdsoFindVersion
runtime.vdsoInitFromSysinfoEhdr
runtime.vdsoParseSymbols
runtime.vdsoParseSymbols.func1
runtime.vdsoauxv
runtime.waitReason.String
runtime.wakeNetPoller
runtime.wakeScavenger
runtime.wakefing
runtime.wakep
runtime.wantAsyncPreempt
runtime.wbBufFlush
runtime.wbBufFlush
runtime.wbBufFlush.func1
runtime.wbBufFlush1
runtime.wirep
runtime.worldStarted
runtime.worldStopped
runtime.write
runtime.write
runtime.write1
runtime.writeErr
runtime/debug.SetTraceback
runtime/internal/atomic.(*Float64).Load
runtime/internal/atomic.(*Float64).Store
runtime/internal/atomic.(*Int32).Load
runtime/internal/atomic.(*Int32).Store
runtime/internal/atomic.(*Int64).Add
runtime/internal/atomic.(*Int64).Load
runtime/internal/atomic.(*Int64).Store
runtime/internal/atomic.(*Uint32).CompareAndSwap
runtime/internal/atomic.(*Uint32).Load
runtime/internal/atomic.(*Uint32).Store
runtime/internal/atomic.(*Uint64).Add
runtime/internal/atomic.(*Uint64).Load
runtime/internal/atomic.(*Uint64).Store
runtime/internal/atomic.(*Uint8).Load
runtime/internal/atomic.(*Uint8).Store
runtime/internal/atomic.(*Uintptr).Add
runtime/internal/atomic.(*Uintptr).CompareAndSwap
runtime/internal/atomic.(*Uintptr).Load
runtime/internal/atomic.(*Uintptr).Store
runtime/internal/atomic.(*Uintptr).Swap
runtime/internal/sys.LeadingZeros64
runtime/internal/sys.OnesCount64
runtime/internal/syscall.Syscall6
setg_gcc
sort.Stable
sort.insertionSort
sort.rotate
sort.stable
sort.swapRange
sort.symMerge
strconv.(*decimal).Assign
strconv.(*decimal).Round
strconv.(*decimal).RoundDown
strconv.(*decimal).RoundUp
strconv.(*decimal).Shift
strconv.AppendFloat
strconv.AppendQuote
strconv.AppendQuoteRune
strconv.AppendQuoteRuneToASCII
strconv.AppendQuoteToASCII
strconv.CanBackquote
strconv.FormatInt
strconv.IsPrint
strconv.Itoa
strconv.appendEscapedRune
strconv.appendQuotedRuneWith
strconv.appendQuotedWith
strconv.bigFtoa
strconv.bsearch16
strconv.bsearch32
strconv.computeBounds
strconv.divisibleByPower5
strconv.divmod1e9
strconv.fmtB
strconv.fmtE
strconv.fmtF
strconv.fmtX
strconv.formatBits
strconv.formatDecimal
strconv.formatDigits
strconv.genericFtoa
strconv.init
strconv.isInGraphicList
strconv.isPowerOfTwo
strconv.leftShift
strconv.lower
strconv.max
strconv.min
strconv.mulByLog10Log2
strconv.mulByLog2Log10
strconv.mult128bitPow10
strconv.mult64bitPow10
strconv.prefixIsLessThan
strconv.rightShift
strconv.roundShortest
strconv.ryuDigits
strconv.ryuDigits32
strconv.ryuFtoaFixed32
strconv.ryuFtoaFixed64
strconv.ryuFtoaShortest
strconv.shouldRoundUp
strconv.small
strconv.trim
sync.(*Map).Load
sync.(*Map).LoadOrStore
sync.(*Map).dirtyLocked
sync.(*Map).missLocked
sync.(*Mutex).Lock
sync.(*Mutex).Unlock
sync.(*Mutex).lockSlow
sync.(*Mutex).unlockSlow
sync.(*Once).Do
sync.(*Once).doSlow
sync.(*Once).doSlow.func1
sync.(*Once).doSlow.func2
sync.(*Pool).Get
sync.(*Pool).Put
sync.(*Pool).getSlow
sync.(*Pool).pin
sync.(*Pool).pinSlow
sync.(*Pool).pinSlow.func1
sync.(*RWMutex).RLock
sync.(*RWMutex).RUnlock
sync.(*RWMutex).rUnlockSlow
sync.(*WaitGroup).Add
sync.(*WaitGroup).Done
sync.(*WaitGroup).Wait
sync.(*WaitGroup).state
sync.(*entry).load
sync.(*entry).tryExpungeLocked
sync.(*entry).tryLoadOrStore
sync.(*entry).unexpungeLocked
sync.(*poolChain).popHead
sync.(*poolChain).popTail
sync.(*poolChain).pushHead
sync.(*poolDequeue).pack
sync.(*poolDequeue).popHead
sync.(*poolDequeue).popTail
sync.(*poolDequeue).pushHead
sync.(*poolDequeue).unpack
sync.event
sync.indexLocal
sync.init
sync.init.0
sync.init.1
sync.loadPoolChainElt
sync.newEntry
sync.poolCleanup
sync.runtime_Semacquire
sync.runtime_SemacquireMutex
sync.runtime_Semrelease
sync.runtime_canSpin
sync.runtime_doSpin
sync.runtime_nanotime
sync.runtime_notifyListCheck
sync.runtime_procPin
sync.runtime_procUnpin
sync.runtime_registerPoolCleanup
sync.storePoolChainElt
sync.throw
sync/atomic.(*Value).Load
sync/atomic.(*Value).Store
sync/atomic.CompareAndSwapPointer
sync/atomic.CompareAndSwapUintptr
sync/atomic.StorePointer
sync/atomic.StoreUint32
sync/atomic.StoreUintptr
sync/atomic.runtime_procPin
sync/atomic.runtime_procUnpin
syscall.(*Errno).Error
syscall.(*Signal).String
syscall.BytePtrFromString
syscall.ByteSliceFromString
syscall.Close
syscall.Errno.Error
syscall.Exit
syscall.Getenv
syscall.Getenv.func1
syscall.Open
syscall.Read
syscall.Seek
syscall.SetNonblock
syscall.Signal.String
syscall.Syscall
syscall.Syscall6
syscall.Write
syscall.copyenv
syscall.errnoErr
syscall.fcntl
syscall.init
syscall.mmap
syscall.munmap
syscall.openat
syscall.read
syscall.runtime_envs
syscall.write
time.(*Location).String
time.(*Location).firstZoneUsed
time.(*Location).get
time.(*Location).lookup
time.(*Location).lookupFirstZone
time.(*Time).GoString
time.(*Time).String
time.(*Time).nsec
time.(*Time).sec
time.(*Time).unixSec
time.(*dataIO).big4
time.(*dataIO).big8
time.(*dataIO).byte
time.(*dataIO).read
time.(*dataIO).rest
time.(*fileSizeError).Error
time.LoadLocationFromTZData
time.Month.String
time.Sleep
time.Time.AppendFormat
time.Time.Day
time.Time.Format
time.Time.GoString
time.Time.Hour
time.Time.Location
time.Time.Minute
time.Time.Month
time.Time.Nanosecond
time.Time.Second
time.Time.String
time.Time.Year
time.Time.abs
time.Time.date
time.Time.locabs
time.Weekday.String
time.absClock
time.absDate
time.absWeekday
time.appendInt
time.byteString
time.closefd
time.daysIn
time.daysSinceEpoch
time.digitsLen
time.fileSizeError.Error
time.findZone
time.fmtInt
time.formatNano
time.get2
time.get4
time.init
time.initLocal
time.isDigit
time.isLeap
time.loadLocation
time.loadTzinfo
time.loadTzinfoFromDirOrZip
time.loadTzinfoFromZip
time.loadTzinfoFromZip.func1
time.nextStdChunk
time.now
time.open
time.preadn
time.quote
time.read
time.readFile
time.readFile.func1
time.resetTimer
time.separator
time.startsWithLowerCase
time.stdFracSecond
time.stopTimer
time.tzruleTime
time.tzset
time.tzsetName
time.tzsetNum
time.tzsetOffset
time.tzsetRule
type..eq.[15]internal/cpu.option
type..eq.[2]runtime.Frame
type..eq.context.valueCtx
type..eq.fmt.fmt
type..eq.internal/abi.RegArgs
type..eq.internal/cpu.option
type..eq.internal/poll.FD
type..eq.internal/reflectlite.uncommonType
type..eq.io/fs.PathError
type..eq.math/rand.Rand
type..eq.os.file
type..eq.reflect.MapIter
type..eq.reflect.Method
type..eq.reflect.ValueError
type..eq.reflect.hiter
type..eq.reflect.makeFuncCtxt
type..eq.reflect.methodValue
type..eq.reflect.uncommonType
type..eq.runtime.Frame
type..eq.runtime.TypeAssertionError
type..eq.runtime._func
type..eq.runtime._panic
type..eq.runtime.bitvector
type..eq.runtime.boundsError
type..eq.runtime.errorAddressString
type..eq.runtime.funcinl
type..eq.runtime.gcWork
type..eq.runtime.hchan
type..eq.runtime.itab
type..eq.runtime.mOS
type..eq.runtime.mcache
type..eq.runtime.modulehash
type..eq.runtime.mspan
type..eq.runtime.special
type..eq.runtime.sudog
type..eq.runtime.sysmontick
type..eq.struct { runtime.gList; runtime.n int32 }
type..eq.sync.WaitGroup
type..eq.sync.poolLocal
type..eq.sync.poolLocalInternal
type..eq.time.zone
type..eq.time.zoneTrans
unicode.init
unicode/utf8.DecodeRune
unicode/utf8.DecodeRuneInString
unicode/utf8.EncodeRune
unicode/utf8.RuneCount
unicode/utf8.RuneCountInString
unicode/utf8.RuneLen
unicode/utf8.ValidRune
(dlv) 
_rt0_amd64
_rt0_amd64_linux
aeshashbody
bytes.Contains
bytes.Equal
bytes.Index
bytes.IndexByte
bytes.init
callRet
cmpbody
context.(*cancelCtx).Done
context.(*cancelCtx).Done.func1
context.(*cancelCtx).Err
context.(*cancelCtx).String
context.(*cancelCtx).Value
context.(*cancelCtx).cancel
context.(*emptyCtx).Done
context.(*emptyCtx).Err
context.(*emptyCtx).String
context.(*emptyCtx).Value
context.Background
context.WithCancel
context.WithCancel.func1
context.contextName
context.init
context.init.0
context.newCancelCtx
context.parentCancelCtx
context.propagateCancel
context.propagateCancel.func1
context.removeChild
context.value
debugCall1024
debugCall128
debugCall16384
debugCall2048
debugCall256
debugCall32
debugCall32768
debugCall4096
debugCall512
debugCall64
debugCall65536
debugCall8192
encoding/binary.init
encoding/binary.littleEndian.Uint64
errors.(*errorString).Error
errors.New
errors.init
fmt.(*buffer).write
fmt.(*buffer).writeByte
fmt.(*buffer).writeRune
fmt.(*buffer).writeString
fmt.(*fmt).clearflags
fmt.(*fmt).fmtBoolean
fmt.(*fmt).fmtBs
fmt.(*fmt).fmtBx
fmt.(*fmt).fmtC
fmt.(*fmt).fmtFloat
fmt.(*fmt).fmtInteger
fmt.(*fmt).fmtQ
fmt.(*fmt).fmtQc
fmt.(*fmt).fmtS
fmt.(*fmt).fmtSbx
fmt.(*fmt).fmtSx
fmt.(*fmt).fmtUnicode
fmt.(*fmt).init
fmt.(*fmt).pad
fmt.(*fmt).padString
fmt.(*fmt).truncate
fmt.(*fmt).truncateString
fmt.(*fmt).writePadding
fmt.(*pp).Write
fmt.(*pp).argNumber
fmt.(*pp).badArgNum
fmt.(*pp).badVerb
fmt.(*pp).catchPanic
fmt.(*pp).doPrintf
fmt.(*pp).doPrintln
fmt.(*pp).fmt0x64
fmt.(*pp).fmtBool
fmt.(*pp).fmtBytes
fmt.(*pp).fmtComplex
fmt.(*pp).fmtFloat
fmt.(*pp).fmtInteger
fmt.(*pp).fmtPointer
fmt.(*pp).fmtString
fmt.(*pp).free
fmt.(*pp).handleMethods
fmt.(*pp).handleMethods.func1
fmt.(*pp).handleMethods.func2
fmt.(*pp).handleMethods.func3
fmt.(*pp).handleMethods.func4
fmt.(*pp).missingArg
fmt.(*pp).printArg
fmt.(*pp).printValue
fmt.(*pp).unknownType
fmt.Fprintf
fmt.Fprintln
fmt.Printf
fmt.Println
fmt.getField
fmt.glob..func1
fmt.init
fmt.intFromArg
fmt.newPrinter
fmt.parseArgNumber
fmt.parsenum
fmt.tooLarge
gogo
gosave_systemstack_switch
indexbody
indexbytebody
internal/abi.(*IntArgRegBitmap).Get
internal/abi.(*IntArgRegBitmap).Set
internal/abi.(*RegArgs).IntRegArgAddr
internal/bytealg.Cutover
internal/bytealg.Equal
internal/bytealg.HashStrBytes
internal/bytealg.Index
internal/bytealg.IndexByte
internal/bytealg.IndexByteString
internal/bytealg.IndexRabinKarpBytes
internal/bytealg.init.0
internal/cpu.Initialize
internal/cpu.cpuid
internal/cpu.doinit
internal/cpu.indexByte
internal/cpu.isSet
internal/cpu.processOptions
internal/cpu.xgetbv
internal/fmtsort.(*SortedMap).Len
internal/fmtsort.(*SortedMap).Less
internal/fmtsort.(*SortedMap).Swap
internal/fmtsort.Sort
internal/fmtsort.compare
internal/fmtsort.floatCompare
internal/fmtsort.isNaN
internal/fmtsort.nilCompare
internal/itoa.Itoa
internal/itoa.Uitoa
internal/oserror.init
internal/poll.(*DeadlineExceededError).Error
internal/poll.(*FD).Close
internal/poll.(*FD).Init
internal/poll.(*FD).Read
internal/poll.(*FD).Read.func1
internal/poll.(*FD).Write
internal/poll.(*FD).Write.func1
internal/poll.(*FD).decref
internal/poll.(*FD).destroy
internal/poll.(*FD).eofError
internal/poll.(*FD).readLock
internal/poll.(*FD).readUnlock
internal/poll.(*FD).writeLock
internal/poll.(*FD).writeUnlock
internal/poll.(*errNetClosing).Error
internal/poll.(*fdMutex).decref
internal/poll.(*fdMutex).increfAndClose
internal/poll.(*fdMutex).rwlock
internal/poll.(*fdMutex).rwunlock
internal/poll.(*pollDesc).close
internal/poll.(*pollDesc).evict
internal/poll.(*pollDesc).init
internal/poll.(*pollDesc).pollable
internal/poll.(*pollDesc).prepare
internal/poll.(*pollDesc).prepareRead
internal/poll.(*pollDesc).prepareWrite
internal/poll.(*pollDesc).wait
internal/poll.(*pollDesc).waitRead
internal/poll.(*pollDesc).waitWrite
internal/poll.convertErr
internal/poll.errClosing
internal/poll.errNetClosing.Error
internal/poll.errnoErr
internal/poll.ignoringEINTRIO
internal/poll.init
internal/poll.runtime_Semacquire
internal/poll.runtime_Semrelease
internal/poll.runtime_pollClose
internal/poll.runtime_pollOpen
internal/poll.runtime_pollReset
internal/poll.runtime_pollServerInit
internal/poll.runtime_pollUnblock
internal/poll.runtime_pollWait
internal/race.Enable
internal/reflectlite.(*Kind).String
internal/reflectlite.(*rtype).Elem
internal/reflectlite.(*rtype).Kind
internal/reflectlite.(*rtype).Len
internal/reflectlite.(*rtype).String
internal/reflectlite.(*rtype).nameOff
internal/reflectlite.Kind.String
internal/reflectlite.TypeOf
internal/reflectlite.add
internal/reflectlite.name.data
internal/reflectlite.name.name
internal/reflectlite.name.readVarint
internal/reflectlite.resolveNameOff
internal/reflectlite.toType
internal/syscall/unix.IsNonblock
internal/testlog.PanicOnExit0
internal/testlog.PanicOnExit0.func1
io.(*discard).Write
io.ReadAll
io.discard.Write
io.init
io/fs.(*PathError).Error
io/fs.errClosed
io/fs.errExist
io/fs.errInvalid
io/fs.errNotExist
io/fs.errPermission
io/fs.init
io/ioutil.ReadAll
io/ioutil.init
main.consumeValues
main.consumeValues.func1
main.main
main.main.func1
main.main.func2
main.main.func3
main.main.func4
main.produceValues
main.produceValues.func1
math.Float32bits
math.Float64bits
math.init
math/bits.TrailingZeros
math/rand.(*Rand).Int
math/rand.(*Rand).Int63
math/rand.(*Rand).Read
math/rand.(*lockedSource).Int63
math/rand.(*lockedSource).read
math/rand.(*rngSource).Int63
math/rand.(*rngSource).Seed
math/rand.(*rngSource).Uint64
math/rand.Int
math/rand.New
math/rand.NewSource
math/rand.Read
math/rand.init
math/rand.read
math/rand.seedrand
memeqbody
os.(*File).Read
os.(*File).Write
os.(*File).checkValid
os.(*File).read
os.(*File).wrapErr
os.(*File).write
os.(*dirInfo).close
os.(*file).close
os.Exit
os.NewFile
os.epipecheck
os.errDeadlineExceeded
os.errNoDeadline
os.glob..func1
os.init
os.init.0
os.newFile
os.runtime_args
os.runtime_beforeExit
os.sigpipe
os/signal.(*handler).set
os/signal.(*handler).want
os/signal.Notify
os/signal.Notify.func1
os/signal.Notify.func1.1
os/signal.Notify.func2
os/signal.enableSignal
os/signal.init.0
os/signal.loop
os/signal.process
os/signal.process.func1
os/signal.signal_enable
os/signal.signal_ignored
os/signal.signal_recv
os/signal.signum
path.init
reflect.(*ChanDir).String
reflect.(*Kind).String
reflect.(*MapIter).Key
reflect.(*MapIter).Next
reflect.(*MapIter).Value
reflect.(*Value).Kind
reflect.(*Value).Len
reflect.(*Value).String
reflect.(*ValueError).Error
reflect.(*abiSeq).addArg
reflect.(*abiSeq).addRcvr
reflect.(*abiSeq).assignFloatN
reflect.(*abiSeq).assignIntN
reflect.(*abiSeq).regAssign
reflect.(*abiSeq).stackAssign
reflect.(*abiSeq).stepsForValue
reflect.(*bitVector).append
reflect.(*funcType).Elem
reflect.(*funcType).Field
reflect.(*funcType).Kind
reflect.(*funcType).Len
reflect.(*funcType).String
reflect.(*funcType).in
reflect.(*funcType).out
reflect.(*hiter).initialized
reflect.(*interfaceType).NumMethod
reflect.(*rtype).Elem
reflect.(*rtype).Field
reflect.(*rtype).Kind
reflect.(*rtype).Len
reflect.(*rtype).NumMethod
reflect.(*rtype).Size
reflect.(*rtype).String
reflect.(*rtype).common
reflect.(*rtype).exportedMethods
reflect.(*rtype).nameOff
reflect.(*rtype).pointers
reflect.(*rtype).textOff
reflect.(*rtype).typeOff
reflect.(*rtype).uncommon
reflect.(*structField).embedded
reflect.(*structField).offset
reflect.(*structType).Field
reflect.(*uncommonType).exportedMethods
reflect.ChanDir.String
reflect.Kind.String
reflect.TypeOf
reflect.Value.Bool
reflect.Value.Bytes
reflect.Value.CanAddr
reflect.Value.CanInterface
reflect.Value.Complex
reflect.Value.Elem
reflect.Value.Field
reflect.Value.Float
reflect.Value.Index
reflect.Value.Int
reflect.Value.Interface
reflect.Value.IsNil
reflect.Value.IsValid
reflect.Value.Kind
reflect.Value.Len
reflect.Value.MapRange
reflect.Value.NumField
reflect.Value.NumMethod
reflect.Value.Pointer
reflect.Value.Slice
reflect.Value.String
reflect.Value.Type
reflect.Value.Uint
reflect.Value.pointer
reflect.ValueOf
reflect.add
reflect.addReflectOff
reflect.addTypeBits
reflect.align
reflect.archFloat32FromReg
reflect.archFloat32ToReg
reflect.arrayAt
reflect.callMethod
reflect.callMethod
reflect.chanlen
reflect.copyVal
reflect.escapes
reflect.flag.kind
reflect.flag.mustBe
reflect.flag.ro
reflect.floatFromReg
reflect.floatToReg
reflect.funcLayout
reflect.funcLayout.func1
reflect.ifaceIndir
reflect.init
reflect.intFromReg
reflect.intToReg
reflect.makeMethodValue
reflect.mapiterelem
reflect.mapiterinit
reflect.mapiterkey
reflect.mapiternext
reflect.maplen
reflect.memmove
reflect.methodName
reflect.methodReceiver
reflect.methodValueCall
reflect.methodValueCallCodePtr
reflect.moveMakeFuncArgPtrs
reflect.moveMakeFuncArgPtrs
reflect.name.data
reflect.name.hasTag
reflect.name.isExported
reflect.name.name
reflect.name.readVarint
reflect.name.tag
reflect.newAbiDesc
reflect.newName
reflect.packEface
reflect.resolveNameOff
reflect.resolveReflectName
reflect.resolveTextOff
reflect.resolveTypeOff
reflect.storeRcvr
reflect.toType
reflect.typedmemclr
reflect.typedmemmove
reflect.unpackEface
reflect.unsafe_New
reflect.valueInterface
reflect.verifyNotInHeapPtr
reflect.writeVarint
runtime.(*Frames).Next
runtime.(*Func).Entry
runtime.(*Func).Name
runtime.(*Func).funcInfo
runtime.(*Func).raw
runtime.(*TypeAssertionError).Error
runtime.(*_func).funcInfo
runtime.(*_func).isInlined
runtime.(*_type).nameOff
runtime.(*_type).pkgpath
runtime.(*_type).string
runtime.(*_type).textOff
runtime.(*_type).typeOff
runtime.(*_type).uncommon
runtime.(*activeSweep).begin
runtime.(*activeSweep).end
runtime.(*activeSweep).isDone
runtime.(*activeSweep).markDrained
runtime.(*activeSweep).reset
runtime.(*activeSweep).sweepers
runtime.(*addrRanges).add
runtime.(*addrRanges).cloneInto
runtime.(*addrRanges).findAddrGreaterEqual
runtime.(*addrRanges).findSucc
runtime.(*addrRanges).init
runtime.(*addrRanges).removeGreaterEqual
runtime.(*addrRanges).removeLast
runtime.(*bmap).keys
runtime.(*bmap).overflow
runtime.(*bmap).setoverflow
runtime.(*boundsError).Error
runtime.(*bucket).bp
runtime.(*bucket).mp
runtime.(*bucket).stk
runtime.(*consistentHeapStats).acquire
runtime.(*consistentHeapStats).release
runtime.(*cpuProfile).add
runtime.(*cpuProfile).addExtra
runtime.(*cpuProfile).addNonGo
runtime.(*errorAddressString).Error
runtime.(*errorString).Error
runtime.(*fixalloc).alloc
runtime.(*fixalloc).free
runtime.(*fixalloc).init
runtime.(*functype).dotdotdot
runtime.(*functype).in
runtime.(*functype).out
runtime.(*gList).empty
runtime.(*gList).pop
runtime.(*gList).push
runtime.(*gList).pushAll
runtime.(*gQueue).empty
runtime.(*gQueue).pop
runtime.(*gQueue).popList
runtime.(*gQueue).push
runtime.(*gQueue).pushBack
runtime.(*gQueue).pushBackAll
runtime.(*gcBits).bitp
runtime.(*gcBits).bytep
runtime.(*gcBitsArena).tryAlloc
runtime.(*gcControllerState).addGlobals
runtime.(*gcControllerState).addScannableStack
runtime.(*gcControllerState).commit
runtime.(*gcControllerState).endCycle
runtime.(*gcControllerState).enlistWorker
runtime.(*gcControllerState).findRunnableGCWorker
runtime.(*gcControllerState).findRunnableGCWorker.func1
runtime.(*gcControllerState).init
runtime.(*gcControllerState).logWorkTime
runtime.(*gcControllerState).resetLive
runtime.(*gcControllerState).revise
runtime.(*gcControllerState).setGCPercent
runtime.(*gcControllerState).startCycle
runtime.(*gcControllerState).update
runtime.(*gcWork).balance
runtime.(*gcWork).dispose
runtime.(*gcWork).empty
runtime.(*gcWork).init
runtime.(*gcWork).put
runtime.(*gcWork).putBatch
runtime.(*gcWork).putFast
runtime.(*gcWork).tryGet
runtime.(*gcWork).tryGetFast
runtime.(*guintptr).cas
runtime.(*guintptr).set
runtime.(*hchan).raceaddr
runtime.(*hchan).sortkey
runtime.(*headTailIndex).cas
runtime.(*headTailIndex).incTail
runtime.(*headTailIndex).load
runtime.(*headTailIndex).reset
runtime.(*hmap).createOverflow
runtime.(*hmap).growing
runtime.(*hmap).incrnoverflow
runtime.(*hmap).newoverflow
runtime.(*hmap).noldbuckets
runtime.(*hmap).oldbucketmask
runtime.(*hmap).sameSizeGrow
runtime.(*itab).init
runtime.(*itabTableType).add
runtime.(*itabTableType).add-fm
runtime.(*itabTableType).find
runtime.(*lfstack).empty
runtime.(*lfstack).pop
runtime.(*lfstack).push
runtime.(*linearAlloc).alloc
runtime.(*lockRank).String
runtime.(*mSpanList).init
runtime.(*mSpanList).insert
runtime.(*mSpanList).isEmpty
runtime.(*mSpanList).remove
runtime.(*mSpanList).takeAll
runtime.(*mSpanStateBox).get
runtime.(*mSpanStateBox).set
runtime.(*maptype).hashMightPanic
runtime.(*maptype).indirectelem
runtime.(*maptype).indirectkey
runtime.(*maptype).needkeyupdate
runtime.(*maptype).reflexivekey
runtime.(*markBits).advance
runtime.(*mcache).allocLarge
runtime.(*mcache).nextFree
runtime.(*mcache).prepareForSweep
runtime.(*mcache).refill
runtime.(*mcache).releaseAll
runtime.(*mcentral).cacheSpan
runtime.(*mcentral).fullSwept
runtime.(*mcentral).fullUnswept
runtime.(*mcentral).grow
runtime.(*mcentral).init
runtime.(*mcentral).partialSwept
runtime.(*mcentral).partialUnswept
runtime.(*mcentral).uncacheSpan
runtime.(*memRecordCycle).add
runtime.(*mheap).alloc
runtime.(*mheap).alloc.func1
runtime.(*mheap).allocMSpanLocked
runtime.(*mheap).allocManual
runtime.(*mheap).allocNeedsZero
runtime.(*mheap).allocSpan
runtime.(*mheap).freeMSpanLocked
runtime.(*mheap).freeManual
runtime.(*mheap).freeSpan
runtime.(*mheap).freeSpan.func1
runtime.(*mheap).freeSpanLocked
runtime.(*mheap).grow
runtime.(*mheap).init
runtime.(*mheap).nextSpanForSweep
runtime.(*mheap).reclaim
runtime.(*mheap).reclaimChunk
runtime.(*mheap).setSpans
runtime.(*mheap).sysAlloc
runtime.(*mheap).tryAllocMSpan
runtime.(*moduledata).textAddr
runtime.(*moduledata).textOff
runtime.(*mspan).allocBitsForIndex
runtime.(*mspan).base
runtime.(*mspan).countAlloc
runtime.(*mspan).divideByElemSize
runtime.(*mspan).ensureSwept
runtime.(*mspan).init
runtime.(*mspan).isFree
runtime.(*mspan).markBitsForBase
runtime.(*mspan).markBitsForIndex
runtime.(*mspan).nextFreeIndex
runtime.(*mspan).objIndex
runtime.(*mspan).refillAllocCache
runtime.(*mspan).reportZombies
runtime.(*muintptr).set
runtime.(*notInHeap).add
runtime.(*p).destroy
runtime.(*p).destroy.func1
runtime.(*p).init
runtime.(*pageAlloc).alloc
runtime.(*pageAlloc).allocRange
runtime.(*pageAlloc).allocToCache
runtime.(*pageAlloc).chunkOf
runtime.(*pageAlloc).find
runtime.(*pageAlloc).find.func1
runtime.(*pageAlloc).findMappedAddr
runtime.(*pageAlloc).free
runtime.(*pageAlloc).grow
runtime.(*pageAlloc).init
runtime.(*pageAlloc).scavenge
runtime.(*pageAlloc).scavenge.func1
runtime.(*pageAlloc).scavengeOne
runtime.(*pageAlloc).scavengeOne.func1
runtime.(*pageAlloc).scavengeOneFast
runtime.(*pageAlloc).scavengeRangeLocked
runtime.(*pageAlloc).scavengeReserve
runtime.(*pageAlloc).scavengeStartGen
runtime.(*pageAlloc).scavengeUnreserve
runtime.(*pageAlloc).sysGrow
runtime.(*pageAlloc).sysGrow.func1
runtime.(*pageAlloc).sysGrow.func2
runtime.(*pageAlloc).sysGrow.func3
runtime.(*pageAlloc).sysInit
runtime.(*pageAlloc).update
runtime.(*pageBits).block64
runtime.(*pageBits).clear
runtime.(*pageBits).clearAll
runtime.(*pageBits).clearBlock64
runtime.(*pageBits).clearRange
runtime.(*pageBits).popcntRange
runtime.(*pageBits).set
runtime.(*pageBits).setAll
runtime.(*pageBits).setBlock64
runtime.(*pageBits).setRange
runtime.(*pageCache).alloc
runtime.(*pageCache).allocN
runtime.(*pageCache).empty
runtime.(*pageCache).flush
runtime.(*pallocBits).allocAll
runtime.(*pallocBits).allocPages64
runtime.(*pallocBits).allocRange
runtime.(*pallocBits).find
runtime.(*pallocBits).find1
runtime.(*pallocBits).findLargeN
runtime.(*pallocBits).findSmallN
runtime.(*pallocBits).free
runtime.(*pallocBits).free1
runtime.(*pallocBits).freeAll
runtime.(*pallocBits).pages64
runtime.(*pallocBits).summarize
runtime.(*pallocData).allocAll
runtime.(*pallocData).allocRange
runtime.(*pallocData).findScavengeCandidate
runtime.(*pallocData).hasScavengeCandidate
runtime.(*piController).next
runtime.(*piController).reset
runtime.(*plainError).Error
runtime.(*pollCache).alloc
runtime.(*pollCache).free
runtime.(*pollDesc).info
runtime.(*pollDesc).publishInfo
runtime.(*pollDesc).setEventErr
runtime.(*profAtomic).cas
runtime.(*profAtomic).load
runtime.(*profBuf).canWriteRecord
runtime.(*profBuf).canWriteTwoRecords
runtime.(*profBuf).hasOverflow
runtime.(*profBuf).incrementOverflow
runtime.(*profBuf).takeOverflow
runtime.(*profBuf).wakeupExtra
runtime.(*profBuf).write
runtime.(*puintptr).set
runtime.(*randomEnum).done
runtime.(*randomEnum).next
runtime.(*randomEnum).position
runtime.(*randomOrder).reset
runtime.(*randomOrder).start
runtime.(*rwmutex).rlock
runtime.(*rwmutex).rlock.func1
runtime.(*rwmutex).runlock
runtime.(*semaRoot).dequeue
runtime.(*semaRoot).queue
runtime.(*semaRoot).rotateLeft
runtime.(*semaRoot).rotateRight
runtime.(*sigctxt).cs
runtime.(*sigctxt).fault
runtime.(*sigctxt).fixsigcode
runtime.(*sigctxt).fs
runtime.(*sigctxt).gs
runtime.(*sigctxt).preparePanic
runtime.(*sigctxt).pushCall
runtime.(*sigctxt).r10
runtime.(*sigctxt).r11
runtime.(*sigctxt).r12
runtime.(*sigctxt).r13
runtime.(*sigctxt).r14
runtime.(*sigctxt).r15
runtime.(*sigctxt).r8
runtime.(*sigctxt).r9
runtime.(*sigctxt).rax
runtime.(*sigctxt).rbp
runtime.(*sigctxt).rbx
runtime.(*sigctxt).rcx
runtime.(*sigctxt).rdi
runtime.(*sigctxt).rdx
runtime.(*sigctxt).regs
runtime.(*sigctxt).rflags
runtime.(*sigctxt).rip
runtime.(*sigctxt).rsi
runtime.(*sigctxt).rsp
runtime.(*sigctxt).set_rip
runtime.(*sigctxt).set_rsp
runtime.(*sigctxt).sigaddr
runtime.(*sigctxt).sigcode
runtime.(*sigctxt).siglr
runtime.(*sigctxt).sigpc
runtime.(*sigctxt).sigsp
runtime.(*spanSet).pop
runtime.(*spanSet).push
runtime.(*spanSet).reset
runtime.(*spanSetBlockAlloc).alloc
runtime.(*spanSetBlockAlloc).free
runtime.(*specialsIter).next
runtime.(*specialsIter).unlinkAndNext
runtime.(*specialsIter).valid
runtime.(*stackObject).setRecord
runtime.(*stackObjectRecord).gcdata
runtime.(*stackObjectRecord).ptrdata
runtime.(*stackObjectRecord).useGCProg
runtime.(*stackScanState).addObject
runtime.(*stackScanState).buildIndex
runtime.(*stackScanState).findObject
runtime.(*stackScanState).getPtr
runtime.(*stackScanState).putPtr
runtime.(*structfield).offset
runtime.(*sweepClass).clear
runtime.(*sweepClass).load
runtime.(*sweepClass).update
runtime.(*sweepLocked).sweep
runtime.(*sweepLocker).tryAcquire
runtime.(*sysMemStat).add
runtime.(*sysMemStat).load
runtime.(*timeHistogram).record
runtime.(*timespec).setNsec
runtime.(*traceAlloc).alloc
runtime.(*traceAllocBlockPtr).set
runtime.(*traceBuf).byte
runtime.(*traceBuf).varint
runtime.(*traceBufPtr).set
runtime.(*traceStack).stack
runtime.(*traceStackTable).find
runtime.(*traceStackTable).newStack
runtime.(*traceStackTable).put
runtime.(*waitReason).String
runtime.(*waitq).dequeue
runtime.(*waitq).dequeueSudoG
runtime.(*waitq).enqueue
runtime.(*wbBuf).discard
runtime.(*wbBuf).putFast
runtime.(*wbBuf).reset
runtime.(*workbuf).checkempty
runtime.(*workbuf).checknonempty
runtime.Caller
runtime.CallersFrames
runtime.FuncForPC
runtime.GOMAXPROCS
runtime.GOROOT
runtime.Gosched
runtime.LockOSThread
runtime.SetFinalizer
runtime.SetFinalizer.func1
runtime.SetFinalizer.func2
runtime.UnlockOSThread
runtime._ELF_ST_BIND
runtime._ELF_ST_TYPE
runtime._ExternalCode
runtime._GC
runtime._LostExternalCode
runtime._LostSIGPROFDuringAtomic64
runtime._System
runtime._VDSO
runtime.abort
runtime.acquireLockRank
runtime.acquireSudog
runtime.acquirem
runtime.acquirep
runtime.activeModules
runtime.add
runtime.add1
runtime.addAdjustedTimers
runtime.addOneOpenDeferFrame
runtime.addOneOpenDeferFrame.func1
runtime.addOneOpenDeferFrame.func1.1
runtime.addb
runtime.addfinalizer
runtime.addrRange.contains
runtime.addrRange.removeGreaterEqual
runtime.addrRange.size
runtime.addrRange.subtract
runtime.addrsToSummaryRange
runtime.addspecial
runtime.adjustSignalStack
runtime.adjustctxt
runtime.adjustdefers
runtime.adjustframe
runtime.adjustpanics
runtime.adjustpointer
runtime.adjustpointers
runtime.adjustsudogs
runtime.adjusttimers
runtime.advanceEvacuationMark
runtime.alginit
runtime.alignDown
runtime.alignUp
runtime.allGsSnapshot
runtime.allgadd
runtime.allocm
runtime.allocm.func1
runtime.allocmcache
runtime.allocmcache.func1
runtime.appendIntStr
runtime.archauxv
runtime.arenaIdx.l1
runtime.arenaIdx.l2
runtime.arenaIndex
runtime.args
runtime.args
runtime.argv_index
runtime.asmcgocall
runtime.asmcgocall
runtime.asminit
runtime.assertE2I
runtime.assertE2I2
runtime.assertI2I2
runtime.assertLockHeld
runtime.assertWorldStopped
runtime.assertWorldStoppedOrLockHeld
runtime.asyncPreempt
runtime.asyncPreempt2
runtime.asyncPreempt2
runtime.atoi
runtime.atoi32
runtime.atomicAllG
runtime.atomicAllGIndex
runtime.atomicstorep
runtime.atomicwb
runtime.badPointer
runtime.badTimer
runtime.badctxt
runtime.badmcall
runtime.badmcall
runtime.badmcall2
runtime.badmcall2
runtime.badmorestackg0
runtime.badmorestackg0
runtime.badmorestackgsignal
runtime.badmorestackgsignal
runtime.badreflectcall
runtime.badreflectcall
runtime.badsignal
runtime.badsystemstack
runtime.badsystemstack
runtime.badunlockosthread
runtime.beforeIdle
runtime.bgscavenge
runtime.bgscavenge.func1
runtime.bgsweep
runtime.binarySearchTree
runtime.blockAlignSummaryRange
runtime.blockableSig
runtime.blockevent
runtime.blocksampled
runtime.bool2int
runtime.boundsError.Error
runtime.bucketEvacuated
runtime.bucketMask
runtime.bucketShift
runtime.bulkBarrierBitmap
runtime.bulkBarrierPreWrite
runtime.bulkBarrierPreWriteSrcOnly
runtime.bytes
runtime.c128equal
runtime.c128hash
runtime.c64equal
runtime.c64hash
runtime.call1024
runtime.call1048576
runtime.call1073741824
runtime.call128
runtime.call131072
runtime.call134217728
runtime.call16
runtime.call16384
runtime.call16777216
runtime.call2048
runtime.call2097152
runtime.call256
runtime.call262144
runtime.call268435456
runtime.call32
runtime.call32768
runtime.call33554432
runtime.call4096
runtime.call4194304
runtime.call512
runtime.call524288
runtime.call536870912
runtime.call64
runtime.call65536
runtime.call67108864
runtime.call8192
runtime.call8388608
runtime.callCgoMmap
runtime.callCgoMunmap
runtime.callCgoSigaction
runtime.callCgoSymbolizer
runtime.callers
runtime.callers.func1
runtime.canPreemptM
runtime.canpanic
runtime.cansemacquire
runtime.casGFromPreempted
runtime.casGToPreemptScan
runtime.casfrom_Gscanstatus
runtime.casgstatus
runtime.casgstatus.func1
runtime.castogscanstatus
runtime.cfuncname
runtime.cfuncnameFromNameoff
runtime.cgoCheckBits
runtime.cgoCheckMemmove
runtime.cgoCheckSliceCopy
runtime.cgoCheckTypedBlock
runtime.cgoCheckTypedBlock.func1
runtime.cgoCheckUsingType
runtime.cgoCheckWriteBarrier
runtime.cgoCheckWriteBarrier.func1
runtime.cgoContextPCs
runtime.cgoInRange
runtime.cgoIsGoPointer
runtime.cgoSigtramp
runtime.cgocall
runtime.chanbuf
runtime.chanparkcommit
runtime.chanrecv
runtime.chanrecv.func1
runtime.chanrecv1
runtime.chansend
runtime.chansend.func1
runtime.chansend1
runtime.check
runtime.check
runtime.checkASM
runtime.checkIdleGCNoP
runtime.checkRunqsNoP
runtime.checkTimeouts
runtime.checkTimers
runtime.checkTimersNoP
runtime.checkdead
runtime.checkdead.func1
runtime.checkmcount
runtime.chunkBase
runtime.chunkIdx.l1
runtime.chunkIdx.l2
runtime.chunkIndex
runtime.chunkPageIndex
runtime.clearDeletedTimers
runtime.clearpools
runtime.clobberfree
runtime.clone
runtime.closechan
runtime.closefd
runtime.closeonexec
runtime.cmpstring
runtime.concatstring2
runtime.concatstring3
runtime.concatstring4
runtime.concatstring5
runtime.concatstrings
runtime.convT
runtime.convT64
runtime.convTnoptr
runtime.convTslice
runtime.convTstring
runtime.copystack
runtime.countSub
runtime.cpuinit
runtime.cputicks
runtime.crash
runtime.createfing
runtime.debugCallCheck
runtime.debugCallCheck
runtime.debugCallCheck.func1
runtime.debugCallPanicked
runtime.debugCallV2
runtime.debugCallWrap
runtime.debugCallWrap
runtime.debugCallWrap.func1
runtime.debugCallWrap.func2
runtime.debugCallWrap1
runtime.debugCallWrap1.func1
runtime.debugCallWrap2
runtime.debugCallWrap2.func1
runtime.decoderune
runtime.deductSweepCredit
runtime.defaultMemProfileRate
runtime.deferCallSave
runtime.deferprocStack
runtime.deferreturn
runtime.deltimer
runtime.dematerializeGCProg
runtime.dieFromSignal
runtime.divRoundUp
runtime.doInit
runtime.doSigPreempt
runtime.doaddtimer
runtime.dodeltimer
runtime.dodeltimer0
runtime.dolockOSThread
runtime.dopanic_m
runtime.dounlockOSThread
runtime.dropg
runtime.dropm
runtime.duffcopy
runtime.duffzero
runtime.dumpgstatus
runtime.dumpregs
runtime.efaceOf
runtime.efaceeq
runtime.elideWrapperCalling
runtime.empty
runtime.encoderune
runtime.endCheckmarks
runtime.ensureSigM
runtime.ensureSigM.func1
runtime.entersyscall
runtime.entersyscall
runtime.entersyscall_gcwait
runtime.entersyscall_sysmon
runtime.entersyscallblock
runtime.entersyscallblock.func1
runtime.entersyscallblock.func2
runtime.entersyscallblock_handoff
runtime.envKeyEqual
runtime.environ
runtime.epollcreate
runtime.epollcreate1
runtime.epollctl
runtime.epollwait
runtime.eqslice
runtime.errorAddressString.Error
runtime.errorString.Error
runtime.evacuate
runtime.evacuate_fast32
runtime.evacuate_fast64
runtime.evacuate_faststr
runtime.evacuated
runtime.execute
runtime.exit
runtime.exitThread
runtime.exitsyscall
runtime.exitsyscall
runtime.exitsyscall0
runtime.exitsyscallfast
runtime.exitsyscallfast.func1
runtime.exitsyscallfast_pidle
runtime.exitsyscallfast_reacquired
runtime.exitsyscallfast_reacquired.func1
runtime.expandCgoFrames
runtime.extendRandom
runtime.f32equal
runtime.f32hash
runtime.f64equal
runtime.f64hash
runtime.fastexprand
runtime.fastlog2
runtime.fastrand
runtime.fastrandinit
runtime.fastrandn
runtime.fatalpanic
runtime.fatalpanic.func1
runtime.fatalpanic.func2
runtime.fatalthrow
runtime.fatalthrow.func1
runtime.fillAligned
runtime.fillAligned.func1
runtime.findBitRange64
runtime.findObject
runtime.findfunc
runtime.findmoduledatap
runtime.findnull
runtime.findrunnable
runtime.findsghi
runtime.finishsweep_m
runtime.float64bits
runtime.float64frombits
runtime.fmtNSAsMS
runtime.forEachG
runtime.forEachGRace
runtime.forEachP
runtime.forcegchelper
runtime.freeSomeWbufs
runtime.freeSomeWbufs.func1
runtime.freeSpecial
runtime.freeStackSpans
runtime.freedefer
runtime.freedeferfn
runtime.freedeferpanic
runtime.freemcache
runtime.freemcache.func1
runtime.freezetheworld
runtime.full
runtime.funcInfo._Func
runtime.funcInfo.entry
runtime.funcInfo.valid
runtime.funcMaxSPDelta
runtime.funcdata
runtime.funcfile
runtime.funcline
runtime.funcline1
runtime.funcname
runtime.funcnameFromNameoff
runtime.funcpkgpath
runtime.funcspdelta
runtime.futex
runtime.futexsleep
runtime.futexwakeup
runtime.futexwakeup.func1
runtime.gcAssistAlloc
runtime.gcAssistAlloc.func1
runtime.gcAssistAlloc1
runtime.gcBgMarkPrepare
runtime.gcBgMarkStartWorkers
runtime.gcBgMarkWorker
runtime.gcBgMarkWorker.func1
runtime.gcBgMarkWorker.func2
runtime.gcDrain
runtime.gcDrainN
runtime.gcDumpObject
runtime.gcFlushBgCredit
runtime.gcMark
runtime.gcMarkDone
runtime.gcMarkDone.func1
runtime.gcMarkDone.func1.1
runtime.gcMarkDone.func2
runtime.gcMarkDone.func3
runtime.gcMarkRootCheck
runtime.gcMarkRootCheck.func1
runtime.gcMarkRootPrepare
runtime.gcMarkRootPrepare.func1
runtime.gcMarkTermination
runtime.gcMarkTermination.func1
runtime.gcMarkTermination.func2
runtime.gcMarkTermination.func3
runtime.gcMarkTermination.func4
runtime.gcMarkTermination.func4.1
runtime.gcMarkTinyAllocs
runtime.gcMarkWorkAvailable
runtime.gcPaceScavenger
runtime.gcPaceSweeper
runtime.gcParkAssist
runtime.gcResetMarkState
runtime.gcResetMarkState.func1
runtime.gcStart
runtime.gcStart.func1
runtime.gcStart.func2
runtime.gcSweep
runtime.gcTrigger.test
runtime.gcWakeAllAssists
runtime.gcWriteBarrier
runtime.gcWriteBarrierBX
runtime.gcWriteBarrierCX
runtime.gcWriteBarrierDX
runtime.gcWriteBarrierR8
runtime.gcWriteBarrierR9
runtime.gcWriteBarrierSI
runtime.gcallers
runtime.gcd
runtime.gcenable
runtime.gcenable.func1
runtime.gcenable.func2
runtime.gcinit
runtime.gclinkptr.ptr
runtime.gcmarknewobject
runtime.gcstopm
runtime.gentraceback
runtime.getArgInfo
runtime.getArgInfoFast
runtime.getHugePageSize
runtime.getLockRank
runtime.getMCache
runtime.getRandomData
runtime.getStackMap
runtime.getargp
runtime.getempty
runtime.getempty.func1
runtime.getitab
runtime.getpid
runtime.getproccount
runtime.getsig
runtime.gettid
runtime.gfget
runtime.gfget.func1
runtime.gfpurge
runtime.gfput
runtime.globrunqget
runtime.globrunqput
runtime.globrunqputbatch
runtime.globrunqputhead
runtime.goPanicIndex
runtime.goPanicIndexU
runtime.goPanicSlice3Acap
runtime.goPanicSlice3Alen
runtime.goPanicSlice3AlenU
runtime.goPanicSlice3B
runtime.goPanicSlice3C
runtime.goPanicSliceAcap
runtime.goPanicSliceAcapU
runtime.goPanicSliceAlen
runtime.goPanicSliceAlenU
runtime.goPanicSliceB
runtime.goPanicSliceBU
runtime.goargs
runtime.goenvs
runtime.goenvs_unix
runtime.goexit
runtime.goexit0
runtime.goexit1
runtime.goexit1
runtime.gogetenv
runtime.gogo
runtime.gopanic
runtime.gopark
runtime.goparkunlock
runtime.gopreempt_m
runtime.goready
runtime.goready.func1
runtime.gorecover
runtime.goroutineReady
runtime.goroutineheader
runtime.goschedImpl
runtime.gosched_m
runtime.goschedguarded
runtime.goschedguarded_m
runtime.gostartcall
runtime.gostartcallfn
runtime.gostring
runtime.gostringnocopy
runtime.gotraceback
runtime.goyield
runtime.goyield_m
runtime.greyobject
runtime.growWork
runtime.growWork_fast32
runtime.growWork_fast64
runtime.growWork_faststr
runtime.growslice
runtime.guintptr.ptr
runtime.gwrite
runtime.handoff
runtime.handoffp
runtime.hasPrefix
runtime.hashGrow
runtime.headTailIndex.head
runtime.headTailIndex.split
runtime.headTailIndex.tail
runtime.heapBits.bits
runtime.heapBits.forward
runtime.heapBits.forwardOrBoundary
runtime.heapBits.initSpan
runtime.heapBits.isPointer
runtime.heapBits.next
runtime.heapBits.nextArena
runtime.heapBitsForAddr
runtime.heapBitsSetType
runtime.heapBitsSetTypeGCProg
runtime.heapRetained
runtime.hexdumpWords
runtime.ifaceeq
runtime.inHeapOrStack
runtime.inPersistentAlloc
runtime.inVDSOPage
runtime.incidlelocked
runtime.init
runtime.init.0
runtime.init.1
runtime.init.4
runtime.init.5
runtime.init.6
runtime.initAlgAES
runtime.initsig
runtime.injectglist
runtime.injectglist.func1
runtime.int64Hash
runtime.interequal
runtime.interhash
runtime.intstring
runtime.isAbortPC
runtime.isAsyncSafePoint
runtime.isDirectIface
runtime.isEmpty
runtime.isExportedRuntime
runtime.isFinite
runtime.isInf
runtime.isNaN
runtime.isPowerOfTwo
runtime.isShrinkStackSafe
runtime.isSweepDone
runtime.isSystemGoroutine
runtime.itabAdd
runtime.itabHashFunc
runtime.itabsinit
runtime.iterate_itabs
runtime.itoa
runtime.itoaDiv
runtime.key32
runtime.levelIndexToOffAddr
runtime.lfnodeValidate
runtime.lfstackPack
runtime.lfstackUnpack
runtime.lock
runtime.lock2
runtime.lockInit
runtime.lockOSThread
runtime.lockRank.String
runtime.lockWithRank
runtime.lockWithRankMayAcquire
runtime.lockextra
runtime.mPark
runtime.mProf_Flush
runtime.mProf_FlushLocked
runtime.mProf_Free
runtime.mProf_Malloc
runtime.mProf_Malloc.func1
runtime.mProf_NextCycle
runtime.mReserveID
runtime.mStackIsSystemAllocated
runtime.madvise
runtime.main
runtime.main.func1
runtime.main.func2
runtime.makeAddrRange
runtime.makeBucketArray
runtime.makeHeadTailIndex
runtime.makeSpanClass
runtime.makechan
runtime.makemap
runtime.makemap_small
runtime.makeslice
runtime.makeslicecopy
runtime.malg
runtime.malg.func1
runtime.mallocgc
runtime.mallocinit
runtime.mapaccess1_fast32
runtime.mapaccess1_fast64
runtime.mapaccess2
runtime.mapaccess2_fast32
runtime.mapaccess2_fast64
runtime.mapaccess2_faststr
runtime.mapaccessK
runtime.mapassign
runtime.mapassign_fast32
runtime.mapassign_fast64ptr
runtime.mapassign_faststr
runtime.mapdelete
runtime.mapiterinit
runtime.mapiternext
runtime.markBits.isMarked
runtime.markBits.setMarked
runtime.markBits.setMarkedNonAtomic
runtime.markroot
runtime.markroot.func1
runtime.markrootBlock
runtime.markrootFreeGStacks
runtime.markrootSpans
runtime.materializeGCProg
runtime.mcall
runtime.mcommoninit
runtime.mcount
runtime.mdestroy
runtime.memclrHasPointers
runtime.memclrNoHeapPointers
runtime.memclrNoHeapPointersChunked
runtime.memequal
runtime.memequal0
runtime.memequal128
runtime.memequal16
runtime.memequal32
runtime.memequal64
runtime.memequal8
runtime.memequal_varlen
runtime.memhash
runtime.memhash128
runtime.memhash32
runtime.memhash32Fallback
runtime.memhash64
runtime.memhash64Fallback
runtime.memhashFallback
runtime.memmove
runtime.mergeSummaries
runtime.mexit
runtime.mget
runtime.mincore
runtime.minit
runtime.minitSignalMask
runtime.minitSignalStack
runtime.minitSignals
runtime.mix
runtime.mmap
runtime.mmap.func1
runtime.modtimer
runtime.moduledataverify
runtime.moduledataverify1
runtime.modulesinit
runtime.morestack
runtime.morestack_noctxt
runtime.morestackc
runtime.morestackc
runtime.moveTimers
runtime.mpreinit
runtime.mput
runtime.msigrestore
runtime.mspinning
runtime.mstart
runtime.mstart0
runtime.mstart0
runtime.mstart1
runtime.mstartm0
runtime.muintptr.ptr
runtime.munmap
runtime.munmap.func1
runtime.name.data
runtime.name.isBlank
runtime.name.isExported
runtime.name.name
runtime.name.pkgPath
runtime.name.readvarint
runtime.name.tag
runtime.nanotime
runtime.nanotime1
runtime.needm
runtime.netpoll
runtime.netpollBreak
runtime.netpollGenericInit
runtime.netpollblock
runtime.netpollblockcommit
runtime.netpollcheckerr
runtime.netpollclose
runtime.netpollgoready
runtime.netpollinit
runtime.netpollinited
runtime.netpollopen
runtime.netpollready
runtime.netpollunblock
runtime.newAllocBits
runtime.newArenaMayUnlock
runtime.newBucket
runtime.newMarkBits
runtime.newSpecialsIter
runtime.newarray
runtime.newdefer
runtime.newextram
runtime.newm
runtime.newm1
runtime.newobject
runtime.newosproc
runtime.newproc
runtime.newproc
runtime.newproc.func1
runtime.newproc1
runtime.newstack
runtime.newstack
runtime.nextFreeFast
runtime.nextMarkBitArenaEpoch
runtime.nextSample
runtime.nilfunc
runtime.nilinterequal
runtime.nilinterhash
runtime.noSignalStack
runtime.nobarrierWakeTime
runtime.noescape
runtime.nonblockingPipe
runtime.noteclear
runtime.notesleep
runtime.notetsleep
runtime.notetsleep_internal
runtime.notetsleepg
runtime.notewakeup
runtime.offAddr.add
runtime.offAddr.addr
runtime.offAddr.diff
runtime.offAddr.equal
runtime.offAddr.lessEqual
runtime.offAddr.lessThan
runtime.offAddr.sub
runtime.offAddrToLevelIndex
runtime.oneNewExtraM
runtime.open
runtime.osArchInit
runtime.osPreemptExtEnter
runtime.osPreemptExtExit
runtime.osRelax
runtime.osSetupTLS
runtime.osStackAlloc
runtime.osStackFree
runtime.osinit
runtime.osinit
runtime.osyield
runtime.osyield_no_g
runtime.overLoadFactor
runtime.pMask.clear
runtime.pMask.read
runtime.pMask.set
runtime.packPallocSum
runtime.pageIndexOf
runtime.pallocSum.end
runtime.pallocSum.max
runtime.pallocSum.start
runtime.pallocSum.unpack
runtime.panicCheck1
runtime.panicCheck2
runtime.panicIndex
runtime.panicIndexU
runtime.panicSlice3Acap
runtime.panicSlice3Alen
runtime.panicSlice3AlenU
runtime.panicSlice3B
runtime.panicSlice3C
runtime.panicSliceAcap
runtime.panicSliceAcapU
runtime.panicSliceAlen
runtime.panicSliceAlenU
runtime.panicSliceB
runtime.panicSliceBU
runtime.panicdivide
runtime.panicdottypeE
runtime.panicdottypeI
runtime.panicfloat
runtime.panicmakeslicecap
runtime.panicmakeslicelen
runtime.panicmem
runtime.panicmemAddr
runtime.panicoverflow
runtime.panicshift
runtime.panicwrap
runtime.park_m
runtime.parkunlock_c
runtime.parsedebugvars
runtime.pcdatastart
runtime.pcdatavalue
runtime.pcdatavalue1
runtime.pcdatavalue2
runtime.pcvalue
runtime.pcvalueCacheKey
runtime.persistentalloc
runtime.persistentalloc.func1
runtime.persistentalloc1
runtime.pidleget
runtime.pidleput
runtime.pipe
runtime.pipe2
runtime.plainError.Error
runtime.pollFractionalWorkerExit
runtime.pollInfo.closing
runtime.pollInfo.eventErr
runtime.pollInfo.expiredReadDeadline
runtime.pollInfo.expiredWriteDeadline
runtime.pollWork
runtime.preemptM
runtime.preemptPark
runtime.preemptall
runtime.preemptone
runtime.prepareFreeWorkbufs
runtime.preprintpanics
runtime.preprintpanics.func1
runtime.printAncestorTraceback
runtime.printAncestorTracebackFuncInfo
runtime.printArgs
runtime.printArgs.func1
runtime.printArgs.func2
runtime.printArgs.func3
runtime.printCgoTraceback
runtime.printDebugLog
runtime.printOneCgoTraceback
runtime.printScavTrace
runtime.printany
runtime.printanycustomtype
runtime.printbool
runtime.printcomplex
runtime.printcreatedby
runtime.printcreatedby1
runtime.printfloat
runtime.printhex
runtime.printint
runtime.printlock
runtime.printnl
runtime.printpanics
runtime.printpointer
runtime.printslice
runtime.printsp
runtime.printstring
runtime.printuint
runtime.printuintptr
runtime.printunlock
runtime.procPin
runtime.procUnpin
runtime.procresize
runtime.procyield
runtime.profIndex.addCountsAndClearFlags
runtime.profIndex.dataCount
runtime.profIndex.tagCount
runtime.profilealloc
runtime.progToPointerMask
runtime.publicationBarrier
runtime.puintptr.ptr
runtime.putempty
runtime.putfull
runtime.queuefinalizer
runtime.r4
runtime.r8
runtime.raise
runtime.raisebadsignal
runtime.raiseproc
runtime.rawbyteslice
runtime.rawstring
runtime.rawstringtmp
runtime.read
runtime.readGOGC
runtime.readUnaligned32
runtime.readUnaligned64
runtime.readgstatus
runtime.readvarint
runtime.readvarintUnsafe
runtime.ready
runtime.readyForScavenger
runtime.readyWithTime
runtime.recordForPanic
runtime.recordspan
runtime.recovery
runtime.recv
runtime.recvDirect
runtime.reentersyscall
runtime.reentersyscall.func1
runtime.reflectOffsLock
runtime.reflectOffsUnlock
runtime.reflectcall
runtime.reflectcall
runtime.reflectcallmove
runtime.reflectcallmove
runtime.releaseLockRank
runtime.releaseSudog
runtime.releasem
runtime.releasep
runtime.removefinalizer
runtime.removespecial
runtime.resetForSleep
runtime.resetspinning
runtime.resettimer
runtime.resolveNameOff
runtime.resolveTypeOff
runtime.restoreGsignalStack
runtime.resumeG
runtime.retake
runtime.return0
runtime.round2
runtime.roundupsize
runtime.rt0_go
runtime.rt_sigaction
runtime.rtsigprocmask
runtime.runGCProg
runtime.runOneTimer
runtime.runOpenDeferFrame
runtime.runPerThreadSyscall
runtime.runSafePointFn
runtime.runfinq
runtime.runqdrain
runtime.runqempty
runtime.runqget
runtime.runqgrab
runtime.runqput
runtime.runqputbatch
runtime.runqputslow
runtime.runqsteal
runtime.runtimer
runtime.save
runtime.saveAncestors
runtime.saveblockevent
runtime.scanConservative
runtime.scanblock
runtime.scanframeworker
runtime.scanobject
runtime.scanstack
runtime.scanstack.func1
runtime.scavengeSleep
runtime.schedEnableUser
runtime.schedEnabled
runtime.sched_getaffinity
runtime.schedinit
runtime.schedinit
runtime.schedtrace
runtime.schedtrace.func1
runtime.schedule
runtime.selectgo
runtime.selectgo.func2
runtime.selectgo.func3
runtime.selectnbrecv
runtime.selectnbsend
runtime.sellock
runtime.selparkcommit
runtime.selunlock
runtime.semacquire
runtime.semacquire1
runtime.semrelease
runtime.semrelease1
runtime.semroot
runtime.send
runtime.sendDirect
runtime.setCheckmark
runtime.setGCPhase
runtime.setGNoWB
runtime.setGsignalStack
runtime.setMNoWB
runtime.setNonblock
runtime.setSignalstackSP
runtime.setThreadCPUProfiler
runtime.setg
runtime.setprofilebucket
runtime.setsig
runtime.setsigstack
runtime.settls
runtime.shade
runtime.shouldPushSigpanic
runtime.showframe
runtime.showfuncinfo
runtime.shrinkstack
runtime.siftdownTimer
runtime.siftupTimer
runtime.sigFetchG
runtime.sigInitIgnored
runtime.sigInstallGoHandler
runtime.sigNotOnStack
runtime.sigaction
runtime.sigaction.func1
runtime.sigaddset
runtime.sigaltstack
runtime.sigblock
runtime.sigdelset
runtime.sigenable
runtime.sigfillset
runtime.sigfwd
runtime.sigfwdgo
runtime.sighandler
runtime.signalDuringFork
runtime.signalM
runtime.signalstack
runtime.signame
runtime.sigpanic
runtime.sigpanic0
runtime.sigpipe
runtime.sigprocmask
runtime.sigprof
runtime.sigprofNonGo
runtime.sigprofNonGo
runtime.sigprofNonGoPC
runtime.sigprofNonGoWrapper
runtime.sigreturn
runtime.sigsave
runtime.sigsend
runtime.sigtramp
runtime.sigtrampgo
runtime.sigtrampgo
runtime.slicebytetostring
runtime.spanAllocType.manual
runtime.spanClass.noscan
runtime.spanClass.sizeclass
runtime.spanHasNoSpecials
runtime.spanHasSpecials
runtime.spanOf
runtime.spanOfHeap
runtime.spanOfUnchecked
runtime.spillArgs
runtime.stackalloc
runtime.stackcache_clear
runtime.stackcacherefill
runtime.stackcacherelease
runtime.stackcheck
runtime.stackfree
runtime.stackinit
runtime.stacklog2
runtime.stackmapdata
runtime.stackpoolalloc
runtime.stackpoolfree
runtime.startCheckmarks
runtime.startPCforTrace
runtime.startTemplateThread
runtime.startTheWorld
runtime.startTheWorld.func1
runtime.startTheWorldGC
runtime.startTheWorldWithSema
runtime.startlockedm
runtime.startm
runtime.startpanic_m
runtime.stealWork
runtime.step
runtime.stkbucket
runtime.stkobjinit
runtime.stopTheWorld
runtime.stopTheWorld.func1
runtime.stopTheWorldGC
runtime.stopTheWorldWithSema
runtime.stoplockedm
runtime.stopm
runtime.strequal
runtime.strhash
runtime.strhashFallback
runtime.stringDataOnStack
runtime.stringStructOf
runtime.stringtoslicebyte
runtime.subtract1
runtime.subtractb
runtime.suspendG
runtime.sweepClass.split
runtime.sweepone
runtime.sweepone.func1
runtime.syncadjustsudogs
runtime.sysAlloc
runtime.sysFault
runtime.sysFree
runtime.sysHugePage
runtime.sysMap
runtime.sysMmap
runtime.sysMunmap
runtime.sysReserve
runtime.sysReserveAligned
runtime.sysSigaction
runtime.sysSigaction.func1
runtime.sysUnused
runtime.sysUsed
runtime.sysargs
runtime.sysauxv
runtime.sysmon
runtime.systemstack
runtime.systemstack_switch
runtime.templateThread
runtime.testAtomic64
runtime.tgkill
runtime.throw
runtime.throw.func1
runtime.timeSleepUntil
runtime.timediv
runtime.timer_create
runtime.timer_delete
runtime.timer_settime
runtime.tooManyOverflowBuckets
runtime.tophash
runtime.traceAcquireBuffer
runtime.traceAllocBlockPtr.ptr
runtime.traceBufPtr.ptr
runtime.traceBufPtrOf
runtime.traceEvent
runtime.traceEventLocked
runtime.traceFlush
runtime.traceFullQueue
runtime.traceGCDone
runtime.traceGCMarkAssistDone
runtime.traceGCMarkAssistStart
runtime.traceGCSTWDone
runtime.traceGCSTWStart
runtime.traceGCStart
runtime.traceGCSweepDone
runtime.traceGCSweepSpan
runtime.traceGCSweepStart
runtime.traceGoCreate
runtime.traceGoEnd
runtime.traceGoPark
runtime.traceGoPreempt
runtime.traceGoSched
runtime.traceGoStart
runtime.traceGoSysBlock
runtime.traceGoSysCall
runtime.traceGoSysExit
runtime.traceGoUnpark
runtime.traceGomaxprocs
runtime.traceHeapAlloc
runtime.traceHeapGoal
runtime.traceProcFree
runtime.traceProcStart
runtime.traceProcStop
runtime.traceReader
runtime.traceReleaseBuffer
runtime.traceStackID
runtime.traceStackPtr.ptr
runtime.tracealloc
runtime.tracealloc.func1
runtime.traceback
runtime.traceback1
runtime.tracebackCgoContext
runtime.tracebackHexdump
runtime.tracebackHexdump.func1
runtime.tracebackothers
runtime.tracebackothers.func1
runtime.tracebacktrap
runtime.tracefree
runtime.tracefree.func1
runtime.tracegc
runtime.trygetfull
runtime.typeBitsBulkBarrier
runtime.typedmemclr
runtime.typedmemmove
runtime.typedslicecopy
runtime.typehash
runtime.typelinksinit
runtime.typesEqual
runtime.unblocksig
runtime.unlock
runtime.unlock2
runtime.unlockOSThread
runtime.unlockWithRank
runtime.unlockextra
runtime.unminit
runtime.unminitSignals
runtime.unreachableMethod
runtime.unspillArgs
runtime.updateTimer0When
runtime.updateTimerModifiedEarliest
runtime.updateTimerPMask
runtime.usesLibcall
runtime.usleep
runtime.usleep_no_g
runtime.validSIGPROF
runtime.vdsoFindVersion
runtime.vdsoInitFromSysinfoEhdr
runtime.vdsoParseSymbols
runtime.vdsoParseSymbols.func1
runtime.vdsoauxv
runtime.waitReason.String
runtime.wakeNetPoller
runtime.wakeScavenger
runtime.wakefing
runtime.wakep
runtime.wantAsyncPreempt
runtime.wbBufFlush
runtime.wbBufFlush
runtime.wbBufFlush.func1
runtime.wbBufFlush1
runtime.wirep
runtime.worldStarted
runtime.worldStopped
runtime.write
runtime.write
runtime.write1
runtime.writeErr
runtime/debug.SetTraceback
runtime/internal/atomic.(*Float64).Load
runtime/internal/atomic.(*Float64).Store
runtime/internal/atomic.(*Int32).Load
runtime/internal/atomic.(*Int32).Store
runtime/internal/atomic.(*Int64).Add
runtime/internal/atomic.(*Int64).Load
runtime/internal/atomic.(*Int64).Store
runtime/internal/atomic.(*Uint32).CompareAndSwap
runtime/internal/atomic.(*Uint32).Load
runtime/internal/atomic.(*Uint32).Store
runtime/internal/atomic.(*Uint64).Add
runtime/internal/atomic.(*Uint64).Load
runtime/internal/atomic.(*Uint64).Store
runtime/internal/atomic.(*Uint8).Load
runtime/internal/atomic.(*Uint8).Store
runtime/internal/atomic.(*Uintptr).Add
runtime/internal/atomic.(*Uintptr).CompareAndSwap
runtime/internal/atomic.(*Uintptr).Load
runtime/internal/atomic.(*Uintptr).Store
runtime/internal/atomic.(*Uintptr).Swap
runtime/internal/sys.LeadingZeros64
runtime/internal/sys.OnesCount64
runtime/internal/syscall.Syscall6
setg_gcc
sort.Stable
sort.insertionSort
sort.rotate
sort.stable
sort.swapRange
sort.symMerge
strconv.(*decimal).Assign
strconv.(*decimal).Round
strconv.(*decimal).RoundDown
strconv.(*decimal).RoundUp
strconv.(*decimal).Shift
strconv.AppendFloat
strconv.AppendQuote
strconv.AppendQuoteRune
strconv.AppendQuoteRuneToASCII
strconv.AppendQuoteToASCII
strconv.CanBackquote
strconv.FormatInt
strconv.IsPrint
strconv.Itoa
strconv.appendEscapedRune
strconv.appendQuotedRuneWith
strconv.appendQuotedWith
strconv.bigFtoa
strconv.bsearch16
strconv.bsearch32
strconv.computeBounds
strconv.divisibleByPower5
strconv.divmod1e9
strconv.fmtB
strconv.fmtE
strconv.fmtF
strconv.fmtX
strconv.formatBits
strconv.formatDecimal
strconv.formatDigits
strconv.genericFtoa
strconv.init
strconv.isInGraphicList
strconv.isPowerOfTwo
strconv.leftShift
strconv.lower
strconv.max
strconv.min
strconv.mulByLog10Log2
strconv.mulByLog2Log10
strconv.mult128bitPow10
strconv.mult64bitPow10
strconv.prefixIsLessThan
strconv.rightShift
strconv.roundShortest
strconv.ryuDigits
strconv.ryuDigits32
strconv.ryuFtoaFixed32
strconv.ryuFtoaFixed64
strconv.ryuFtoaShortest
strconv.shouldRoundUp
strconv.small
strconv.trim
sync.(*Map).Load
sync.(*Map).LoadOrStore
sync.(*Map).dirtyLocked
sync.(*Map).missLocked
sync.(*Mutex).Lock
sync.(*Mutex).Unlock
sync.(*Mutex).lockSlow
sync.(*Mutex).unlockSlow
sync.(*Once).Do
sync.(*Once).doSlow
sync.(*Once).doSlow.func1
sync.(*Once).doSlow.func2
sync.(*Pool).Get
sync.(*Pool).Put
sync.(*Pool).getSlow
sync.(*Pool).pin
sync.(*Pool).pinSlow
sync.(*Pool).pinSlow.func1
sync.(*RWMutex).RLock
sync.(*RWMutex).RUnlock
sync.(*RWMutex).rUnlockSlow
sync.(*WaitGroup).Add
sync.(*WaitGroup).Done
sync.(*WaitGroup).Wait
sync.(*WaitGroup).state
sync.(*entry).load
sync.(*entry).tryExpungeLocked
sync.(*entry).tryLoadOrStore
sync.(*entry).unexpungeLocked
sync.(*poolChain).popHead
sync.(*poolChain).popTail
sync.(*poolChain).pushHead
sync.(*poolDequeue).pack
sync.(*poolDequeue).popHead
sync.(*poolDequeue).popTail
sync.(*poolDequeue).pushHead
sync.(*poolDequeue).unpack
sync.event
sync.indexLocal
sync.init
sync.init.0
sync.init.1
sync.loadPoolChainElt
sync.newEntry
sync.poolCleanup
sync.runtime_Semacquire
sync.runtime_SemacquireMutex
sync.runtime_Semrelease
sync.runtime_canSpin
sync.runtime_doSpin
sync.runtime_nanotime
sync.runtime_notifyListCheck
sync.runtime_procPin
sync.runtime_procUnpin
sync.runtime_registerPoolCleanup
sync.storePoolChainElt
sync.throw
sync/atomic.(*Value).Load
sync/atomic.(*Value).Store
sync/atomic.CompareAndSwapPointer
sync/atomic.CompareAndSwapUintptr
sync/atomic.StorePointer
sync/atomic.StoreUint32
sync/atomic.StoreUintptr
sync/atomic.runtime_procPin
sync/atomic.runtime_procUnpin
syscall.(*Errno).Error
syscall.(*Signal).String
syscall.BytePtrFromString
syscall.ByteSliceFromString
syscall.Close
syscall.Errno.Error
syscall.Exit
syscall.Getenv
syscall.Getenv.func1
syscall.Open
syscall.Read
syscall.Seek
syscall.SetNonblock
syscall.Signal.String
syscall.Syscall
syscall.Syscall6
syscall.Write
syscall.copyenv
syscall.errnoErr
syscall.fcntl
syscall.init
syscall.mmap
syscall.munmap
syscall.openat
syscall.read
syscall.runtime_envs
syscall.write
time.(*Location).String
time.(*Location).firstZoneUsed
time.(*Location).get
time.(*Location).lookup
time.(*Location).lookupFirstZone
time.(*Time).GoString
time.(*Time).String
time.(*Time).nsec
time.(*Time).sec
time.(*Time).unixSec
time.(*dataIO).big4
time.(*dataIO).big8
time.(*dataIO).byte
time.(*dataIO).read
time.(*dataIO).rest
time.(*fileSizeError).Error
time.LoadLocationFromTZData
time.Month.String
time.Sleep
time.Time.AppendFormat
time.Time.Day
time.Time.Format
time.Time.GoString
time.Time.Hour
time.Time.Location
time.Time.Minute
time.Time.Month
time.Time.Nanosecond
time.Time.Second
time.Time.String
time.Time.Year
time.Time.abs
time.Time.date
time.Time.locabs
time.Weekday.String
time.absClock
time.absDate
time.absWeekday
time.appendInt
time.byteString
time.closefd
time.daysIn
time.daysSinceEpoch
time.digitsLen
time.fileSizeError.Error
time.findZone
time.fmtInt
time.formatNano
time.get2
time.get4
time.init
time.initLocal
time.isDigit
time.isLeap
time.loadLocation
time.loadTzinfo
time.loadTzinfoFromDirOrZip
time.loadTzinfoFromZip
time.loadTzinfoFromZip.func1
time.nextStdChunk
time.now
time.open
time.preadn
time.quote
time.read
time.readFile
time.readFile.func1
time.resetTimer
time.separator
time.startsWithLowerCase
time.stdFracSecond
time.stopTimer
time.tzruleTime
time.tzset
time.tzsetName
time.tzsetNum
time.tzsetOffset
time.tzsetRule
type..eq.[15]internal/cpu.option
type..eq.[2]runtime.Frame
type..eq.context.valueCtx
type..eq.fmt.fmt
type..eq.internal/abi.RegArgs
type..eq.internal/cpu.option
type..eq.internal/poll.FD
type..eq.internal/reflectlite.uncommonType
type..eq.io/fs.PathError
type..eq.math/rand.Rand
type..eq.os.file
type..eq.reflect.MapIter
type..eq.reflect.Method
type..eq.reflect.ValueError
type..eq.reflect.hiter
type..eq.reflect.makeFuncCtxt
type..eq.reflect.methodValue
type..eq.reflect.uncommonType
type..eq.runtime.Frame
type..eq.runtime.TypeAssertionError
type..eq.runtime._func
type..eq.runtime._panic
type..eq.runtime.bitvector
type..eq.runtime.boundsError
type..eq.runtime.errorAddressString
type..eq.runtime.funcinl
type..eq.runtime.gcWork
type..eq.runtime.hchan
type..eq.runtime.itab
type..eq.runtime.mOS
type..eq.runtime.mcache
type..eq.runtime.modulehash
type..eq.runtime.mspan
type..eq.runtime.special
type..eq.runtime.sudog
type..eq.runtime.sysmontick
type..eq.struct { runtime.gList; runtime.n int32 }
type..eq.sync.WaitGroup
type..eq.sync.poolLocal
type..eq.sync.poolLocalInternal
type..eq.time.zone
type..eq.time.zoneTrans
unicode.init
unicode/utf8.DecodeRune
unicode/utf8.DecodeRuneInString
unicode/utf8.EncodeRune
unicode/utf8.RuneCount
unicode/utf8.RuneCountInString
unicode/utf8.RuneLen
unicode/utf8.ValidRune
(dlv) funcs /^os.*/
(dlv) funcs ^os.*
os.(*File).Read
os.(*File).Write
os.(*File).checkValid
os.(*File).read
os.(*File).wrapErr
os.(*File).write
os.(*dirInfo).close
os.(*file).close
os.Exit
os.NewFile
os.epipecheck
os.errDeadlineExceeded
os.errNoDeadline
os.glob..func1
os.init
os.init.0
os.newFile
os.runtime_args
os.runtime_beforeExit
os.sigpipe
os/signal.(*handler).set
os/signal.(*handler).want
os/signal.Notify
os/signal.Notify.func1
os/signal.Notify.func1.1
os/signal.Notify.func2
os/signal.enableSignal
os/signal.init.0
os/signal.loop
os/signal.process
os/signal.process.func1
os/signal.signal_enable
os/signal.signal_ignored
os/signal.signal_recv
os/signal.signum
(dlv) break os.runtime_beforeExit
Breakpoint 19 set at 0x460f20 for os.runtime_beforeExit() /usr/local/go/src/runtime/proc.go:285
(dlv) clearall
Watchpoint id cleared at 0xc0000b0e30
Breakpoint 19 cleared at 0x460f20 for os.runtime_beforeExit() /usr/local/go/src/runtime/proc.go:285
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) continue.go:33
(dlv) continue main.go:33
Breakpoint 20 set at 0x4b7601 for main.produceValues() ./main.go:33
> main.produceValues() ./main.go:33 (hits goroutine(10):1 total:1) (PC: 0x4b7601)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) list main.produceValues
Showing /home/deparker/Code/ultimate-go-debugging/day-2/session/main.go:23 (PC: 0x4b7512)
    18:	type packet struct {
    19:		id  int
    20:		val []byte
    21:	}
    22:	
    23:	func produceValues(ctx context.Context, wg *sync.WaitGroup, ch chan<- packet) {
    24:		// Let WaitGroup know we're finished executing.
    25:		defer wg.Done()
    26:		// Create a bytes buffer of length 64.
    27:		buf := make([]byte, 1<<6)
    28:	
(dlv) args
ctx = context.Context(*context.cancelCtx) 0xc0000b0f98
wg = (*sync.WaitGroup)(0xc0000140b0)
ch = chan<- main.packet 0/0
(dlv) list
> main.produceValues() ./main.go:33 (hits total:0) (PC: 0x4b7601)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) next
> main.produceValues() ./main.go:37 (PC: 0x4b7658)
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
=>  37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
(dlv) 
> main.produceValues() ./main.go:39 (PC: 0x4b76a7)
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
=>  39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
    44:			}
(dlv) locals
buf = []uint8 len: 64, cap: 64, [...]
id = 3772082188157195411
p = main.packet {id: 3772082188157195411, val: []uint8 len: 64, cap: 64, [...]}
(dlv) display -a id
0: id = 3772082188157195411
(dlv) continue main.go:33
Breakpoint 21 set at 0x4b7601 for main.produceValues() ./main.go:33
> main.produceValues() ./main.go:33 (hits goroutine(10):1 total:1) (PC: 0x4b7601)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
0: id = 1908846536570031542
(dlv) display -a p
1: p = error could not find symbol value for p
(dlv) continue main.go:33
Breakpoint 22 set at 0x4b7601 for main.produceValues() ./main.go:33
> main.produceValues() ./main.go:33 (hits goroutine(10):1 total:1) (PC: 0x4b7601)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
0: id = 8127105976089125613
1: p = error could not find symbol value for p
(dlv) continue main.go:38
Breakpoint 23 set at 0x4b7717 for main.produceValues() ./main.go:38
> main.produceValues() ./main.go:38 (hits goroutine(10):1 total:1) (PC: 0x4b7717)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
0: id = 8127105976089125613
1: p = main.packet {id: 8127105976089125613, val: []uint8 len: 64, cap: 64, [...]}
(dlv) help display
Print value of an expression every time the program stops.

	display -a [%format] <expression>
	display -d <number>

The '-a' option adds an expression to the list of expression printed every time the program stops. The '-d' option removes the specified expression from the list.

If display is called without arguments it will print the value of all expression in the list.
(dlv) display -a "%x" id
2: "%x" id = error 1:6: expected 'EOF', found id
(dlv) display -a %x id
3: id = 70c947d374bf22ed
(dlv) continue main.go:38
Breakpoint 24 set at 0x4b7717 for main.produceValues() ./main.go:38
> main.produceValues() ./main.go:38 (hits goroutine(10):1 total:1) (PC: 0x4b7717)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
0: id = 87080728741627053
1: p = main.packet {id: 87080728741627053, val: []uint8 len: 64, cap: 64, [...]}
2: "%x" id = error 1:6: expected 'EOF', found id
3: id = 1355f761f6d44ad
(dlv) display -d 2
(dlv) continue main.go:38
Breakpoint 25 set at 0x4b7717 for main.produceValues() ./main.go:38
> main.produceValues() ./main.go:38 (hits goroutine(10):1 total:1) (PC: 0x4b7717)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
0: id = 2076113403954747389
1: p = main.packet {id: 2076113403954747389, val: []uint8 len: 64, cap: 64, [...]}
3: id = 1ccfd624242657fd
(dlv) continue main.go:38
Breakpoint 26 set at 0x4b7717 for main.produceValues() ./main.go:38
> main.produceValues() ./main.go:38 (hits goroutine(10):1 total:1) (PC: 0x4b7717)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
0: id = 5212667267928779305
1: p = main.packet {id: 5212667267928779305, val: []uint8 len: 64, cap: 64, [...]}
3: id = 48571d4325336a29
(dlv) print &p
(*main.packet)(0xc0000b0f20)
(dlv) help examinemem
Examine raw memory at the given address.

Examine memory:

	examinemem [-fmt <format>] [-count|-len <count>] [-size <size>] <address>
	examinemem [-fmt <format>] [-count|-len <count>] [-size <size>] -x <expression>

Format represents the data format and the value is one of this list (default hex): bin(binary), oct(octal), dec(decimal), hex(hexadecimal), addr(address).
Length is the number of bytes (default 1) and must be less than or equal to 1000.
Address is the memory location of the target to examine. Please note '-len' is deprecated by '-count and -size'.
Expression can be an integer expression or pointer value of the memory location to examine.

For example:

    x -fmt hex -count 20 -size 1 0xc00008af38
    x -fmt hex -count 20 -size 1 -x 0xc00008af38 + 8
    x -fmt hex -count 20 -size 1 -x &myVar
    x -fmt hex -count 20 -size 1 -x myPtrVar
(dlv) x -fmt hex -count 20 0xc0000b0f20
0xc0000b0f20:   0x29   0x6a   0x33   0x25   0x43   0x1d   0x57   0x48   
0xc0000b0f28:   0x00   0xc0   0x11   0x00   0xc0   0x00   0x00   0x00   
0xc0000b0f30:   0x40   0x00   0x00   0x00   
(dlv) x -fmt bin -count 20 0xc0000b0f20
0xc0000b0f20:   00101001   01101010   00110011   00100101   
0xc0000b0f24:   01000011   00011101   01010111   01001000   
0xc0000b0f28:   00000000   11000000   00010001   00000000   
0xc0000b0f2c:   11000000   00000000   00000000   00000000   
0xc0000b0f30:   01000000   00000000   00000000   00000000   
(dlv) whatis p
main.packet
(dlv) what id
(dlv) whatis id
int
(dlv) print p
main.packet {
	id: 5212667267928779305,
	val: []uint8 len: 64, cap: 64, [23,141,97,90,253,223,71,120,78,70,24,162,202,64,204,236,176,93,98,29,165,47,39,43,140,248,79,127,216,23,124,131,175,21,128,210,90,118,76,192,100,54,214,113,113,203,93,30,59,57,54,123,70,217,165,157,132,157,135,171,107,252,243,251],}
(dlv) print p.id
5212667267928779305
(dlv) print p.val
[]uint8 len: 64, cap: 64, [23,141,97,90,253,223,71,120,78,70,24,162,202,64,204,236,176,93,98,29,165,47,39,43,140,248,79,127,216,23,124,131,175,21,128,210,90,118,76,192,100,54,214,113,113,203,93,30,59,57,54,123,70,217,165,157,132,157,135,171,107,252,243,251]
(dlv) print p.val[5]
223
(dlv) print p.val[5:10]
[]uint8 len: 5, cap: 5, [223,71,120,78,70]
(dlv) print p.id
5212667267928779305
(dlv) set p.id = 500
(dlv) locals
buf = []uint8 len: 64, cap: 64, [...]
id = 5212667267928779305
p = main.packet {id: 500, val: []uint8 len: 64, cap: 64, [...]}
(dlv) print p.id
500
(dlv) regs
    Rip = 0x00000000004b7717
    Rsp = 0x000000c0000b0df8
    Rax = 0x000000c0000282a0
    Rbx = 0x0000000000000040
    Rcx = 0x000000c00011c000
    Rdx = 0x0000000000000040
    Rsi = 0x48571d4325336a29
    Rdi = 0x000000c0000b0d10
    Rbp = 0x000000c0000b0f80
     R8 = 0x000000c0000b8170
     R9 = 0x0000000000000000
    R10 = 0x00000000004e0b20
    R11 = 0x00000000004e0b20
    R12 = 0x000000c0000b0da8
    R13 = 0x0000000000000000
    R14 = 0x000000c0000d8340
    R15 = 0x0000000000000000
 Rflags = 0x0000000000000216	[PF AF IF IOPL=0]
     Es = 0x0000000000000000
     Cs = 0x0000000000000033
     Ss = 0x000000000000002b
     Ds = 0x0000000000000000
     Fs = 0x0000000000000000
     Gs = 0x0000000000000000
Fs_base = 0x000000c000100490
Gs_base = 0x0000000000000000

(dlv) regs -a
    Rip = 0x00000000004b7717
    Rsp = 0x000000c0000b0df8
    Rax = 0x000000c0000282a0
    Rbx = 0x0000000000000040
    Rcx = 0x000000c00011c000
    Rdx = 0x0000000000000040
    Rsi = 0x48571d4325336a29
    Rdi = 0x000000c0000b0d10
    Rbp = 0x000000c0000b0f80
     R8 = 0x000000c0000b8170
     R9 = 0x0000000000000000
    R10 = 0x00000000004e0b20
    R11 = 0x00000000004e0b20
    R12 = 0x000000c0000b0da8
    R13 = 0x0000000000000000
    R14 = 0x000000c0000d8340
    R15 = 0x0000000000000000
   XMM0 = 0x33373038303138343336303134363836	v2_int={ 3336303134363836 3337303830313834 }	v4_int={ 34363836 33363031 30313834 33373038 }	v8_int={ 3836 3436 3031 3336 3834 3031 3038 3337 }	v16_int={ 36 38 36 34 31 30 36 33 34 38 31 30 38 30 37 33 }	v2_float={ 5.393664987194168e-62 5.636777427689336e-62 }	v4_float={ 1.697052e-07 4.2419007e-08 6.4472094e-10 4.2651862e-08 }
   XMM1 = 0x0000000002005f42345b237c4877ffcc	v2_int={ 345b237c4877ffcc 0000000002005f42 }	v4_int={ 4877ffcc 345b237c 02005f42 00000000 }	v8_int={ ffcc 4877 237c 345b 5f42 0200 0000 0000 }	v16_int={ cc ff 77 48 7c 23 5b 34 42 5f 00 02 00 00 00 00 }	v2_float={ 1.7293723315858209e-56 1.65901404e-316 }	v4_float={ 253951.19 2.0408874e-07 9.431292e-38 0 }
   XMM2 = 0x000000c00011c00062920bd0bf101bbe	v2_int={ 62920bd0bf101bbe 000000c00011c000 }	v4_int={ bf101bbe 62920bd0 0011c000 000000c0 }	v8_int={ 1bbe bf10 0bd0 6292 c000 0011 00c0 0000 }	v16_int={ be 1b 10 bf d0 0b 92 62 00 c0 11 00 c0 00 00 00 }	v2_float={ 6.650928416171577e+166 4.07423766594e-312 }	v4_float={ -0.5629233 1.3470379e+21 1.63008e-39 2.69e-43 }
   XMM3 = 0x000000c00011c00016fa4203101fa86b	v2_int={ 16fa4203101fa86b 000000c00011c000 }	v4_int={ 101fa86b 16fa4203 0011c000 000000c0 }	v8_int={ a86b 101f 4203 16fa c000 0011 00c0 0000 }	v16_int={ 6b a8 1f 10 03 42 fa 16 00 c0 11 00 c0 00 00 00 }	v2_float={ 5.4886075364596575e-198 4.07423766594e-312 }	v4_float={ 3.1486965e-29 4.0431338e-25 1.63008e-39 2.69e-43 }
   XMM4 = 0x000000c00011c0004d65822107fcfd52	v2_int={ 4d65822107fcfd52 000000c00011c000 }	v4_int={ 07fcfd52 4d658221 0011c000 000000c0 }	v8_int={ fd52 07fc 8221 4d65 c000 0011 00c0 0000 }	v16_int={ 52 fd fc 07 21 82 65 4d 00 c0 11 00 c0 00 00 00 }	v2_float={ 7.078406569534682e+64 4.07423766594e-312 }	v4_float={ 3.8065634e-34 2.4065691e+08 1.63008e-39 2.69e-43 }
   XMM5 = 0x000000c00011c00016fa4203101fa86b	v2_int={ 16fa4203101fa86b 000000c00011c000 }	v4_int={ 101fa86b 16fa4203 0011c000 000000c0 }	v8_int={ a86b 101f 4203 16fa c000 0011 00c0 0000 }	v16_int={ 6b a8 1f 10 03 42 fa 16 00 c0 11 00 c0 00 00 00 }	v2_float={ 5.4886075364596575e-198 4.07423766594e-312 }	v4_float={ 3.1486965e-29 4.0431338e-25 1.63008e-39 2.69e-43 }
   XMM6 = 0x00000000000000400000000000000040	v2_int={ 0000000000000040 0000000000000040 }	v4_int={ 00000040 00000000 00000040 00000000 }	v8_int={ 0040 0000 0000 0000 0040 0000 0000 0000 }	v16_int={ 40 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 }	v2_float={ 3.16e-322 3.16e-322 }	v4_float={ 9e-44 0 9e-44 0 }
   XMM7 = 0x000000c00011c0007d7b0115cfe216aa	v2_int={ 7d7b0115cfe216aa 000000c00011c000 }	v4_int={ cfe216aa 7d7b0115 0011c000 000000c0 }	v8_int={ 16aa cfe2 0115 7d7b c000 0011 00c0 0000 }	v16_int={ aa 16 e2 cf 15 01 7b 7d 00 c0 11 00 c0 00 00 00 }	v2_float={ 2.7594828223969416e+296 4.07423766594e-312 }	v4_float={ -7.586272e+09 2.0852615e+37 1.63008e-39 2.69e-43 }
   XMM8 = 0x00000000000000400000000000000040	v2_int={ 0000000000000040 0000000000000040 }	v4_int={ 00000040 00000000 00000040 00000000 }	v8_int={ 0040 0000 0000 0000 0040 0000 0000 0000 }	v16_int={ 40 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 }	v2_float={ 3.16e-322 3.16e-322 }	v4_float={ 9e-44 0 9e-44 0 }
   XMM9 = 0x000000c00011c000787f75351d68ade9	v2_int={ 787f75351d68ade9 000000c00011c000 }	v4_int={ 1d68ade9 787f7535 0011c000 000000c0 }	v8_int={ ade9 1d68 7535 787f c000 0011 00c0 0000 }	v16_int={ e9 ad 68 1d 35 75 7f 78 00 c0 11 00 c0 00 00 00 }	v2_float={ 2.659040918613624e+272 4.07423766594e-312 }	v4_float={ 3.0794854e-21 2.0725202e+34 1.63008e-39 2.69e-43 }
  XMM10 = 0x00000000000000400000000000000040	v2_int={ 0000000000000040 0000000000000040 }	v4_int={ 00000040 00000000 00000040 00000000 }	v8_int={ 0040 0000 0000 0000 0040 0000 0000 0000 }	v16_int={ 40 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 }	v2_float={ 3.16e-322 3.16e-322 }	v4_float={ 9e-44 0 9e-44 0 }
  XMM11 = 0x000000c00011c00039a4a9b95bae229b	v2_int={ 39a4a9b95bae229b 000000c00011c000 }	v4_int={ 5bae229b 39a4a9b9 0011c000 000000c0 }	v8_int={ 229b 5bae a9b9 39a4 c000 0011 00c0 0000 }	v16_int={ 9b 22 ae 5b b9 a9 a4 39 00 c0 11 00 c0 00 00 00 }	v2_float={ 5.093818977707425e-31 4.07423766594e-312 }	v4_float={ 9.802939e+16 0.0003140697 1.63008e-39 2.69e-43 }
  XMM12 = 0x00000000000000400000000000000040	v2_int={ 0000000000000040 0000000000000040 }	v4_int={ 00000040 00000000 00000040 00000000 }	v8_int={ 0040 0000 0000 0000 0040 0000 0000 0000 }	v16_int={ 40 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 }	v2_float={ 3.16e-322 3.16e-322 }	v4_float={ 9e-44 0 9e-44 0 }
  XMM13 = 0x00000000000000400000000000000040	v2_int={ 0000000000000040 0000000000000040 }	v4_int={ 00000040 00000000 00000040 00000000 }	v8_int={ 0040 0000 0000 0000 0040 0000 0000 0000 }	v16_int={ 40 00 00 00 00 00 00 00 40 00 00 00 00 00 00 00 }	v2_float={ 3.16e-322 3.16e-322 }	v4_float={ 9e-44 0 9e-44 0 }
  XMM14 = 0x000000c00011c0003f1f46e83699caf3	v2_int={ 3f1f46e83699caf3 000000c00011c000 }	v4_int={ 3699caf3 3f1f46e8 0011c000 000000c0 }	v8_int={ caf3 3699 46e8 3f1f c000 0011 00c0 0000 }	v16_int={ f3 ca 99 36 e8 46 1f 3f 00 c0 11 00 c0 00 00 00 }	v2_float={ 0.00011931221311005015 4.07423766594e-312 }	v4_float={ 4.5833817e-06 0.6221757 1.63008e-39 2.69e-43 }
  XMM15 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  ST(0) = 0x00000000000000000000	0
  ST(1) = 0x00000000000000000000	0
  ST(2) = 0x00000000000000000000	0
  ST(3) = 0x00000000000000000000	0
  ST(4) = 0x00000000000000000000	0
  ST(5) = 0x00000000000000000000	0
  ST(6) = 0x00000000000000000000	0
  ST(7) = 0x00000000000000000000	0
 Rflags = 0x0000000000000216	[PF AF IF IOPL=0]
     Es = 0x0000000000000000
     Cs = 0x0000000000000033
     Ss = 0x000000000000002b
     Ds = 0x0000000000000000
     Fs = 0x0000000000000000
     Gs = 0x0000000000000000
Fs_base = 0x000000c000100490
Gs_base = 0x0000000000000000
  MXCSR = 0x00001fa0	[RZ/RN=0 PM UM OM ZM DM IM PE]
     CW = 0x037f
     SW = 0x0000

(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) 
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) vars
strconv.optimize = true
strconv.ErrRange = error(*errors.errorString) 0x55ce48
strconv.ErrSyntax = error(*errors.errorString) 0x55ce58
strconv.leftcheats = []strconv.leftCheat len: 61, cap: 61, [...]
strconv.detailedPowersOfTen = [696][2]uint64 [...]
strconv.float32info = strconv.floatInfo {mantbits: 23, expbits: 8, bias: -127}
strconv.float64info = strconv.floatInfo {mantbits: 52, expbits: 11, bias: -1023}
strconv.uint64pow10 = [20]uint64 [...]
strconv.isPrint16 = []uint16 len: 434, cap: 434, [...]
strconv.isNotPrint16 = []uint16 len: 132, cap: 132, [...]
strconv.isPrint32 = []uint32 len: 468, cap: 468, [...]
strconv.isNotPrint32 = []uint16 len: 95, cap: 95, [...]
strconv.isGraphic = []uint16 len: 16, cap: 16, [...]
os/signal.handlers = struct { sync.Mutex; os/signal.m map[chan<- os.Signal]*os/signal.handler; os/signal.ref [65]int64; os/signal.stopping []os/signal.stopping } {Mutex: (*sync.Mutex)(0x55d5a0), m: map[chan<- os.Signal]*os/signal.handler [...], ref: [65]int64 [...],...+1 more}
os/signal.watchSignalLoopOnce = sync.Once {done: 1, m: (*sync.Mutex)(0x58bf24)}
os/signal.watchSignalLoop = os/signal.loop
internal/cpu.DebugOptions = true
internal/cpu.CacheLineSize = 64
internal/cpu.X86 = struct { internal/cpu._ internal/cpu.CacheLinePad; HasAES bool; HasADX bool; HasAVX bool; HasAVX2 bool; HasBMI1 bool; HasBMI2 bool; HasERMS bool; HasFMA bool; HasOSXSAVE bool; HasPCLMULQDQ bool; HasPOPCNT bool; HasRDTSCP bool; HasSSE3 bool; HasSSSE3 bool; HasSSE41 bool; HasSSE42 bool; internal/cpu._ internal/cpu.CacheLinePad } {_: (*"internal/cpu.CacheLinePad")(0x58c380), HasAES: true, HasADX: true,...+15 more}
internal/cpu.options = []internal/cpu.option len: 15, cap: 15, [...]
internal/cpu.maxExtendedFunctionInformation = 2147483680
math/rand.globalRand = ("*math/rand.Rand")(0xc0000b8150)
math/rand.rngCooked = [607]int64 [...]
io/ioutil.Discard = io.Writer(io.discard) {}
fmt.ppFree = sync.Pool {noCopy: sync.noCopy {}, local: unsafe.Pointer(0xc0000c3000), localSize: 32,...+3 more}
fmt.complexError = error(*errors.errorString) 0x55cbf8
fmt.boolError = error(*errors.errorString) 0x55cbe8
os.dirBufPool = sync.Pool {noCopy: sync.noCopy {}, local: unsafe.Pointer(0x0), localSize: 0,...+3 more}
os.ErrInvalid = error(*errors.errorString) 0x55cdb8
os.ErrPermission = error(*errors.errorString) 0x55cde8
os.ErrExist = error(*errors.errorString) 0x55cda8
os.ErrNotExist = error(*errors.errorString) 0x55cdd8
os.ErrClosed = error(*errors.errorString) 0x55cd88
os.ErrNoDeadline = error(*errors.errorString) 0x55cdc8
os.ErrDeadlineExceeded = error(*internal/poll.DeadlineExceededError) 0x55cd98
os.ErrProcessDone = error(*errors.errorString) 0x55cdf8
os.Stdin = (*os.File)(0xc00000e010)
os.Stdout = (*os.File)(0xc00000e018)
os.Stderr = (*os.File)(0xc00000e020)
os.errWriteAtInAppendMode = error(*errors.errorString) 0x55ce18
os.Args = []string len: 1, cap: 1, [...]
os.errPatternHasSeparator = error(*errors.errorString) 0x55ce08
internal/poll.errEAGAIN = error(syscall.Errno) EAGAIN (11)
internal/poll.errEINVAL = error(syscall.Errno) EINVAL (22)
internal/poll.errENOENT = error(syscall.Errno) ENOENT (2)
internal/poll.ErrFileClosing = error(*errors.errorString) 0x55cc58
internal/poll.ErrNoDeadline = error(*errors.errorString) 0x55cc68
internal/poll.ErrDeadlineExceeded = error(*internal/poll.DeadlineExceededError) 0x555518
internal/poll.ErrNotPollable = error(*errors.errorString) 0x55cc78
internal/poll.serverInit = sync.Once {done: 0, m: (*sync.Mutex)(0x58bf04)}
internal/poll.CloseFunc = syscall.Close
internal/bytealg.MaxLen = 63
internal/syscall/unix.FcntlSyscall = 72
internal/testlog.panicOnExit0 = struct { internal/testlog.mu sync.Mutex; internal/testlog.val bool } {mu: (*sync.Mutex)(0x58bf10), val: false}
io/fs.ErrInvalid = error(*errors.errorString) 0x55cd38
io/fs.ErrPermission = error(*errors.errorString) 0x55cd58
io/fs.ErrExist = error(*errors.errorString) 0x55cd28
io/fs.ErrNotExist = error(*errors.errorString) 0x55cd48
io/fs.ErrClosed = error(*errors.errorString) 0x55cd18
io/fs.SkipDir = error(*errors.errorString) 0x55cd68
runtime.useAeshash = true
runtime.aeskeysched = [128]uint8 [...]
runtime.hashkey = [4]uintptr [...]
runtime.iscgo = false
runtime.cgoHasExtraM = false
runtime.cgo_yield = (*unsafe.Pointer)(0x55ca18)
runtime.ncgocall = 0
runtime.x86HasPOPCNT = true
runtime.x86HasSSE41 = true
runtime.x86HasFMA = true
runtime.useAVXmemmove = true
runtime.cpuprof = runtime.cpuProfile {lock: (*runtime.mutex)(0x55f3a0), on: false, log: *runtime.profBuf nil,...+4 more}
runtime._cgo_setenv = unsafe.Pointer(0x0)
runtime._cgo_unsetenv = unsafe.Pointer(0x0)
runtime.boundsErrorFmts = [9]string [...]
runtime.boundsNegErrorFmts = [8]string [...]
runtime.defaultGOROOT = "/usr/local/go"
runtime.buildVersion = "go1.18"
runtime.fastlog2Table = [33]float64 [...]
runtime.inf = +Inf
runtime.itabLock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.itabTable = (*runtime.itabTableType)(0x55b9c0)
runtime.itabTableInit = runtime.itabTableType {size: 512, count: 23, entries: [512]*runtime.itab [...]}
runtime.uint16Eface = (unreadable could not resolve interface type)
runtime.uint32Eface = (unreadable could not resolve interface type)
runtime.uint64Eface = (unreadable could not resolve interface type)
runtime.stringEface = (unreadable could not resolve interface type)
runtime.sliceEface = (unreadable could not resolve interface type)
runtime.uint16Type = (*runtime._type)(0x4c0f60)
runtime.uint32Type = (*runtime._type)(0x4c0fa0)
runtime.uint64Type = (*runtime._type)(0x4c0fe0)
runtime.stringType = (*runtime._type)(0x4c0ea0)
runtime.sliceType = (*runtime._type)(0x4c2900)
runtime.staticuint64s = [256]uint64 [...]
runtime.lockNames = []string len: 51, cap: 51, [...]
runtime.physPageSize = 4096
runtime.physHugePageSize = 2097152
runtime.physHugePageShift = 21
runtime.zerobase = 0
runtime.globalAlloc = struct { runtime.mutex; runtime.persistentAlloc } {mutex: (*runtime.mutex)(0x58bf80), persistentAlloc: (*runtime.persistentAlloc)(0x58bf88)}
runtime.persistentChunks = (*runtime.notInHeap)(0x7f208bc1d000)
runtime.zeroVal = [1024]uint8 [...]
runtime.emptymspan = runtime.mspan {next: *runtime.mspan nil, prev: *runtime.mspan nil, list: *runtime.mSpanList nil,...+18 more}
runtime.useCheckmark = false
runtime.adviseUnused = 8
runtime.finlock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.fing = (*runtime.g)(0xc0000036c0)
runtime.finq = *runtime.finblock nil
runtime.finc = *runtime.finblock nil
runtime.finptrmask = [64]uint8 [...]
runtime.fingwait = true
runtime.fingwake = false
runtime.allfin = *runtime.finblock nil
runtime.finalizer1 = [5]uint8 [...]
runtime.fingCreate = 1
runtime.fingRunning = false
runtime.gcphase = 0
runtime.writeBarrier = struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.needed bool; runtime.cgo bool; runtime.alignme uint64 } {enabled: false, pad: [3]uint8 [...], needed: false,...+2 more}
runtime.gcBlackenEnabled = 0
runtime.work = struct { runtime.full runtime.lfstack; runtime.empty runtime.lfstack; runtime.pad0 internal/cpu.CacheLinePad; runtime.wbufSpans struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }; runtime._ uint32; runtime.bytesMarked uint64; runtime.markrootNext uint32; runtime.markrootJobs uint32; runtime.nproc uint32; runtime.tstart int64; runtime.nwait uint32; runtime.nDataRoots int; runtime.nBSSRoots int; runtime.nSpanRoots int; runtime.nStackRoots int; runtime.baseData uint32; runtime.baseBSS uint32; runtime.baseSpans uint32; runtime.baseStacks uint32; runtime.baseEnd uint32; runtime.stackRoots []*runtime.g; runtime.startSema uint32; runtime.markDoneSema uint32; runtime.bgMarkReady runtime.note; runtime.bgMarkDone uint32; runtime.mode runtime.gcMode; runtime.userForced bool; runtime.totaltime int64; runtime.initialHeapLive uint64; runtime.assistQueue struct { runtime.lock runtime.mutex; runtime.q runtime.gQueue }; runtime.sweepWaiters struct { runtime.lock runtime.mutex; runtime.list runtime.gList }; runtime.cycles uint32; runtime.stwprocs int32; runtime.maxprocs int32; runtime.tSweepTerm int64; runtime.tMark int64; runtime.tMarkTerm int64; runtime.tEnd int64; runtime.pauseNS int64; runtime.pauseStart int64; runtime.heap0 uint64; runtime.heap1 uint64; runtime.heap2 uint64; runtime.heapGoal uint64 } {full: 0, empty: 0, pad0: (*"internal/cpu.CacheLinePad")(0x55d3f0),...+41 more}
runtime.gcMarkDoneFlushed = 0
runtime.poolcleanup = sync.poolCleanup
runtime.oneptrmask = [1]uint8 [...]
runtime.gcController = runtime.gcControllerState {gcPercent: (*"runtime/internal/atomic.Int32")(0x58c740), _: 0, heapMinimum: 4194304,...+29 more}
runtime.scavenge = struct { runtime.lock runtime.mutex; runtime.g *runtime.g; runtime.parked bool; runtime.timer *runtime.timer; runtime.sysmonWake uint32; runtime.printControllerReset bool } {lock: (*runtime.mutex)(0x55d140), g: (*runtime.g)(0xc000003040), parked: true,...+3 more}
runtime.sweep = runtime.sweepdata {lock: (*runtime.mutex)(0x55d180), g: (*runtime.g)(0xc000002ea0), parked: true,...+5 more}
runtime.mheap_ = runtime.mheap {lock: (*runtime.mutex)(0x5752c0), pages: (*runtime.pageAlloc)(0x5752c8), sweepgen: 0,...+27 more}
runtime.mSpanStateNames = []string len: 4, cap: 4, [...]
runtime.gcBitsArenas = struct { runtime.lock runtime.mutex; runtime.free *runtime.gcBitsArena; runtime.next *runtime.gcBitsArena; runtime.current *runtime.gcBitsArena; runtime.previous *runtime.gcBitsArena } {lock: (*runtime.mutex)(0x58c000), free: *runtime.gcBitsArena nil, next: (*runtime.gcBitsArena)(0x7f208bc9d000),...+2 more}
runtime.maxSearchAddr = runtime.offAddr {a: 140737488355327}
runtime.levelBits = [5]uint [...]
runtime.levelShift = [5]uint [...]
runtime.levelLogPages = [5]uint [...]
runtime.proflock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.mbuckets = *runtime.bucket nil
runtime.bbuckets = *runtime.bucket nil
runtime.xbuckets = *runtime.bucket nil
runtime.buckhash = *[179999]*runtime.bucket nil
runtime.bucketmem = 0
runtime.mProf = struct { runtime.cycle uint32; runtime.flushed bool } {cycle: 0, flushed: false}
runtime.blockprofilerate = 0
runtime.mutexprofilerate = 0
runtime.MemProfileRate = 0
runtime.disableMemoryProfiling = true
runtime.tracelock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.minOffAddr = runtime.offAddr {a: 18446603336221196288}
runtime.maxOffAddr = runtime.offAddr {a: 140737488355327}
runtime.spanSetBlockPool = runtime.spanSetBlockAlloc {stack: 0}
runtime.memstats = runtime.mstats {alloc: 0, total_alloc: 0, sys: 0,...+33 more}
runtime.netpollInitLock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.netpollInited = 1
runtime.pollcache = runtime.pollCache {lock: (*runtime.mutex)(0x58bf60), first: *runtime.pollDesc nil}
runtime.netpollWaiters = 0
runtime.pdEface = interface {}(*runtime.pollDesc) 0x555668
runtime.pdType = (*runtime._type)(0x4c6860)
runtime.epfd = 3
runtime.netpollBreakRd = 4
runtime.netpollBreakWr = 5
runtime.netpollWakeSig = 0
runtime.procAuxv = []uint8 len: 16, cap: 16, [...]
runtime.addrspace_vec = [1]uint8 [...]
runtime.startupRandomData = []uint8 len: 16, cap: 16, [...]
runtime.sysTHPSizePath = []uint8 len: 51, cap: 51, [...]
runtime.urandom_dev = []uint8 len: 13, cap: 13, [...]
runtime.perThreadSyscall = runtime.perThreadSyscallArgs {trap: 0, a1: 0, a2: 0,...+6 more}
runtime.sigset_all = runtime.sigset [...]
runtime.shiftError = error(runtime.errorString) "negative shift amount"
runtime.divideError = error(runtime.errorString) "integer divide by zero"
runtime.overflowError = error(runtime.errorString) "integer overflow"
runtime.floatError = error(runtime.errorString) "floating point error"
runtime.memoryError = error(runtime.errorString) "invalid memory address or nil pointer dereference"
runtime.runningPanicDefers = 0
runtime.panicking = 0
runtime.paniclk = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.didothers = false
runtime.deadlock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.asyncPreemptStack = 472
runtime.printBacklog = [512]uint8 [...]
runtime.printBacklogIndex = 0
runtime.debuglock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.minhexdigits = 0
runtime.modinfo = "0w�\f�t\b\x02A��\a��\x18�path\tgithub.com/delve-training/day-2/session\nmod...+391 more"
runtime.m0 = runtime.m {g0: (*runtime.g)(0x55d240), morebuf: (*runtime.gobuf)(0x55d7e8), divmod: 0,...+59 more}
runtime.g0 = runtime.g {stack: (*runtime.stack)(0x55d240), stackguard0: 140733163598312, stackguard1: 140733163598312,...+48 more}
runtime.mcache0 = *runtime.mcache nil
runtime.main_init_done = chan bool 0/0
runtime.mainStarted = true
runtime.runtimeInitTime = 1856661509950943
runtime.initSigmask = runtime.sigset [...]
runtime.badmorestackg0Msg = "fatal: morestack on g0\n"
runtime.badmorestackgsignalMsg = "fatal: morestack on gsignal\n"
runtime.allglock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.allgs = []*runtime.g len: 11, cap: 16, [...]
runtime.allglen = 11
runtime.allgptr = (**runtime.g)(0xc0000da000)
runtime.fastrandseed = 11310856381504048368
runtime.freezing = 0
runtime.worldsema = 1
runtime.gcsema = 1
runtime.earlycgocallback = []uint8 len: 42, cap: 42, [...]
runtime.extram = 0
runtime.extraMCount = 0
runtime.extraMWaiters = 0
runtime.allocmLock = runtime.rwmutex {rLock: (*runtime.mutex)(0x58c080), readers: 0, readerPass: 0,...+4 more}
runtime.execLock = runtime.rwmutex {rLock: (*runtime.mutex)(0x58c0c0), readers: 0, readerPass: 0,...+4 more}
runtime.newmHandoff = struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 } {lock: (*runtime.mutex)(0x58c040), newm: 0, waiting: true,...+2 more}
runtime.inForkedChild = false
runtime.prof = struct { runtime.signalLock uint32; runtime.hz int32 } {signalLock: 0, hz: 0}
runtime.forcegcperiod = 120000000000
runtime.starttime = 0
runtime.stealOrder = runtime.randomOrder {count: 32, coprimes: []uint32 len: 16, cap: 16, [...]}
runtime.inittrace = runtime.tracestat {active: false, id: 0, allocs: 0,...+1 more}
runtime.envs = []string len: 46, cap: 46, [...]
runtime.argslice = []string len: 1, cap: 1, [...]
runtime.traceback_cache = 4
runtime.traceback_env = 4
runtime.argc = 1
runtime.argv = (**uint8)(0x7ffefe3a6e18)
runtime.test_z64 = 3298534883331
runtime.test_x64 = 42
runtime.debug = struct { runtime.cgocheck int32; runtime.clobberfree int32; runtime.efence int32; runtime.gccheckmark int32; runtime.gcpacertrace int32; runtime.gcshrinkstackoff int32; runtime.gcstoptheworld int32; runtime.gctrace int32; runtime.invalidptr int32; runtime.madvdontneed int32; runtime.scavtrace int32; runtime.scheddetail int32; runtime.schedtrace int32; runtime.tracebackancestors int32; runtime.asyncpreemptoff int32; runtime.harddecommit int32; runtime.malloc bool; runtime.allocfreetrace int32; runtime.inittrace int32; runtime.sbrk int32 } {cgocheck: 1, clobberfree: 0, efence: 0,...+17 more}
runtime.dbgvars = []runtime.dbgVar len: 19, cap: 19, [...]
runtime.waitReasonStrings = [27]string [...]
runtime.allm = (*runtime.m)(0xc000100400)
runtime.gomaxprocs = 32
runtime.ncpu = 32
runtime.forcegc = runtime.forcegcstate {lock: (*runtime.mutex)(0x55cfb0), g: (*runtime.g)(0xc000002680), idle: 1}
runtime.sched = runtime.schedt {goidgen: 16, lastpoll: 1859641192924216, pollUntil: 0,...+34 more}
runtime.newprocs = 0
runtime.allpLock = runtime.mutex {lockRankStruct: runtime.lockRankStruct {}, key: 0}
runtime.allp = []*runtime.p len: 32, cap: 32, [...]
runtime.idlepMask = runtime.pMask len: 1, cap: 1, [...]
runtime.timerpMask = runtime.pMask len: 1, cap: 1, [...]
runtime.gcBgMarkWorkerPool = 0
runtime.gcBgMarkWorkerCount = 0
runtime.processorVersionInfo = 8851216
runtime.isIntel = false
runtime.islibrary = false
runtime.isarchive = false
runtime.chansendpc = 4215488
runtime.chanrecvpc = 4218048
runtime.semtable = [251]struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 } [...]
runtime.fwdSig = [65]uintptr [...]
runtime.handlingSig = [65]uint32 [...]
runtime.disableSigChan = chan uint32 0/0
runtime.enableSigChan = chan uint32 0/0
runtime.maskUpdatedChan = chan struct {} 0/0
runtime.signalsOK = true
runtime.sigprofCallers = runtime.cgoCallers [...]
runtime.sigprofCallersUse = 0
runtime.crashing = 0
runtime.testSigtrap = nil
runtime.testSigusr1 = nil
runtime.badginsignalMsg = "fatal: bad g in signal handler\n"
runtime.sigsetAllExiting = runtime.sigset [...]
runtime.sig = struct { runtime.note runtime.note; runtime.mask [3]uint32; runtime.wanted [3]uint32; runtime.ignored [3]uint32; runtime.recv [3]uint32; runtime.state uint32; runtime.delivering uint32; runtime.inuse bool } {note: (*runtime.note)(0x58c1a0), mask: [3]uint32 [...], wanted: [3]uint32 [...],...+5 more}
runtime.sigtable = [65]runtime.sigTabT [...]
runtime.class_to_size = [68]uint16 [...]
runtime.class_to_allocnpages = [68]uint8 [...]
runtime.class_to_divmagic = [68]uint32 [...]
runtime.size_to_class8 = [129]uint8 [...]
runtime.size_to_class128 = [249]uint8 [...]
runtime.stackpool = [4]struct { runtime.item runtime.stackpoolItem; runtime._ [40]uint8 } [...]
runtime.stackLarge = struct { runtime.lock runtime.mutex; runtime.free [35]runtime.mSpanList } {lock: (*runtime.mutex)(0x58ccc0), free: [35]runtime.mSpanList [...]}
runtime.maxstacksize = 1000000000
runtime.maxstackceiling = 2000000000
runtime.methodValueCallFrameObjs = [1]runtime.stackObjectRecord [...]
runtime.badsystemstackMsg = "fatal: systemstack called from unexpected goroutine"
runtime.intArgRegs = 9
runtime.pinnedTypemaps = []map[runtime.typeOff]*runtime._type len: 0, cap: 0, nil
runtime.firstmoduledata = runtime.moduledata {pcHeader: (*runtime.pcHeader)(0x4e2b00), funcnametab: []uint8 len: 50744, cap: 50744, [...], cutab: []uint32 len: 1968, cap: 1968, [...],...+38 more}
runtime.modulesSlice = (*[]*runtime.moduledata)(0xc00000c000)
runtime.faketime = 0
runtime.overrideWrite = nil
runtime.trace = struct { runtime.lock runtime.mutex; runtime.lockOwner *runtime.g; runtime.enabled bool; runtime.shutdown bool; runtime.headerWritten bool; runtime.footerWritten bool; runtime.shutdownSema uint32; runtime.seqStart uint64; runtime.ticksStart int64; runtime.ticksEnd int64; runtime.timeStart int64; runtime.timeEnd int64; runtime.seqGC uint64; runtime.reading runtime.traceBufPtr; runtime.empty runtime.traceBufPtr; runtime.fullHead runtime.traceBufPtr; runtime.fullTail runtime.traceBufPtr; runtime.reader runtime.guintptr; runtime.stackTab runtime.traceStackTable; runtime.stringsLock runtime.mutex; runtime.strings map[string]uint64; runtime.stringSeq uint64; runtime.markWorkerLabels [4]uint64; runtime.bufLock runtime.mutex; runtime.buf runtime.traceBufPtr } {lock: (*runtime.mutex)(0x5651e0), lockOwner: *runtime.g nil, enabled: false,...+22 more}
runtime.gStatusStrings = [10]string [...]
runtime.cgoTraceback = unsafe.Pointer(0x0)
runtime.cgoSymbolizer = unsafe.Pointer(0x0)
runtime.reflectOffs = struct { runtime.lock runtime.mutex; runtime.next int32; runtime.m map[int32]unsafe.Pointer; runtime.minv map[unsafe.Pointer]int32 } {lock: (*runtime.mutex)(0x55d0c0), next: 0, m: map[int32]unsafe.Pointer nil,...+1 more}
runtime.vdsoLinuxVersion = runtime.vdsoVersionKey {version: "LINUX_2.6", verHash: 61765110}
runtime.vdsoSymbolKeys = []runtime.vdsoSymbolKey len: 2, cap: 2, [...]
runtime.vdsoGettimeofdaySym = 140733163883472
runtime.vdsoClockgettimeSym = 140733163883536
_cgo_init = unsafe.Pointer(0x0)
_cgo_thread_start = unsafe.Pointer(0x0)
_cgo_notify_runtime_init_done = unsafe.Pointer(0x0)
_cgo_callers = unsafe.Pointer(0x0)
_cgo_yield = unsafe.Pointer(0x0)
_cgo_mmap = unsafe.Pointer(0x0)
_cgo_munmap = unsafe.Pointer(0x0)
_cgo_sigaction = unsafe.Pointer(0x0)
path.ErrBadPattern = error(*errors.errorString) 0x55ce28
internal/reflectlite.kindNames = []string len: 27, cap: 27, [...]
errors.errorType = internal/reflectlite.Type(*internal/reflectlite.rtype) 0x55cbd8
sync/atomic.firstStoreInProgress = 0
sync.expunged = unsafe.Pointer(0xc000010040)
sync.allPoolsMu = sync.Mutex {state: 0, sema: 0}
sync.allPools = []*sync.Pool len: 1, cap: 1, [...]
sync.oldPools = []*sync.Pool len: 0, cap: 0, nil
io.ErrShortWrite = error(*errors.errorString) 0x55ccc8
io.errInvalidWrite = error(*errors.errorString) 0x55cce8
io.ErrShortBuffer = error(*errors.errorString) 0x55ccb8
io.EOF = error(*errors.errorString) 0x55cc88
io.ErrUnexpectedEOF = error(*errors.errorString) 0x55ccd8
io.ErrNoProgress = error(*errors.errorString) 0x55cca8
io.errWhence = error(*errors.errorString) 0x55cd08
io.errOffset = error(*errors.errorString) 0x55ccf8
io.Discard = io.Writer(io.discard) {}
io.ErrClosedPipe = error(*errors.errorString) 0x55cc98
unicode/utf8.first = [256]uint8 [...]
unicode/utf8.acceptRanges = [16]unicode/utf8.acceptRange [...]
unicode.Categories = map[string]*unicode.RangeTable [...]
unicode.Cc = (*unicode.RangeTable)(0x557960)
unicode.Cf = (*unicode.RangeTable)(0x558ee0)
unicode.Co = (*unicode.RangeTable)(0x5593a0)
unicode.Cs = (*unicode.RangeTable)(0x555c20)
unicode.Nd = (*unicode.RangeTable)(0x557e60)
unicode.L = (*unicode.RangeTable)(0x555ea0)
unicode.Lm = (*unicode.RangeTable)(0x5564e0)
unicode.Lo = (*unicode.RangeTable)(0x5567e0)
unicode.Ll = (*unicode.RangeTable)(0x5561a0)
unicode.M = (*unicode.RangeTable)(0x557020)
unicode.Mc = (*unicode.RangeTable)(0x557320)
unicode.Me = (*unicode.RangeTable)(0x557620)
unicode.Mn = (*unicode.RangeTable)(0x557820)
unicode.Nl = (*unicode.RangeTable)(0x5581e0)
unicode.No = (*unicode.RangeTable)(0x558520)
unicode.N = (*unicode.RangeTable)(0x557b60)
unicode.C = (*unicode.RangeTable)(0x555a20)
unicode.Pc = (*unicode.RangeTable)(0x558ba0)
unicode.Pd = (*unicode.RangeTable)(0x558de0)
unicode.Pe = (*unicode.RangeTable)(0x5590e0)
unicode.Pf = (*unicode.RangeTable)(0x559120)
unicode.Pi = (*unicode.RangeTable)(0x559160)
unicode.Po = (*unicode.RangeTable)(0x5591a0)
unicode.Ps = (*unicode.RangeTable)(0x5591e0)
unicode.P = (*unicode.RangeTable)(0x5588a0)
unicode.Sc = (*unicode.RangeTable)(0x559260)
unicode.Sk = (*unicode.RangeTable)(0x5592a0)
unicode.Sm = (*unicode.RangeTable)(0x5592e0)
unicode.So = (*unicode.RangeTable)(0x559320)
unicode.Z = (*unicode.RangeTable)(0x559360)
unicode.S = (*unicode.RangeTable)(0x559220)
unicode.Lt = (*unicode.RangeTable)(0x556ae0)
unicode.Lu = (*unicode.RangeTable)(0x556d20)
unicode.Zl = (*unicode.RangeTable)(0x5593e0)
unicode.Zp = (*unicode.RangeTable)(0x559420)
unicode.Zs = (*unicode.RangeTable)(0x559460)
unicode.Scripts = map[string]*unicode.RangeTable [...]
unicode.Adlam = (*unicode.RangeTable)(0x5594a0)
unicode.Ahom = (*unicode.RangeTable)(0x555a60)
unicode.Anatolian_Hieroglyphs = (*unicode.RangeTable)(0x555aa0)
unicode.Arabic = (*unicode.RangeTable)(0x555ae0)
unicode.Armenian = (*unicode.RangeTable)(0x555b20)
unicode.Avestan = (*unicode.RangeTable)(0x555b60)
unicode.Balinese = (*unicode.RangeTable)(0x555ba0)
unicode.Bamum = (*unicode.RangeTable)(0x555be0)
unicode.Bassa_Vah = (*unicode.RangeTable)(0x555c60)
unicode.Batak = (*unicode.RangeTable)(0x555ca0)
unicode.Bengali = (*unicode.RangeTable)(0x555ce0)
unicode.Bhaiksuki = (*unicode.RangeTable)(0x555d20)
unicode.Bopomofo = (*unicode.RangeTable)(0x555d60)
unicode.Brahmi = (*unicode.RangeTable)(0x555da0)
unicode.Braille = (*unicode.RangeTable)(0x555de0)
unicode.Buginese = (*unicode.RangeTable)(0x555e20)
unicode.Buhid = (*unicode.RangeTable)(0x555e60)
unicode.Canadian_Aboriginal = (*unicode.RangeTable)(0x555ee0)
unicode.Carian = (*unicode.RangeTable)(0x555f20)
unicode.Caucasian_Albanian = (*unicode.RangeTable)(0x555f60)
unicode.Chakma = (*unicode.RangeTable)(0x555fa0)
unicode.Cham = (*unicode.RangeTable)(0x555fe0)
unicode.Cherokee = (*unicode.RangeTable)(0x556020)
unicode.Chorasmian = (*unicode.RangeTable)(0x556060)
unicode.Common = (*unicode.RangeTable)(0x5560a0)
unicode.Coptic = (*unicode.RangeTable)(0x5560e0)
unicode.Cuneiform = (*unicode.RangeTable)(0x556120)
unicode.Cypriot = (*unicode.RangeTable)(0x556160)
unicode.Cyrillic = (*unicode.RangeTable)(0x5561e0)
unicode.Deseret = (*unicode.RangeTable)(0x556220)
unicode.Devanagari = (*unicode.RangeTable)(0x556260)
unicode.Dives_Akuru = (*unicode.RangeTable)(0x5562a0)
unicode.Dogra = (*unicode.RangeTable)(0x5562e0)
unicode.Duployan = (*unicode.RangeTable)(0x556320)
unicode.Egyptian_Hieroglyphs = (*unicode.RangeTable)(0x556360)
unicode.Elbasan = (*unicode.RangeTable)(0x5563a0)
unicode.Elymaic = (*unicode.RangeTable)(0x5563e0)
unicode.Ethiopic = (*unicode.RangeTable)(0x556420)
unicode.Georgian = (*unicode.RangeTable)(0x556460)
unicode.Glagolitic = (*unicode.RangeTable)(0x5564a0)
unicode.Gothic = (*unicode.RangeTable)(0x556520)
unicode.Grantha = (*unicode.RangeTable)(0x556560)
unicode.Greek = (*unicode.RangeTable)(0x5565a0)
unicode.Gujarati = (*unicode.RangeTable)(0x5565e0)
unicode.Gunjala_Gondi = (*unicode.RangeTable)(0x556620)
unicode.Gurmukhi = (*unicode.RangeTable)(0x556660)
unicode.Han = (*unicode.RangeTable)(0x5566a0)
unicode.Hangul = (*unicode.RangeTable)(0x5566e0)
unicode.Hanifi_Rohingya = (*unicode.RangeTable)(0x556720)
unicode.Hanunoo = (*unicode.RangeTable)(0x556760)
unicode.Hatran = (*unicode.RangeTable)(0x5567a0)
unicode.Hebrew = (*unicode.RangeTable)(0x556820)
unicode.Hiragana = (*unicode.RangeTable)(0x556860)
unicode.Imperial_Aramaic = (*unicode.RangeTable)(0x5568a0)
unicode.Inherited = (*unicode.RangeTable)(0x5568e0)
unicode.Inscriptional_Pahlavi = (*unicode.RangeTable)(0x556920)
unicode.Inscriptional_Parthian = (*unicode.RangeTable)(0x556960)
unicode.Javanese = (*unicode.RangeTable)(0x5569a0)
unicode.Kaithi = (*unicode.RangeTable)(0x5569e0)
unicode.Kannada = (*unicode.RangeTable)(0x556a20)
unicode.Katakana = (*unicode.RangeTable)(0x556a60)
unicode.Kayah_Li = (*unicode.RangeTable)(0x556aa0)
unicode.Kharoshthi = (*unicode.RangeTable)(0x556b20)
unicode.Khitan_Small_Script = (*unicode.RangeTable)(0x556b60)
unicode.Khmer = (*unicode.RangeTable)(0x556ba0)
unicode.Khojki = (*unicode.RangeTable)(0x556be0)
unicode.Khudawadi = (*unicode.RangeTable)(0x556c20)
unicode.Lao = (*unicode.RangeTable)(0x556c60)
unicode.Latin = (*unicode.RangeTable)(0x556ca0)
unicode.Lepcha = (*unicode.RangeTable)(0x556ce0)
unicode.Limbu = (*unicode.RangeTable)(0x556d60)
unicode.Linear_A = (*unicode.RangeTable)(0x556da0)
unicode.Linear_B = (*unicode.RangeTable)(0x556de0)
unicode.Lisu = (*unicode.RangeTable)(0x556e20)
unicode.Lycian = (*unicode.RangeTable)(0x556e60)
unicode.Lydian = (*unicode.RangeTable)(0x556ea0)
unicode.Mahajani = (*unicode.RangeTable)(0x556ee0)
unicode.Makasar = (*unicode.RangeTable)(0x556f20)
unicode.Malayalam = (*unicode.RangeTable)(0x556f60)
unicode.Mandaic = (*unicode.RangeTable)(0x556fa0)
unicode.Manichaean = (*unicode.RangeTable)(0x556fe0)
unicode.Marchen = (*unicode.RangeTable)(0x557060)
unicode.Masaram_Gondi = (*unicode.RangeTable)(0x5570a0)
unicode.Medefaidrin = (*unicode.RangeTable)(0x5570e0)
unicode.Meetei_Mayek = (*unicode.RangeTable)(0x557120)
unicode.Mende_Kikakui = (*unicode.RangeTable)(0x557160)
unicode.Meroitic_Cursive = (*unicode.RangeTable)(0x5571a0)
unicode.Meroitic_Hieroglyphs = (*unicode.RangeTable)(0x5571e0)
unicode.Miao = (*unicode.RangeTable)(0x557220)
unicode.Modi = (*unicode.RangeTable)(0x557260)
unicode.Mongolian = (*unicode.RangeTable)(0x5572a0)
unicode.Mro = (*unicode.RangeTable)(0x5572e0)
unicode.Multani = (*unicode.RangeTable)(0x557360)
unicode.Myanmar = (*unicode.RangeTable)(0x5573a0)
unicode.Nabataean = (*unicode.RangeTable)(0x5573e0)
unicode.Nandinagari = (*unicode.RangeTable)(0x557420)
unicode.New_Tai_Lue = (*unicode.RangeTable)(0x557460)
unicode.Newa = (*unicode.RangeTable)(0x5574a0)
unicode.Nko = (*unicode.RangeTable)(0x5574e0)
unicode.Nushu = (*unicode.RangeTable)(0x557520)
unicode.Nyiakeng_Puachue_Hmong = (*unicode.RangeTable)(0x557560)
unicode.Ogham = (*unicode.RangeTable)(0x5575a0)
unicode.Ol_Chiki = (*unicode.RangeTable)(0x5575e0)
unicode.Old_Hungarian = (*unicode.RangeTable)(0x557660)
unicode.Old_Italic = (*unicode.RangeTable)(0x5576a0)
unicode.Old_North_Arabian = (*unicode.RangeTable)(0x5576e0)
unicode.Old_Permic = (*unicode.RangeTable)(0x557720)
unicode.Old_Persian = (*unicode.RangeTable)(0x557760)
unicode.Old_Sogdian = (*unicode.RangeTable)(0x5577a0)
unicode.Old_South_Arabian = (*unicode.RangeTable)(0x5577e0)
unicode.Old_Turkic = (*unicode.RangeTable)(0x557860)
unicode.Oriya = (*unicode.RangeTable)(0x5578a0)
unicode.Osage = (*unicode.RangeTable)(0x5578e0)
unicode.Osmanya = (*unicode.RangeTable)(0x557920)
unicode.Pahawh_Hmong = (*unicode.RangeTable)(0x5579a0)
unicode.Palmyrene = (*unicode.RangeTable)(0x5579e0)
unicode.Pau_Cin_Hau = (*unicode.RangeTable)(0x557a20)
unicode.Phags_Pa = (*unicode.RangeTable)(0x557a60)
unicode.Phoenician = (*unicode.RangeTable)(0x557aa0)
unicode.Psalter_Pahlavi = (*unicode.RangeTable)(0x557ae0)
unicode.Rejang = (*unicode.RangeTable)(0x557b20)
unicode.Runic = (*unicode.RangeTable)(0x557ba0)
unicode.Samaritan = (*unicode.RangeTable)(0x557be0)
unicode.Saurashtra = (*unicode.RangeTable)(0x557c20)
unicode.Sharada = (*unicode.RangeTable)(0x557c60)
unicode.Shavian = (*unicode.RangeTable)(0x557ca0)
unicode.Siddham = (*unicode.RangeTable)(0x557ce0)
unicode.SignWriting = (*unicode.RangeTable)(0x557d20)
unicode.Sinhala = (*unicode.RangeTable)(0x557d60)
unicode.Sogdian = (*unicode.RangeTable)(0x557da0)
unicode.Sora_Sompeng = (*unicode.RangeTable)(0x557de0)
unicode.Soyombo = (*unicode.RangeTable)(0x557e20)
unicode.Sundanese = (*unicode.RangeTable)(0x557ea0)
unicode.Syloti_Nagri = (*unicode.RangeTable)(0x557ee0)
unicode.Syriac = (*unicode.RangeTable)(0x557f20)
unicode.Tagalog = (*unicode.RangeTable)(0x557f60)
unicode.Tagbanwa = (*unicode.RangeTable)(0x557fa0)
unicode.Tai_Le = (*unicode.RangeTable)(0x557fe0)
unicode.Tai_Tham = (*unicode.RangeTable)(0x558020)
unicode.Tai_Viet = (*unicode.RangeTable)(0x558060)
unicode.Takri = (*unicode.RangeTable)(0x5580a0)
unicode.Tamil = (*unicode.RangeTable)(0x5580e0)
unicode.Tangut = (*unicode.RangeTable)(0x558120)
unicode.Telugu = (*unicode.RangeTable)(0x558160)
unicode.Thaana = (*unicode.RangeTable)(0x5581a0)
unicode.Thai = (*unicode.RangeTable)(0x558220)
unicode.Tibetan = (*unicode.RangeTable)(0x558260)
unicode.Tifinagh = (*unicode.RangeTable)(0x5582a0)
unicode.Tirhuta = (*unicode.RangeTable)(0x5582e0)
unicode.Ugaritic = (*unicode.RangeTable)(0x558320)
unicode.Vai = (*unicode.RangeTable)(0x558360)
unicode.Wancho = (*unicode.RangeTable)(0x5583a0)
unicode.Warang_Citi = (*unicode.RangeTable)(0x5583e0)
unicode.Yezidi = (*unicode.RangeTable)(0x558420)
unicode.Yi = (*unicode.RangeTable)(0x558460)
unicode.Zanabazar_Square = (*unicode.RangeTable)(0x5584a0)
unicode.Properties = map[string]*unicode.RangeTable [...]
unicode.ASCII_Hex_Digit = (*unicode.RangeTable)(0x5584e0)
unicode.Bidi_Control = (*unicode.RangeTable)(0x558560)
unicode.Dash = (*unicode.RangeTable)(0x5585a0)
unicode.Deprecated = (*unicode.RangeTable)(0x5585e0)
unicode.Diacritic = (*unicode.RangeTable)(0x558620)
unicode.Extender = (*unicode.RangeTable)(0x558660)
unicode.Hex_Digit = (*unicode.RangeTable)(0x5586a0)
unicode.Hyphen = (*unicode.RangeTable)(0x5586e0)
unicode.IDS_Binary_Operator = (*unicode.RangeTable)(0x558720)
unicode.IDS_Trinary_Operator = (*unicode.RangeTable)(0x558760)
unicode.Ideographic = (*unicode.RangeTable)(0x5587a0)
unicode.Join_Control = (*unicode.RangeTable)(0x5587e0)
unicode.Logical_Order_Exception = (*unicode.RangeTable)(0x558820)
unicode.Noncharacter_Code_Point = (*unicode.RangeTable)(0x558860)
unicode.Other_Alphabetic = (*unicode.RangeTable)(0x5588e0)
unicode.Other_Default_Ignorable_Code_Point = (*unicode.RangeTable)(0x558920)
unicode.Other_Grapheme_Extend = (*unicode.RangeTable)(0x558960)
unicode.Other_ID_Continue = (*unicode.RangeTable)(0x5589a0)
unicode.Other_ID_Start = (*unicode.RangeTable)(0x5589e0)
unicode.Other_Lowercase = (*unicode.RangeTable)(0x558a20)
unicode.Other_Math = (*unicode.RangeTable)(0x558a60)
unicode.Other_Uppercase = (*unicode.RangeTable)(0x558aa0)
unicode.Pattern_Syntax = (*unicode.RangeTable)(0x558ae0)
unicode.Pattern_White_Space = (*unicode.RangeTable)(0x558b20)
unicode.Prepended_Concatenation_Mark = (*unicode.RangeTable)(0x558b60)
unicode.Quotation_Mark = (*unicode.RangeTable)(0x558be0)
unicode.Radical = (*unicode.RangeTable)(0x558c20)
unicode.Regional_Indicator = (*unicode.RangeTable)(0x558c60)
unicode.Sentence_Terminal = (*unicode.RangeTable)(0x558ca0)
unicode.Soft_Dotted = (*unicode.RangeTable)(0x558ce0)
unicode.Terminal_Punctuation = (*unicode.RangeTable)(0x558d20)
unicode.Unified_Ideograph = (*unicode.RangeTable)(0x558d60)
unicode.Variation_Selector = (*unicode.RangeTable)(0x558da0)
unicode.White_Space = (*unicode.RangeTable)(0x558e20)
unicode.FoldCategory = map[string]*unicode.RangeTable [...]
unicode.foldL = (*unicode.RangeTable)(0x558e60)
unicode.foldLl = (*unicode.RangeTable)(0x558ea0)
unicode.foldLt = (*unicode.RangeTable)(0x558f20)
unicode.foldLu = (*unicode.RangeTable)(0x558f60)
unicode.foldM = (*unicode.RangeTable)(0x558fa0)
unicode.foldMn = (*unicode.RangeTable)(0x558fe0)
unicode.FoldScript = map[string]*unicode.RangeTable [...]
unicode.foldCommon = (*unicode.RangeTable)(0x559020)
unicode.foldGreek = (*unicode.RangeTable)(0x559060)
unicode.foldInherited = (*unicode.RangeTable)(0x5590a0)
bytes.ErrTooLarge = error(*errors.errorString) 0x55cb88
bytes.errNegativeRead = error(*errors.errorString) 0x55cb98
bytes.errUnreadByte = error(*errors.errorString) 0x55cba8
internal/oserror.ErrInvalid = error(*errors.errorString) 0x55cc28
internal/oserror.ErrPermission = error(*errors.errorString) 0x55cc48
internal/oserror.ErrExist = error(*errors.errorString) 0x55cc18
internal/oserror.ErrNotExist = error(*errors.errorString) 0x55cc38
internal/oserror.ErrClosed = error(*errors.errorString) 0x55cc08
syscall.envOnce = sync.Once {done: 0, m: (*sync.Mutex)(0x58bf34)}
syscall.envLock = sync.RWMutex {w: (*sync.Mutex)(0x58bfa0), writerSem: 0, readerSem: 0,...+2 more}
syscall.env = map[string]int nil
syscall.envs = []string len: 46, cap: 48, [...]
syscall._zero = 0
syscall.Stdin = 0
syscall.Stdout = 1
syscall.Stderr = 2
syscall.errEAGAIN = error(syscall.Errno) EAGAIN (11)
syscall.errEINVAL = error(syscall.Errno) EINVAL (22)
syscall.errENOENT = error(syscall.Errno) ENOENT (2)
syscall.errors = [133]string [...]
syscall.signals = [32]string [...]
time.std0x = [6]int [...]
time.longDayNames = []string len: 7, cap: 7, [...]
time.longMonthNames = []string len: 12, cap: 12, [...]
time.atoiError = error(*errors.errorString) 0x55ce68
time.errBad = error(*errors.errorString) 0x55ce88
time.errLeadingInt = error(*errors.errorString) 0x55ce98
time.unitMap = map[string]uint64 [...]
time.daysBefore = [13]int32 [...]
time.startNano = 1856661510415822
time.UTC = (*time.Location)(0x5595a0)
time.utcLoc = time.Location {name: "UTC", zone: []time.zone len: 0, cap: 0, nil, tx: []time.zoneTrans len: 0, cap: 0, nil,...+4 more}
time.Local = (*time.Location)(0x55d1c0)
time.localLoc = time.Location {name: "", zone: []time.zone len: 0, cap: 0, nil, tx: []time.zoneTrans len: 0, cap: 0, nil,...+4 more}
time.localOnce = sync.Once {done: 0, m: (*sync.Mutex)(0x58bf44)}
time.errLocation = error(*errors.errorString) 0x55cea8
time.loadFromEmbeddedTZData = nil
time.badData = error(*errors.errorString) 0x55ce78
time.loadTzinfoFromTzdata = nil
time.zoneSources = []string len: 4, cap: 4, [...]
context.Canceled = error(*errors.errorString) 0x55cbb8
context.background = (*context.emptyCtx)(0xc0000140a0)
context.todo = (*context.emptyCtx)(0xc0000140a8)
context.goroutines = 0
context.cancelCtxKey = 0
context.closedchan = chan struct {} 0/0
math.useFMA = true
encoding/binary.overflow = error(*errors.errorString) 0x55cbc8
reflect.intArgRegs = 9
reflect.floatArgRegs = 15
reflect.floatRegSize = 8
reflect.kindNames = []string len: 27, cap: 27, [...]
reflect.layoutCache = sync.Map {mu: (*sync.Mutex)(0x55d100), read: (*"sync/atomic.Value")(0x55d108), dirty: map[interface {}]*sync.entry nil,...+1 more}
reflect.uint8Type = (*reflect.rtype)(0x4c1160)
reflect.dummy = struct { reflect.b bool; reflect.x interface {} } {b: false, x: interface {} nil}
(dlv) help vars
Print package variables.

	vars [-v] [<regex>]

If regex is specified only package variables with a name matching it will be returned. If -v is specified more information about each package variable will be shown.
(dlv) vars reflect
runtime.reflectOffs = struct { runtime.lock runtime.mutex; runtime.next int32; runtime.m map[int32]unsafe.Pointer; runtime.minv map[unsafe.Pointer]int32 } {lock: (*runtime.mutex)(0x55d0c0), next: 0, m: map[int32]unsafe.Pointer nil,...+1 more}
internal/reflectlite.kindNames = []string len: 27, cap: 27, [...]
reflect.intArgRegs = 9
reflect.floatArgRegs = 15
reflect.floatRegSize = 8
reflect.kindNames = []string len: 27, cap: 27, [...]
reflect.layoutCache = sync.Map {mu: (*sync.Mutex)(0x55d100), read: (*"sync/atomic.Value")(0x55d108), dirty: map[interface {}]*sync.entry nil,...+1 more}
reflect.uint8Type = (*reflect.rtype)(0x4c1160)
reflect.dummy = struct { reflect.b bool; reflect.x interface {} } {b: false, x: interface {} nil}
(dlv) vars main
runtime.main_init_done = chan bool 0/0
runtime.mainStarted = true
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) help goroutines
List program goroutines.

	goroutines [-u|-r|-g|-s] [-t [depth]] [-l] [-with loc expr] [-without loc expr] [-group argument]

Print out info for every goroutine. The flag controls what information is shown along with each goroutine:

	-u	displays location of topmost stackframe in user code (default)
	-r	displays location of topmost stackframe (including frames inside private runtime functions)
	-g	displays location of go instruction that created the goroutine
	-s	displays location of the start function
	-t	displays goroutine's stacktrace (an optional depth value can be specified, default: 10)
	-l	displays goroutine's labels

If no flag is specified the default is -u, i.e. the first frame within the first 30 frames that is not executing a runtime private function.

FILTERING

If -with or -without are specified only goroutines that match the given condition are returned.

To only display goroutines where the specified location contains (or does not contain, for -without and -wo) expr as a substring, use:

	goroutines -with (userloc|curloc|goloc|startloc) expr
	goroutines -w (userloc|curloc|goloc|startloc) expr
	goroutines -without (userloc|curloc|goloc|startloc) expr
	goroutines -wo (userloc|curloc|goloc|startloc) expr
	
To only display goroutines that have (or do not have) the specified label key and value, use:
	

	goroutines -with label key=value
	goroutines -without label key=value
	
To only display goroutines that have (or do not have) the specified label key, use:

	goroutines -with label key
	goroutines -without label key
	
To only display goroutines that are running (or are not running) on a OS thread, use:


	goroutines -with running
	goroutines -without running
	
To only display user (or runtime) goroutines, use:

	goroutines -with user
	goroutines -without user

GROUPING

	goroutines -group (userloc|curloc|goloc|startloc|running|user)

Groups goroutines by the given location, running status or user classification, up to 5 goroutines per group will be displayed as well as the total number of goroutines in the group.

	goroutines -group label key

Groups goroutines by the value of the label with the specified key.

(dlv) goroutines
  Goroutine 1 - User: /usr/local/go/src/runtime/sema.go:56 sync.runtime_Semacquire (0x461885) [semacquire]
  Goroutine 2 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [force gc (idle)]
  Goroutine 3 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [GC sweep wait]
  Goroutine 4 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [GC scavenge wait]
  Goroutine 5 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [finalizer wait]
  Goroutine 7 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [select]
  Goroutine 8 - User: /usr/local/go/src/runtime/sigqueue.go:151 os/signal.signal_recv (0x461b8f) (thread 4134046)
  Goroutine 9 - User: ./main.go:97 main.main.func1 (0x4b7ea9) [chan receive]
* Goroutine 10 - User: ./main.go:38 main.produceValues (0x4b7717) (thread 4136158)
  Goroutine 11 - User: ./main.go:60 main.consumeValues (0x4b7a76) [select]
[10 goroutines]
(dlv) goroutines -r
  Goroutine 1 - Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [semacquire]
  Goroutine 2 - Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [force gc (idle)]
  Goroutine 3 - Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [GC sweep wait]
  Goroutine 4 - Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [GC scavenge wait]
  Goroutine 5 - Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [finalizer wait]
  Goroutine 7 - Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [select]
  Goroutine 8 - Runtime: /usr/local/go/src/runtime/sys_linux_amd64.s:553 runtime.futex (0x466ea3) (thread 4134046)
  Goroutine 9 - Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [chan receive]
* Goroutine 10 - Runtime: ./main.go:38 main.produceValues (0x4b7717) (thread 4136158)
  Goroutine 11 - Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [select]
[10 goroutines]
(dlv) help goroutine
Shows or changes current goroutine

	goroutine
	goroutine <id>
	goroutine <id> <command>

Called without arguments it will show information about the current goroutine.
Called with a single argument it will switch to the specified goroutine.
Called with more arguments it will execute a command on the specified goroutine.
(dlv) goroutine
Thread 4136158 at ./main.go:38
Goroutine 10:
	Runtime: ./main.go:38 main.produceValues (0x4b7717)
	User: ./main.go:38 main.produceValues (0x4b7717)
	Go: ./main.go:112 main.main (0x4b84bc)
	Start: ./main.go:23 main.produceValues (0x4b7500)
(dlv) goroutines
  Goroutine 1 - User: /usr/local/go/src/runtime/sema.go:56 sync.runtime_Semacquire (0x461885) [semacquire]
  Goroutine 2 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [force gc (idle)]
  Goroutine 3 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [GC sweep wait]
  Goroutine 4 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [GC scavenge wait]
  Goroutine 5 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [finalizer wait]
  Goroutine 7 - User: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52) [select]
  Goroutine 8 - User: /usr/local/go/src/runtime/sigqueue.go:151 os/signal.signal_recv (0x461b8f) (thread 4134046)
  Goroutine 9 - User: ./main.go:97 main.main.func1 (0x4b7ea9) [chan receive]
* Goroutine 10 - User: ./main.go:38 main.produceValues (0x4b7717) (thread 4136158)
  Goroutine 11 - User: ./main.go:60 main.consumeValues (0x4b7a76) [select]
[10 goroutines]
(dlv) goroutine 11 list
Goroutine 11 frame 0 at /usr/local/go/src/runtime/proc.go:362 (PC: 0x438e52)
   357:		mp.waittraceev = traceEv
   358:		mp.waittraceskip = traceskip
   359:		releasem(mp)
   360:		// can't do anything that might move the G between Ms here.
   361:		mcall(park_m)
=> 362:	}
   363:	
   364:	// Puts the current goroutine into a waiting state and unlocks the lock.
   365:	// The goroutine can be made runnable again by calling goready(gp).
   366:	func goparkunlock(lock *mutex, reason waitReason, traceEv byte, traceskip int) {
   367:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceEv, traceskip)
(dlv) goroutine 11 stack
0  0x0000000000438e52 in runtime.gopark
   at /usr/local/go/src/runtime/proc.go:362
1  0x0000000000448565 in runtime.selectgo
   at /usr/local/go/src/runtime/select.go:328
2  0x00000000004b7a76 in main.consumeValues
   at ./main.go:60
3  0x00000000004b8635 in main.main.func4
   at ./main.go:115
4  0x0000000000464fe1 in runtime.goexit
   at /usr/local/go/src/runtime/asm_amd64.s:1571
(dlv) goroutine 11
Switched from 10 to 11 (thread 4136158)
(dlv) list
> runtime.gopark() /usr/local/go/src/runtime/proc.go:362 (PC: 0x438e52)
Warning: debugging optimized function
   357:		mp.waittraceev = traceEv
   358:		mp.waittraceskip = traceskip
   359:		releasem(mp)
   360:		// can't do anything that might move the G between Ms here.
   361:		mcall(park_m)
=> 362:	}
   363:	
   364:	// Puts the current goroutine into a waiting state and unlocks the lock.
   365:	// The goroutine can be made runnable again by calling goready(gp).
   366:	func goparkunlock(lock *mutex, reason waitReason, traceEv byte, traceskip int) {
   367:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceEv, traceskip)
(dlv) stack
0  0x0000000000438e52 in runtime.gopark
   at /usr/local/go/src/runtime/proc.go:362
1  0x0000000000448565 in runtime.selectgo
   at /usr/local/go/src/runtime/select.go:328
2  0x00000000004b7a76 in main.consumeValues
   at ./main.go:60
3  0x00000000004b8635 in main.main.func4
   at ./main.go:115
4  0x0000000000464fe1 in runtime.goexit
   at /usr/local/go/src/runtime/asm_amd64.s:1571
(dlv) goroutine
Thread 4136158 at ./main.go:38
Goroutine 11:
	Runtime: /usr/local/go/src/runtime/proc.go:362 runtime.gopark (0x438e52)
	User: ./main.go:60 main.consumeValues (0x4b7a76)
	Go: ./main.go:115 main.main (0x4b85ac)
	Start: ./main.go:53 main.consumeValues (0x4b78e0)
(dlv) threads
  Thread 4134035 at 0x466ea3 /usr/local/go/src/runtime/sys_linux_amd64.s:553 runtime.futex
  Thread 4134043 at 0x4668bd /usr/local/go/src/runtime/sys_linux_amd64.s:149 runtime.usleep
  Thread 4134044 at 0x466ea3 /usr/local/go/src/runtime/sys_linux_amd64.s:553 runtime.futex
  Thread 4134045 at 0x466ea3 /usr/local/go/src/runtime/sys_linux_amd64.s:553 runtime.futex
  Thread 4134046 at 0x466ea3 /usr/local/go/src/runtime/sys_linux_amd64.s:553 runtime.futex
  Thread 4136157 at 0x466ea3 /usr/local/go/src/runtime/sys_linux_amd64.s:553 runtime.futex
* Thread 4136158 at 0x4b7717 ./main.go:38 main.produceValues
(dlv) thread 4136157
Switched from 4136158 to 4136157
(dlv) thread 4136158
Switched from 4136157 to 4136158
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) help stack
Print stack trace.

	[goroutine <n>] [frame <m>] stack [<depth>] [-full] [-offsets] [-defer] [-a <n>] [-adepth <depth>] [-mode <mode>]

	-full		every stackframe is decorated with the value of its local variables and arguments.
	-offsets	prints frame offset of each frame.
	-defer		prints deferred function call stack for each frame.
	-a <n>		prints stacktrace of n ancestors of the selected goroutine (target process must have tracebackancestors enabled)
	-adepth <depth>	configures depth of ancestor stacktrace
	-mode <mode>	specifies the stacktrace mode, possible values are:
			normal	- attempts to automatically switch between cgo frames and go frames
			simple	- disables automatic switch between cgo and go
			fromg	- starts from the registers stored in the runtime.g struct

(dlv) stack -full
0  0x00000000004b7717 in main.produceValues
   at ./main.go:38
       ctx = context.Context(*context.cancelCtx) 0xc0000b0f98
       wg = (*sync.WaitGroup)(0xc0000140b0)
       ch = chan<- main.packet 0/0
       buf = []uint8 len: 64, cap: 64, [...]
       id = 5212667267928779305
       p = main.packet {id: 500, val: []uint8 len: 64, cap: 64, [...]}

1  0x00000000004b86b5 in main.main.func3
   at ./main.go:112

2  0x0000000000464fe1 in runtime.goexit
   at /usr/local/go/src/runtime/asm_amd64.s:1571

(dlv) stack -defer
0  0x00000000004b7717 in main.produceValues
   at ./main.go:38
       defer 1: 0x000000000046d120 in sync.(*WaitGroup).Done
                at /usr/local/go/src/sync/waitgroup.go:104
                deferred by main.produceValues at ./main.go:25

1  0x00000000004b86b5 in main.main.func3
   at ./main.go:112

2  0x0000000000464fe1 in runtime.goexit
   at /usr/local/go/src/runtime/asm_amd64.s:1571

(dlv) bt
0  0x00000000004b7717 in main.produceValues
   at ./main.go:38
1  0x00000000004b86b5 in main.main.func3
   at ./main.go:112
2  0x0000000000464fe1 in runtime.goexit
   at /usr/local/go/src/runtime/asm_amd64.s:1571
(dlv) frame 1 list
Goroutine 10 frame 1 at /home/deparker/Code/ultimate-go-debugging/day-2/session/main.go:112 (PC: 0x4b86b5)
   107:	
   108:		// Add 2 to our WaitGroup since we are starting 2 goroutines.
   109:		wg.Add(2)
   110:	
   111:		// Begin executing goroutine to produce values.
=> 112:		go produceValues(ctx, &wg, ch)
   113:	
   114:		// Begin executing goroutine to consume values.
   115:		go consumeValues(ctx, &wg, ch)
   116:	
   117:		// Wait until our goroutines have finished.
(dlv) list
> main.produceValues() ./main.go:38 (hits total:0) (PC: 0x4b7717)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
(dlv) frame 1 list
Goroutine 10 frame 1 at /home/deparker/Code/ultimate-go-debugging/day-2/session/main.go:112 (PC: 0x4b86b5)
   107:	
   108:		// Add 2 to our WaitGroup since we are starting 2 goroutines.
   109:		wg.Add(2)
   110:	
   111:		// Begin executing goroutine to produce values.
=> 112:		go produceValues(ctx, &wg, ch)
   113:	
   114:		// Begin executing goroutine to consume values.
   115:		go consumeValues(ctx, &wg, ch)
   116:	
   117:		// Wait until our goroutines have finished.
(dlv) up
> main.produceValues() ./main.go:38 (hits total:0) (PC: 0x4b7717)
Frame 1: ./main.go:112 (PC: 4b86b5)
   107:	
   108:		// Add 2 to our WaitGroup since we are starting 2 goroutines.
   109:		wg.Add(2)
   110:	
   111:		// Begin executing goroutine to produce values.
=> 112:		go produceValues(ctx, &wg, ch)
   113:	
   114:		// Begin executing goroutine to consume values.
   115:		go consumeValues(ctx, &wg, ch)
   116:	
   117:		// Wait until our goroutines have finished.
(dlv) list
Goroutine 10 frame 1 at /home/deparker/Code/ultimate-go-debugging/day-2/session/main.go:112 (PC: 0x4b86b5)
   107:	
   108:		// Add 2 to our WaitGroup since we are starting 2 goroutines.
   109:		wg.Add(2)
   110:	
   111:		// Begin executing goroutine to produce values.
=> 112:		go produceValues(ctx, &wg, ch)
   113:	
   114:		// Begin executing goroutine to consume values.
   115:		go consumeValues(ctx, &wg, ch)
   116:	
   117:		// Wait until our goroutines have finished.
(dlv) bt
0  0x00000000004b7717 in main.produceValues
   at ./main.go:38
1  0x00000000004b86b5 in main.main.func3
   at ./main.go:112
2  0x0000000000464fe1 in runtime.goexit
   at /usr/local/go/src/runtime/asm_amd64.s:1571
(dlv) down
> main.produceValues() ./main.go:38 (hits total:0) (PC: 0x4b7717)
Frame 0: ./main.go:38 (PC: 4b7717)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
(dlv) frame 2
> main.produceValues() ./main.go:38 (hits total:0) (PC: 0x4b7717)
Frame 2: /usr/local/go/src/runtime/asm_amd64.s:1571 (PC: 464fe1)
  1566:		RET
  1567:	
  1568:	// The top-most function running on a goroutine
  1569:	// returns to goexit+PCQuantum.
  1570:	TEXT runtime·goexit(SB),NOSPLIT|TOPFRAME,$0-0
=>1571:		BYTE	$0x90	// NOP
  1572:		CALL	runtime·goexit1(SB)	// does not return
  1573:		// traceback from goexit1 must hit code range of goexit
  1574:		BYTE	$0x90	// NOP
  1575:	
  1576:	// This is called from .init_array and follows the platform, not Go, ABI.
(dlv) frame 0
> main.produceValues() ./main.go:38 (hits total:0) (PC: 0x4b7717)
Frame 0: ./main.go:38 (PC: 4b7717)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
(dlv) help
The following commands are available:

Running the program:
    call ------------------------ Resumes process, injecting a function call (EXPERIMENTAL!!!)
    continue (alias: c) --------- Run until breakpoint or program termination.
    next (alias: n) ------------- Step over to next source line.
    rebuild --------------------- Rebuild the target executable and restarts it. It does not work if the executable was not built by delve.
    restart (alias: r) ---------- Restart process.
    step (alias: s) ------------- Single step through program.
    step-instruction (alias: si)  Single step a single cpu instruction.
    stepout (alias: so) --------- Step out of the current function.

Manipulating breakpoints:
    break (alias: b) ------- Sets a breakpoint.
    breakpoints (alias: bp)  Print out info for active breakpoints.
    clear ------------------ Deletes breakpoint.
    clearall --------------- Deletes multiple breakpoints.
    condition (alias: cond)  Set breakpoint condition.
    on --------------------- Executes a command when a breakpoint is hit.
    toggle ----------------- Toggles on or off a breakpoint.
    trace (alias: t) ------- Set tracepoint.
    watch ------------------ Set watchpoint.

Viewing program variables and memory:
    args ----------------- Print function arguments.
    display -------------- Print value of an expression every time the program stops.
    examinemem (alias: x)  Examine raw memory at the given address.
    locals --------------- Print local variables.
    print (alias: p) ----- Evaluate an expression.
    regs ----------------- Print contents of CPU registers.
    set ------------------ Changes the value of a variable.
    vars ----------------- Print package variables.
    whatis --------------- Prints type of an expression.

Listing and switching between threads and goroutines:
    goroutine (alias: gr) -- Shows or changes current goroutine
    goroutines (alias: grs)  List program goroutines.
    thread (alias: tr) ----- Switch to the specified thread.
    threads ---------------- Print out info for every traced thread.

Viewing the call stack and selecting frames:
    deferred --------- Executes command in the context of a deferred call.
    down ------------- Move the current frame down.
    frame ------------ Set the current frame, or execute command on a different frame.
    stack (alias: bt)  Print stack trace.
    up --------------- Move the current frame up.

Other commands:
    config --------------------- Changes configuration parameters.
    disassemble (alias: disass)  Disassembler.
    dump ----------------------- Creates a core dump from the current process state
    edit (alias: ed) ----------- Open where you are in $DELVE_EDITOR or $EDITOR
    exit (alias: quit | q) ----- Exit the debugger.
    funcs ---------------------- Print list of functions.
    help (alias: h) ------------ Prints the help message.
    libraries ------------------ List loaded dynamic libraries
    list (alias: ls | l) ------- Show source code.
    source --------------------- Executes a file containing a list of delve commands
    sources -------------------- Print list of source files.
    transcript ----------------- Appends command output to a file.
    types ---------------------- Print list of types

Type help followed by a command for full documentation.
(dlv) sources main
/home/deparker/Code/ultimate-go-debugging/day-2/session/main.go
/usr/local/go/src/math/remainder.go
(dlv) types packet
*hchan<main.packet>
*main.packet
*struct { F uintptr; main..autotmp_10 context.Context; main..autotmp_11 *sync.WaitGroup; main..autotmp_12 chan<- main.packet }
*struct { F uintptr; main..autotmp_13 context.Context; main..autotmp_14 *sync.WaitGroup; main..autotmp_15 <-chan main.packet }
*sudog<main.packet>
<-chan main.packet
[0]main.packet
[]main.packet
chan main.packet
chan<- main.packet
hchan<main.packet>
main.packet
noalg.struct { F uintptr; main..autotmp_10 context.Context; main..autotmp_11 *sync.WaitGroup; main..autotmp_12 chan<- main.packet }
noalg.struct { F uintptr; main..autotmp_13 context.Context; main..autotmp_14 *sync.WaitGroup; main..autotmp_15 <-chan main.packet }
sudog<main.packet>
waitq<main.packet>
(dlv) libraries
(dlv) exit
